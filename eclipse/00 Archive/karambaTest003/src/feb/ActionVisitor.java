/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class ActionVisitor extends ElementVisitor {
  private long swigCPtr;

  protected ActionVisitor(long cPtr, boolean cMemoryOwn) {
    super(karambaJNI.ActionVisitor_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ActionVisitor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_ActionVisitor(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public ActionVisitor(VectSizeT lc_inds, long n_samples, double lc_fac) {
    this(karambaJNI.new_ActionVisitor__SWIG_1(VectSizeT.getCPtr(lc_inds), lc_inds, n_samples, lc_fac), true);
  }

  public ActionVisitor(VectSizeT lc_inds, long n_samples) {
    this(karambaJNI.new_ActionVisitor__SWIG_2(VectSizeT.getCPtr(lc_inds), lc_inds, n_samples), true);
  }

  public ActionVisitor(VectSizeT lc_inds) {
    this(karambaJNI.new_ActionVisitor__SWIG_3(VectSizeT.getCPtr(lc_inds), lc_inds), true);
  }

  public void disableForceComp(Truss3DState.CSF force_dof) {
    karambaJNI.ActionVisitor_disableForceComp__SWIG_0(swigCPtr, this, force_dof.swigValue());
  }

  public void disableForceComp(Beam3DState.CSF force_dof) {
    karambaJNI.ActionVisitor_disableForceComp__SWIG_1(swigCPtr, this, force_dof.swigValue());
  }

  public void disableForceComp(Surface3DState.CSF force_dof) {
    karambaJNI.ActionVisitor_disableForceComp__SWIG_2(swigCPtr, this, force_dof.swigValue());
  }

  public SWIGTYPE_p_std__vectorT_VecReal_t action(Element elem) {
    return new SWIGTYPE_p_std__vectorT_VecReal_t(karambaJNI.ActionVisitor_action(swigCPtr, this, Element.getCPtr(elem), elem), false);
  }

  public void visit(VectElem elems, VectReal lc_fac) {
    karambaJNI.ActionVisitor_visit__SWIG_0(swigCPtr, this, VectElem.getCPtr(elems), elems, VectReal.getCPtr(lc_fac), lc_fac);
  }

  public void visit(VectElem elems) {
    karambaJNI.ActionVisitor_visit__SWIG_1(swigCPtr, this, VectElem.getCPtr(elems), elems);
  }

  public void visit(Beam3D elem) {
    karambaJNI.ActionVisitor_visit__SWIG_2(swigCPtr, this, Beam3D.getCPtr(elem), elem);
  }

  public void visit(Truss3D elem) {
    karambaJNI.ActionVisitor_visit__SWIG_3(swigCPtr, this, Truss3D.getCPtr(elem), elem);
  }

  public void visit(Spring3D elem) {
    karambaJNI.ActionVisitor_visit__SWIG_4(swigCPtr, this, Spring3D.getCPtr(elem), elem);
  }

  public void visit(TriShell3D elem) {
    karambaJNI.ActionVisitor_visit__SWIG_5(swigCPtr, this, TriShell3D.getCPtr(elem), elem);
  }

  public long nLoadCases() {
    return karambaJNI.ActionVisitor_nLoadCases(swigCPtr, this);
  }

  public long modelLoadCaseInd(long ind) {
    return karambaJNI.ActionVisitor_modelLoadCaseInd(swigCPtr, this, ind);
  }

  public VectReal loadCaseScalingFactors() {
    return new VectReal(karambaJNI.ActionVisitor_loadCaseScalingFactors(swigCPtr, this), false);
  }

}
