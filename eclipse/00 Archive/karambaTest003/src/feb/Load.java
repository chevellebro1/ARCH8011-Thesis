/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class Load extends DeepCloneable {
  private long swigCPtr;

  protected Load(long cPtr, boolean cMemoryOwn) {
    super(karambaJNI.Load_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Load obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_Load(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public DeepCloneable clone(SWIGTYPE_p_std__mapT_void_const_p_void_p_t mapDict) {
    long cPtr = karambaJNI.Load_clone__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__mapT_void_const_p_void_p_t.getCPtr(mapDict));
    return (cPtr == 0) ? null : new Load(cPtr, false);
  }

  public DeepCloneable clone() {
    long cPtr = karambaJNI.Load_clone__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new Load(cPtr, false);
  }

  public void update(CooSys coosys) {
    karambaJNI.Load_update(swigCPtr, this, CooSys.getCPtr(coosys), coosys);
  }

  public final static class loadOrientation {
    public final static Load.loadOrientation local = new Load.loadOrientation("local");
    public final static Load.loadOrientation global = new Load.loadOrientation("global");
    public final static Load.loadOrientation proj = new Load.loadOrientation("proj");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static loadOrientation swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + loadOrientation.class + " with value " + swigValue);
    }

    private loadOrientation(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private loadOrientation(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private loadOrientation(String swigName, loadOrientation swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static loadOrientation[] swigValues = { local, global, proj };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class DOF {
    public final static Load.DOF x_t = new Load.DOF("x_t");
    public final static Load.DOF y_t = new Load.DOF("y_t");
    public final static Load.DOF z_t = new Load.DOF("z_t");
    public final static Load.DOF x_r = new Load.DOF("x_r");
    public final static Load.DOF y_r = new Load.DOF("y_r");
    public final static Load.DOF z_r = new Load.DOF("z_r");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static DOF swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + DOF.class + " with value " + swigValue);
    }

    private DOF(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private DOF(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private DOF(String swigName, DOF swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static DOF[] swigValues = { x_t, y_t, z_t, x_r, y_r, z_r };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
