/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class ElementState extends DeepCloneable {
  private long swigCPtr;

  protected ElementState(long cPtr, boolean cMemoryOwn) {
    super(karambaJNI.ElementState_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ElementState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_ElementState(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void copy(ElementState orig, SWIGTYPE_p_std__mapT_void_const_p_void_p_t mapDict) {
    karambaJNI.ElementState_copy__SWIG_0(swigCPtr, this, ElementState.getCPtr(orig), orig, SWIGTYPE_p_std__mapT_void_const_p_void_p_t.getCPtr(mapDict));
  }

  public void copy(ElementState orig) {
    karambaJNI.ElementState_copy__SWIG_1(swigCPtr, this, ElementState.getCPtr(orig), orig);
  }

  public DeepCloneable clone(SWIGTYPE_p_std__mapT_void_const_p_void_p_t mapDict) {
    long cPtr = karambaJNI.ElementState_clone__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__mapT_void_const_p_void_p_t.getCPtr(mapDict));
    return (cPtr == 0) ? null : new ElementState(cPtr, false);
  }

  public DeepCloneable clone() {
    long cPtr = karambaJNI.ElementState_clone__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new ElementState(cPtr, false);
  }

  public long nNodes() {
    return karambaJNI.ElementState_nNodes(swigCPtr, this);
  }

  public long nNodalDofs() {
    return karambaJNI.ElementState_nNodalDofs(swigCPtr, this);
  }

  public long lcNum() {
    return karambaJNI.ElementState_lcNum(swigCPtr, this);
  }

  public double elastEnergy(long lc) {
    return karambaJNI.ElementState_elastEnergy__SWIG_0(swigCPtr, this, lc);
  }

  public double elastEnergy(long lc, double energ) {
    return karambaJNI.ElementState_elastEnergy__SWIG_1(swigCPtr, this, lc, energ);
  }

  public SWIGTYPE_p_VecReal disp(long lc, long ind) {
    return new SWIGTYPE_p_VecReal(karambaJNI.ElementState_disp(swigCPtr, this, lc, ind), false);
  }

  public SWIGTYPE_p_VecReal elemDisp(long lc) {
    return new SWIGTYPE_p_VecReal(karambaJNI.ElementState_elemDisp(swigCPtr, this, lc), true);
  }

  public SWIGTYPE_p_VecReal force(long lc, long ind) {
    return new SWIGTYPE_p_VecReal(karambaJNI.ElementState_force(swigCPtr, this, lc, ind), false);
  }

  public void subtractFint(long lc, SWIGTYPE_p_VecReal elem_force) {
    karambaJNI.ElementState_subtractFint(swigCPtr, this, lc, SWIGTYPE_p_VecReal.getCPtr(elem_force));
  }

  public SWIGTYPE_p_VecReal globalForce(long lc, long ind) {
    return new SWIGTYPE_p_VecReal(karambaJNI.ElementState_globalForce(swigCPtr, this, lc, ind), true);
  }

  public void updateDisplacements(long lc, long ind, SWIGTYPE_p_VecReal global_disp) {
    karambaJNI.ElementState_updateDisplacements(swigCPtr, this, lc, ind, SWIGTYPE_p_VecReal.getCPtr(global_disp));
  }

  public void setEccentricity(SWIGTYPE_p_MatReal T_c2e) {
    karambaJNI.ElementState_setEccentricity(swigCPtr, this, SWIGTYPE_p_MatReal.getCPtr(T_c2e));
  }

  public void clear() {
    karambaJNI.ElementState_clear(swigCPtr, this);
  }

  public void scale(double fac) {
    karambaJNI.ElementState_scale(swigCPtr, this, fac);
  }

  public void add(ElementState other) {
    karambaJNI.ElementState_add(swigCPtr, this, ElementState.getCPtr(other), other);
  }

}
