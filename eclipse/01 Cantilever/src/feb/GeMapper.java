/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class GeMapper {
  private long swigCPtr;
  public boolean swigCMemOwn;

  public GeMapper(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(GeMapper obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_GeMapper(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public GeMapper() {
    this(karambaJNI.new_GeMapper__SWIG_0(), true);
  }

  public GeMapper(GeMapper arg) {
    this(karambaJNI.new_GeMapper__SWIG_1(GeMapper.getCPtr(arg), arg), true);
  }

  public GeMapper clone(SWIGTYPE_p_std__mapT_void_const_p_void_p_t mapDict) {
    long cPtr = karambaJNI.GeMapper_clone__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__mapT_void_const_p_void_p_t.getCPtr(mapDict));
    return (cPtr == 0) ? null : new GeMapper(cPtr, false);
  }

  public GeMapper clone() {
    long cPtr = karambaJNI.GeMapper_clone__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new GeMapper(cPtr, false);
  }

  public void copy(GeMapper orig) {
    karambaJNI.GeMapper_copy(swigCPtr, this, GeMapper.getCPtr(orig), orig);
  }

  public void map(GeModel _gemodel, VectReal _params) {
    karambaJNI.GeMapper_map(swigCPtr, this, GeModel.getCPtr(_gemodel), _gemodel, VectReal.getCPtr(_params), _params);
  }

  public void add(GeMapping _mapping) {
    karambaJNI.GeMapper_add(swigCPtr, this, GeMapping.getCPtr(_mapping), _mapping);
  }

  public long numberOfParameters() {
    return karambaJNI.GeMapper_numberOfParameters(swigCPtr, this);
  }

}
