/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class PlasticCroSecState_EC3_Simplified extends CroSecState {
  private long swigCPtr;

  protected PlasticCroSecState_EC3_Simplified(long cPtr, boolean cMemoryOwn) {
    super(karambaJNI.PlasticCroSecState_EC3_Simplified_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PlasticCroSecState_EC3_Simplified obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_PlasticCroSecState_EC3_Simplified(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public PlasticCroSecState_EC3_Simplified(boolean can_buckle, double target_util) {
    this(karambaJNI.new_PlasticCroSecState_EC3_Simplified__SWIG_0(can_buckle, target_util), true);
  }

  public PlasticCroSecState_EC3_Simplified(boolean can_buckle) {
    this(karambaJNI.new_PlasticCroSecState_EC3_Simplified__SWIG_1(can_buckle), true);
  }

  public PlasticCroSecState_EC3_Simplified() {
    this(karambaJNI.new_PlasticCroSecState_EC3_Simplified__SWIG_2(), true);
  }

  public PlasticCroSecState_EC3_Simplified(VectElem elems, boolean can_buckle, double target_util) {
    this(karambaJNI.new_PlasticCroSecState_EC3_Simplified__SWIG_3(VectElem.getCPtr(elems), elems, can_buckle, target_util), true);
  }

  public PlasticCroSecState_EC3_Simplified(VectElem elems, boolean can_buckle) {
    this(karambaJNI.new_PlasticCroSecState_EC3_Simplified__SWIG_4(VectElem.getCPtr(elems), elems, can_buckle), true);
  }

  public PlasticCroSecState_EC3_Simplified(VectElem elems) {
    this(karambaJNI.new_PlasticCroSecState_EC3_Simplified__SWIG_5(VectElem.getCPtr(elems), elems), true);
  }

  public PlasticCroSecState_EC3_Simplified(PlasticCroSecState_EC3_Simplified arg) {
    this(karambaJNI.new_PlasticCroSecState_EC3_Simplified__SWIG_6(PlasticCroSecState_EC3_Simplified.getCPtr(arg), arg), true);
  }

  public PlasticCroSecState_EC3_Simplified clone(SWIGTYPE_p_std__mapT_void_const_p_void_p_t mapDict) {
    long cPtr = karambaJNI.PlasticCroSecState_EC3_Simplified_clone__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__mapT_void_const_p_void_p_t.getCPtr(mapDict));
    return (cPtr == 0) ? null : new PlasticCroSecState_EC3_Simplified(cPtr, false);
  }

  public PlasticCroSecState_EC3_Simplified clone() {
    long cPtr = karambaJNI.PlasticCroSecState_EC3_Simplified_clone__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new PlasticCroSecState_EC3_Simplified(cPtr, false);
  }

  public void copy(CroSecState orig) {
    karambaJNI.PlasticCroSecState_EC3_Simplified_copy(swigCPtr, this, CroSecState.getCPtr(orig), orig);
  }

  public void init(VectElem elems, boolean can_buckle) {
    karambaJNI.PlasticCroSecState_EC3_Simplified_init(swigCPtr, this, VectElem.getCPtr(elems), elems, can_buckle);
  }

}
