/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class CroSecStateImp_Plastic_Shell extends CroSecStateImp_LinearElastic_Shell {
  private long swigCPtr;

  protected CroSecStateImp_Plastic_Shell(long cPtr, boolean cMemoryOwn) {
    super(karambaJNI.CroSecStateImp_Plastic_Shell_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CroSecStateImp_Plastic_Shell obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_CroSecStateImp_Plastic_Shell(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public CroSecStateImp_Plastic_Shell() {
    this(karambaJNI.new_CroSecStateImp_Plastic_Shell(), true);
  }

  public CroSecStateImp clone(SWIGTYPE_p_std__mapT_void_const_p_void_p_t mapDict) {
    long cPtr = karambaJNI.CroSecStateImp_Plastic_Shell_clone__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__mapT_void_const_p_void_p_t.getCPtr(mapDict));
    return (cPtr == 0) ? null : new CroSecStateImp_Plastic_Shell(cPtr, false);
  }

  public CroSecStateImp clone() {
    long cPtr = karambaJNI.CroSecStateImp_Plastic_Shell_clone__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new CroSecStateImp_Plastic_Shell(cPtr, false);
  }

  public void accept(CroSecStateVisitor visitor) {
    karambaJNI.CroSecStateImp_Plastic_Shell_accept(swigCPtr, this, CroSecStateVisitor.getCPtr(visitor), visitor);
  }

}
