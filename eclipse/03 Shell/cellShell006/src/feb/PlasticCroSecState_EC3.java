/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class PlasticCroSecState_EC3 extends ElasticCroSecState_EC3 {
  private long swigCPtr;

  protected PlasticCroSecState_EC3(long cPtr, boolean cMemoryOwn) {
    super(karambaJNI.PlasticCroSecState_EC3_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PlasticCroSecState_EC3 obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_PlasticCroSecState_EC3(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public PlasticCroSecState_EC3(boolean can_buckle, double target_util, double gamma_m0, double gamma_m1, double zg, double eps) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_0(can_buckle, target_util, gamma_m0, gamma_m1, zg, eps), true);
  }

  public PlasticCroSecState_EC3(boolean can_buckle, double target_util, double gamma_m0, double gamma_m1, double zg) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_1(can_buckle, target_util, gamma_m0, gamma_m1, zg), true);
  }

  public PlasticCroSecState_EC3(boolean can_buckle, double target_util, double gamma_m0, double gamma_m1) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_2(can_buckle, target_util, gamma_m0, gamma_m1), true);
  }

  public PlasticCroSecState_EC3(boolean can_buckle, double target_util, double gamma_m0) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_3(can_buckle, target_util, gamma_m0), true);
  }

  public PlasticCroSecState_EC3(boolean can_buckle, double target_util) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_4(can_buckle, target_util), true);
  }

  public PlasticCroSecState_EC3(boolean can_buckle) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_5(can_buckle), true);
  }

  public PlasticCroSecState_EC3() {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_6(), true);
  }

  public PlasticCroSecState_EC3(VectElem elems, boolean can_buckle, double target_util, double gamma_m0, double gamma_m1, double zg, double eps) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_7(VectElem.getCPtr(elems), elems, can_buckle, target_util, gamma_m0, gamma_m1, zg, eps), true);
  }

  public PlasticCroSecState_EC3(VectElem elems, boolean can_buckle, double target_util, double gamma_m0, double gamma_m1, double zg) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_8(VectElem.getCPtr(elems), elems, can_buckle, target_util, gamma_m0, gamma_m1, zg), true);
  }

  public PlasticCroSecState_EC3(VectElem elems, boolean can_buckle, double target_util, double gamma_m0, double gamma_m1) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_9(VectElem.getCPtr(elems), elems, can_buckle, target_util, gamma_m0, gamma_m1), true);
  }

  public PlasticCroSecState_EC3(VectElem elems, boolean can_buckle, double target_util, double gamma_m0) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_10(VectElem.getCPtr(elems), elems, can_buckle, target_util, gamma_m0), true);
  }

  public PlasticCroSecState_EC3(VectElem elems, boolean can_buckle, double target_util) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_11(VectElem.getCPtr(elems), elems, can_buckle, target_util), true);
  }

  public PlasticCroSecState_EC3(VectElem elems, boolean can_buckle) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_12(VectElem.getCPtr(elems), elems, can_buckle), true);
  }

  public PlasticCroSecState_EC3(VectElem elems) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_13(VectElem.getCPtr(elems), elems), true);
  }

  public PlasticCroSecState_EC3(PlasticCroSecState_EC3 arg) {
    this(karambaJNI.new_PlasticCroSecState_EC3__SWIG_14(PlasticCroSecState_EC3.getCPtr(arg), arg), true);
  }

  public ElasticCroSecState_EC3 clone(SWIGTYPE_p_std__mapT_void_const_p_void_p_t mapDict) {
    long cPtr = karambaJNI.PlasticCroSecState_EC3_clone__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__mapT_void_const_p_void_p_t.getCPtr(mapDict));
    return (cPtr == 0) ? null : new PlasticCroSecState_EC3(cPtr, false);
  }

  public ElasticCroSecState_EC3 clone() {
    long cPtr = karambaJNI.PlasticCroSecState_EC3_clone__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new PlasticCroSecState_EC3(cPtr, false);
  }

  public void copy(CroSecState orig) {
    karambaJNI.PlasticCroSecState_EC3_copy(swigCPtr, this, CroSecState.getCPtr(orig), orig);
  }

  public void init(VectElem elems, boolean can_buckle) {
    karambaJNI.PlasticCroSecState_EC3_init(swigCPtr, this, VectElem.getCPtr(elems), elems, can_buckle);
  }

}
