/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class CroSecState {
  private long swigCPtr;
  public boolean swigCMemOwn;

  public CroSecState(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(CroSecState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_CroSecState(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void copy(CroSecState orig) {
    karambaJNI.CroSecState_copy(swigCPtr, this, CroSecState.getCPtr(orig), orig);
  }

  public double utilization(ActionVisitor action, BucklingLength bkl_len, ElementCroSec crosec) {
    return karambaJNI.CroSecState_utilization(swigCPtr, this, ActionVisitor.getCPtr(action), action, BucklingLength.getCPtr(bkl_len), bkl_len, ElementCroSec.getCPtr(crosec), crosec);
  }

  public boolean isSufficient(ActionVisitor action, BucklingLength bkl_len, ElementCroSec crosec) {
    return karambaJNI.CroSecState_isSufficient(swigCPtr, this, ActionVisitor.getCPtr(action), action, BucklingLength.getCPtr(bkl_len), bkl_len, ElementCroSec.getCPtr(crosec), crosec);
  }

  public ElementCroSec getElementCroSec() {
    long cPtr = karambaJNI.CroSecState_getElementCroSec(swigCPtr, this);
    return (cPtr == 0) ? null : new ElementCroSec(cPtr, false);
  }

  public void setElementCroSec(ElementCroSec _crosec) {
    karambaJNI.CroSecState_setElementCroSec(swigCPtr, this, ElementCroSec.getCPtr(_crosec), _crosec);
  }

  public VectElem elems() {
    return new VectElem(karambaJNI.CroSecState_elems(swigCPtr, this), false);
  }

  public void accept(CroSecStateVisitor visitor) {
    karambaJNI.CroSecState_accept(swigCPtr, this, CroSecStateVisitor.getCPtr(visitor), visitor);
  }

  public void init(VectElem elems, boolean can_buckle) {
    karambaJNI.CroSecState_init(swigCPtr, this, VectElem.getCPtr(elems), elems, can_buckle);
  }

}
