/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class ElemSLDimElastic extends CroSecDesigner {
  private long swigCPtr;

  protected ElemSLDimElastic(long cPtr, boolean cMemoryOwn) {
    super(karambaJNI.ElemSLDimElastic_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ElemSLDimElastic obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_ElemSLDimElastic(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public ElemSLDimElastic(Response response, long max_ULS_design_iter, long max_SLS_design_iter, double lim_util, long n_samples) {
    this(karambaJNI.new_ElemSLDimElastic__SWIG_0(Response.getCPtr(response), response, max_ULS_design_iter, max_SLS_design_iter, lim_util, n_samples), true);
  }

  public ElemSLDimElastic(Response response, long max_ULS_design_iter, long max_SLS_design_iter, double lim_util) {
    this(karambaJNI.new_ElemSLDimElastic__SWIG_1(Response.getCPtr(response), response, max_ULS_design_iter, max_SLS_design_iter, lim_util), true);
  }

  public ElemSLDimElastic(Response response, long max_ULS_design_iter, long max_SLS_design_iter) {
    this(karambaJNI.new_ElemSLDimElastic__SWIG_2(Response.getCPtr(response), response, max_ULS_design_iter, max_SLS_design_iter), true);
  }

  public ElemSLDimElastic(Response response, long max_ULS_design_iter) {
    this(karambaJNI.new_ElemSLDimElastic__SWIG_3(Response.getCPtr(response), response, max_ULS_design_iter), true);
  }

  public ElemSLDimElastic(Response response) {
    this(karambaJNI.new_ElemSLDimElastic__SWIG_4(Response.getCPtr(response), response), true);
  }

  public ElemSLDimElastic clone(SWIGTYPE_p_std__mapT_void_const_p_void_p_t mapDict) {
    long cPtr = karambaJNI.ElemSLDimElastic_clone__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__mapT_void_const_p_void_p_t.getCPtr(mapDict));
    return (cPtr == 0) ? null : new ElemSLDimElastic(cPtr, false);
  }

  public ElemSLDimElastic clone() {
    long cPtr = karambaJNI.ElemSLDimElastic_clone__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new ElemSLDimElastic(cPtr, false);
  }

  public void add(Model model) {
    karambaJNI.ElemSLDimElastic_add__SWIG_0(swigCPtr, this, Model.getCPtr(model), model);
  }

  public void add(VectCroSec element_props) {
    karambaJNI.ElemSLDimElastic_add__SWIG_1(swigCPtr, this, VectCroSec.getCPtr(element_props), element_props);
  }

  public void add(ElementCroSec crosec) {
    karambaJNI.ElemSLDimElastic_add__SWIG_2(swigCPtr, this, ElementCroSec.getCPtr(crosec), crosec);
  }

  public void add(Element element, boolean can_buckle) {
    karambaJNI.ElemSLDimElastic_add__SWIG_3(swigCPtr, this, Element.getCPtr(element), element, can_buckle);
  }

  public void add(Element element) {
    karambaJNI.ElemSLDimElastic_add__SWIG_4(swigCPtr, this, Element.getCPtr(element), element);
  }

  public void add(VectElem elements, boolean can_buckle) {
    karambaJNI.ElemSLDimElastic_add__SWIG_5(swigCPtr, this, VectElem.getCPtr(elements), elements, can_buckle);
  }

  public void add(VectElem elements) {
    karambaJNI.ElemSLDimElastic_add__SWIG_6(swigCPtr, this, VectElem.getCPtr(elements), elements);
  }

  public double utilization(ElementStraightLine beam, boolean can_buckle, Beam3DCroSec props, long lc) {
    return karambaJNI.ElemSLDimElastic_utilization(swigCPtr, this, ElementStraightLine.getCPtr(beam), beam, can_buckle, Beam3DCroSec.getCPtr(props), props, lc);
  }

  public double bucklingLengthZ(long ind) {
    return karambaJNI.ElemSLDimElastic_bucklingLengthZ(swigCPtr, this, ind);
  }

  public double bucklingLengthY(long ind) {
    return karambaJNI.ElemSLDimElastic_bucklingLengthY(swigCPtr, this, ind);
  }

}
