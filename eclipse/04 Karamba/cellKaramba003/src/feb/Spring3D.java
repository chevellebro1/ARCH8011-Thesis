/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class Spring3D extends ElementStraightLine {
  private long swigCPtr;

  protected Spring3D(long cPtr, boolean cMemoryOwn) {
    super(karambaJNI.Spring3D_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Spring3D obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_Spring3D(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props, double theta, int lc_num, Eccentricity ecce_i, Eccentricity ecce_k) {
    this(karambaJNI.new_Spring3D__SWIG_1(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props, theta, lc_num, Eccentricity.getCPtr(ecce_i), ecce_i, Eccentricity.getCPtr(ecce_k), ecce_k), true);
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props, double theta, int lc_num, Eccentricity ecce_i) {
    this(karambaJNI.new_Spring3D__SWIG_2(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props, theta, lc_num, Eccentricity.getCPtr(ecce_i), ecce_i), true);
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props, double theta, int lc_num) {
    this(karambaJNI.new_Spring3D__SWIG_3(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props, theta, lc_num), true);
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props, double theta) {
    this(karambaJNI.new_Spring3D__SWIG_4(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props, theta), true);
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props) {
    this(karambaJNI.new_Spring3D__SWIG_5(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props), true);
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props, Vec3d dir, double theta, int lc_num, Eccentricity ecce_i, Eccentricity ecce_k) {
    this(karambaJNI.new_Spring3D__SWIG_6(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props, Vec3d.getCPtr(dir), dir, theta, lc_num, Eccentricity.getCPtr(ecce_i), ecce_i, Eccentricity.getCPtr(ecce_k), ecce_k), true);
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props, Vec3d dir, double theta, int lc_num, Eccentricity ecce_i) {
    this(karambaJNI.new_Spring3D__SWIG_7(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props, Vec3d.getCPtr(dir), dir, theta, lc_num, Eccentricity.getCPtr(ecce_i), ecce_i), true);
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props, Vec3d dir, double theta, int lc_num) {
    this(karambaJNI.new_Spring3D__SWIG_8(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props, Vec3d.getCPtr(dir), dir, theta, lc_num), true);
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props, Vec3d dir, double theta) {
    this(karambaJNI.new_Spring3D__SWIG_9(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props, Vec3d.getCPtr(dir), dir, theta), true);
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props, Vec3d dir) {
    this(karambaJNI.new_Spring3D__SWIG_10(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props, Vec3d.getCPtr(dir), dir), true);
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props, double dir_x, double dir_y, double dir_z, double theta, int lc_num, Eccentricity ecce_i, Eccentricity ecce_k) {
    this(karambaJNI.new_Spring3D__SWIG_11(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props, dir_x, dir_y, dir_z, theta, lc_num, Eccentricity.getCPtr(ecce_i), ecce_i, Eccentricity.getCPtr(ecce_k), ecce_k), true);
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props, double dir_x, double dir_y, double dir_z, double theta, int lc_num, Eccentricity ecce_i) {
    this(karambaJNI.new_Spring3D__SWIG_12(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props, dir_x, dir_y, dir_z, theta, lc_num, Eccentricity.getCPtr(ecce_i), ecce_i), true);
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props, double dir_x, double dir_y, double dir_z, double theta, int lc_num) {
    this(karambaJNI.new_Spring3D__SWIG_13(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props, dir_x, dir_y, dir_z, theta, lc_num), true);
  }

  public Spring3D(Vertex node_i, Vertex node_k, Material mat, Spring3DProperties props, double dir_x, double dir_y, double dir_z, double theta) {
    this(karambaJNI.new_Spring3D__SWIG_14(Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, Material.getCPtr(mat), mat, Spring3DProperties.getCPtr(props), props, dir_x, dir_y, dir_z, theta), true);
  }

  public Spring3D(Model model, Vertex node_i, Vertex node_k, long mat_ind, long props_ind, double dir_x, double dir_y, double dir_z, double theta, int lc_num, Eccentricity ecce_i, Eccentricity ecce_k) {
    this(karambaJNI.new_Spring3D__SWIG_15(Model.getCPtr(model), model, Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, mat_ind, props_ind, dir_x, dir_y, dir_z, theta, lc_num, Eccentricity.getCPtr(ecce_i), ecce_i, Eccentricity.getCPtr(ecce_k), ecce_k), true);
  }

  public Spring3D(Model model, Vertex node_i, Vertex node_k, long mat_ind, long props_ind, double dir_x, double dir_y, double dir_z, double theta, int lc_num, Eccentricity ecce_i) {
    this(karambaJNI.new_Spring3D__SWIG_16(Model.getCPtr(model), model, Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, mat_ind, props_ind, dir_x, dir_y, dir_z, theta, lc_num, Eccentricity.getCPtr(ecce_i), ecce_i), true);
  }

  public Spring3D(Model model, Vertex node_i, Vertex node_k, long mat_ind, long props_ind, double dir_x, double dir_y, double dir_z, double theta, int lc_num) {
    this(karambaJNI.new_Spring3D__SWIG_17(Model.getCPtr(model), model, Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, mat_ind, props_ind, dir_x, dir_y, dir_z, theta, lc_num), true);
  }

  public Spring3D(Model model, Vertex node_i, Vertex node_k, long mat_ind, long props_ind, double dir_x, double dir_y, double dir_z, double theta) {
    this(karambaJNI.new_Spring3D__SWIG_18(Model.getCPtr(model), model, Vertex.getCPtr(node_i), node_i, Vertex.getCPtr(node_k), node_k, mat_ind, props_ind, dir_x, dir_y, dir_z, theta), true);
  }

  public Spring3D(Spring3D arg, SWIGTYPE_p_std__mapT_void_const_p_void_p_t mapDict) {
    this(karambaJNI.new_Spring3D__SWIG_19(Spring3D.getCPtr(arg), arg, SWIGTYPE_p_std__mapT_void_const_p_void_p_t.getCPtr(mapDict)), true);
  }

  public Spring3D(Spring3D arg) {
    this(karambaJNI.new_Spring3D__SWIG_20(Spring3D.getCPtr(arg), arg), true);
  }

  public DeepCloneable clone(SWIGTYPE_p_std__mapT_void_const_p_void_p_t mapDict) {
    long cPtr = karambaJNI.Spring3D_clone__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__mapT_void_const_p_void_p_t.getCPtr(mapDict));
    return (cPtr == 0) ? null : new Spring3D(cPtr, false);
  }

  public DeepCloneable clone() {
    long cPtr = karambaJNI.Spring3D_clone__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new Spring3D(cPtr, false);
  }

  public void copy(Element orig, SWIGTYPE_p_std__mapT_void_const_p_void_p_t mapDict) {
    karambaJNI.Spring3D_copy__SWIG_0(swigCPtr, this, Element.getCPtr(orig), orig, SWIGTYPE_p_std__mapT_void_const_p_void_p_t.getCPtr(mapDict));
  }

  public void copy(Element orig) {
    karambaJNI.Spring3D_copy__SWIG_1(swigCPtr, this, Element.getCPtr(orig), orig);
  }

  public SWIGTYPE_p_MatReal StiffnessMatrix_l2l() {
    return new SWIGTYPE_p_MatReal(karambaJNI.Spring3D_StiffnessMatrix_l2l(swigCPtr, this), true);
  }

  public SWIGTYPE_p_augMatT_MatSymReal_t elastStiffMatrix_g2g() {
    return new SWIGTYPE_p_augMatT_MatSymReal_t(karambaJNI.Spring3D_elastStiffMatrix_g2g(swigCPtr, this), true);
  }

  public SWIGTYPE_p_augMatT_MatSymReal_t massMatrix_g2g() {
    return new SWIGTYPE_p_augMatT_MatSymReal_t(karambaJNI.Spring3D_massMatrix_g2g(swigCPtr, this), true);
  }

  public SWIGTYPE_p_augMatT_MatSymReal_t geomStiffMatrix_g2g() {
    return new SWIGTYPE_p_augMatT_MatSymReal_t(karambaJNI.Spring3D_geomStiffMatrix_g2g(swigCPtr, this), true);
  }

  public SWIGTYPE_p_augMatT_MatSymReal_t tangentStiffMatrix_g2g() {
    return new SWIGTYPE_p_augMatT_MatSymReal_t(karambaJNI.Spring3D_tangentStiffMatrix_g2g(swigCPtr, this), true);
  }

  public long nDofsPerNode() {
    return karambaJNI.Spring3D_nDofsPerNode(swigCPtr, this);
  }

  public long nTranslationalDofsPerNode() {
    return karambaJNI.Spring3D_nTranslationalDofsPerNode(swigCPtr, this);
  }

  public void updateDisplacements() {
    karambaJNI.Spring3D_updateDisplacements(swigCPtr, this);
  }

  public double axialNormalForce(int lc) {
    return karambaJNI.Spring3D_axialNormalForce__SWIG_0(swigCPtr, this, lc);
  }

  public double axialNormalForce() {
    return karambaJNI.Spring3D_axialNormalForce__SWIG_1(swigCPtr, this);
  }

  public double volume() {
    return karambaJNI.Spring3D_volume(swigCPtr, this);
  }

  public double mass() {
    return karambaJNI.Spring3D_mass(swigCPtr, this);
  }

  public double axialDeformationEnergy(int lc) {
    return karambaJNI.Spring3D_axialDeformationEnergy__SWIG_0(swigCPtr, this, lc);
  }

  public double axialDeformationEnergy() {
    return karambaJNI.Spring3D_axialDeformationEnergy__SWIG_1(swigCPtr, this);
  }

  public double bendingEnergy(int lc) {
    return karambaJNI.Spring3D_bendingEnergy__SWIG_0(swigCPtr, this, lc);
  }

  public double bendingEnergy() {
    return karambaJNI.Spring3D_bendingEnergy__SWIG_1(swigCPtr, this);
  }

  public PointState interiorState(long lc, double pos) {
    long cPtr = karambaJNI.Spring3D_interiorState(swigCPtr, this, lc, pos);
    return (cPtr == 0) ? null : new PointState(cPtr, false);
  }

  public SWIGTYPE_p_std__vectorT_PointState_p_t interiorStates(VectSizeT lc, VectReal pos) {
    return new SWIGTYPE_p_std__vectorT_PointState_p_t(karambaJNI.Spring3D_interiorStates(swigCPtr, this, VectSizeT.getCPtr(lc), lc, VectReal.getCPtr(pos), pos), true);
  }

  public double maxInteriorDeflection(int lc) {
    return karambaJNI.Spring3D_maxInteriorDeflection__SWIG_0(swigCPtr, this, lc);
  }

  public double maxInteriorDeflection() {
    return karambaJNI.Spring3D_maxInteriorDeflection__SWIG_1(swigCPtr, this);
  }

  public VectVec3d deflection(SWIGTYPE_p_VecReal pos, int lc) {
    return new VectVec3d(karambaJNI.Spring3D_deflection__SWIG_0(swigCPtr, this, SWIGTYPE_p_VecReal.getCPtr(pos), lc), true);
  }

  public VectVec3d deflection(SWIGTYPE_p_VecReal pos) {
    return new VectVec3d(karambaJNI.Spring3D_deflection__SWIG_1(swigCPtr, this, SWIGTYPE_p_VecReal.getCPtr(pos)), true);
  }

  public VectStrain strain(SWIGTYPE_p_VecReal pos, long lc) {
    return new VectStrain(karambaJNI.Spring3D_strain__SWIG_0(swigCPtr, this, SWIGTYPE_p_VecReal.getCPtr(pos), lc), true);
  }

  public VectStrain strain(SWIGTYPE_p_VecReal pos) {
    return new VectStrain(karambaJNI.Spring3D_strain__SWIG_1(swigCPtr, this, SWIGTYPE_p_VecReal.getCPtr(pos)), true);
  }

  public Vec3d pointOnAxis(double pos, boolean with_ecce) {
    return new Vec3d(karambaJNI.Spring3D_pointOnAxis__SWIG_0(swigCPtr, this, pos, with_ecce), true);
  }

  public Vec3d pointOnAxis(double pos) {
    return new Vec3d(karambaJNI.Spring3D_pointOnAxis__SWIG_1(swigCPtr, this, pos), true);
  }

  public ElementCroSec crosec() {
    return new Spring3DProperties(karambaJNI.Spring3D_crosec__SWIG_0(swigCPtr, this), false);
  }

  public ElementCroSec crosec(ElementCroSec p) {
    return new Spring3DProperties(karambaJNI.Spring3D_crosec__SWIG_1(swigCPtr, this, ElementCroSec.getCPtr(p), p), false);
  }

  public void accept(ElementVisitor v) {
    karambaJNI.Spring3D_accept(swigCPtr, this, ElementVisitor.getCPtr(v), v);
  }

  public int SWIG_typeid() {
    return karambaJNI.Spring3D_SWIG_typeid(swigCPtr, this);
  }

}
