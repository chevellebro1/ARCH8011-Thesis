/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class Buckling extends NaturalVibe {
  private long swigCPtr;

  protected Buckling(long cPtr, boolean cMemoryOwn) {
    super(karambaJNI.Buckling_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Buckling obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_Buckling(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Buckling(Model model, int nat_il, int nat_iu, double nat_fac) {
    this(karambaJNI.new_Buckling__SWIG_1(Model.getCPtr(model), model, nat_il, nat_iu, nat_fac), true);
  }

  public Buckling(Model model, int nat_il, int nat_iu) {
    this(karambaJNI.new_Buckling__SWIG_2(Model.getCPtr(model), model, nat_il, nat_iu), true);
  }

  public Buckling(Model model, int eigen_il, int eigen_iu, int max_iter, double eps, int sign, double eigen_fac) {
    this(karambaJNI.new_Buckling__SWIG_3(Model.getCPtr(model), model, eigen_il, eigen_iu, max_iter, eps, sign, eigen_fac), true);
  }

  public Buckling(Buckling arg) {
    this(karambaJNI.new_Buckling__SWIG_4(Buckling.getCPtr(arg), arg), true);
  }

  public Deform clone(SWIGTYPE_p_std__mapT_void_const_p_void_p_t mapDict) {
    long cPtr = karambaJNI.Buckling_clone__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__mapT_void_const_p_void_p_t.getCPtr(mapDict));
    return (cPtr == 0) ? null : new Buckling(cPtr, false);
  }

  public Deform clone() {
    long cPtr = karambaJNI.Buckling_clone__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new Buckling(cPtr, false);
  }

  public void copy(Deform orig) {
    karambaJNI.Buckling_copy(swigCPtr, this, Deform.getCPtr(orig), orig);
  }

  public int analyze() {
    return karambaJNI.Buckling_analyze(swigCPtr, this);
  }

  public boolean NII_defined() {
    return karambaJNI.Buckling_NII_defined(swigCPtr, this);
  }

  public VectReal loadFactors() {
    return new VectReal(karambaJNI.Buckling_loadFactors(swigCPtr, this), true);
  }

}
