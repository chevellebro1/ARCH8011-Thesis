/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class License {
  private long swigCPtr;
  public boolean swigCMemOwn;

  public License(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(License obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_License(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static License Instance() {
    long cPtr = karambaJNI.License_Instance();
    return (cPtr == 0) ? null : new License(cPtr, false);
  }

  public void loadLicense(String lic_path, String key_path) {
    karambaJNI.License_loadLicense(swigCPtr, this, lic_path, key_path);
  }

  public boolean saveMachineID(String machineIDPath) {
    return karambaJNI.License_saveMachineID(swigCPtr, this, machineIDPath);
  }

  public String test_withErrorMsg(Model model) {
    return karambaJNI.License_test_withErrorMsg(swigCPtr, this, Model.getCPtr(model), model);
  }

  public void test(Model model, License.LicenseType min_reqirement) {
    karambaJNI.License_test__SWIG_0(swigCPtr, this, Model.getCPtr(model), model, min_reqirement.swigValue());
  }

  public void test(Model model) {
    karambaJNI.License_test__SWIG_1(swigCPtr, this, Model.getCPtr(model), model);
  }

  public String expir_date() {
    return karambaJNI.License_expir_date(swigCPtr, this);
  }

  public License.LicenseType licenseType() {
    return License.LicenseType.swigToEnum(karambaJNI.License_licenseType(swigCPtr, this));
  }

  public String licenseTypeAsString(License.LicenseType lic) {
    return karambaJNI.License_licenseTypeAsString(swigCPtr, this, lic.swigValue());
  }

  public String user_name() {
    return karambaJNI.License_user_name(swigCPtr, this);
  }

  public String user_email() {
    return karambaJNI.License_user_email(swigCPtr, this);
  }

  public boolean hasExpired() {
    return karambaJNI.License_hasExpired(swigCPtr, this);
  }

  public boolean forCommercialUse() {
    return karambaJNI.License_forCommercialUse(swigCPtr, this);
  }

  public boolean error_flg() {
    return karambaJNI.License_error_flg(swigCPtr, this);
  }

  public String error_msg() {
    return karambaJNI.License_error_msg(swigCPtr, this);
  }

  public final static class LicenseType {
    public final static License.LicenseType lic_not_required = new License.LicenseType("lic_not_required");
    public final static License.LicenseType lic_free = new License.LicenseType("lic_free");
    public final static License.LicenseType lic_trial = new License.LicenseType("lic_trial");
    public final static License.LicenseType lic_student = new License.LicenseType("lic_student");
    public final static License.LicenseType lic_pro = new License.LicenseType("lic_pro");
    public final static License.LicenseType lic_developer = new License.LicenseType("lic_developer");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static LicenseType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + LicenseType.class + " with value " + swigValue);
    }

    private LicenseType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private LicenseType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private LicenseType(String swigName, LicenseType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static LicenseType[] swigValues = { lic_not_required, lic_free, lic_trial, lic_student, lic_pro, lic_developer };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
