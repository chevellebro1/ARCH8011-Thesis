/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class LoadUniformlyDistributed extends Load {
  private long swigCPtr;

  protected LoadUniformlyDistributed(long cPtr, boolean cMemoryOwn) {
    super(karambaJNI.LoadUniformlyDistributed_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(LoadUniformlyDistributed obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_LoadUniformlyDistributed(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public LoadUniformlyDistributed(Vec3d q, Load.loadOrientation q_orient) {
    this(karambaJNI.new_LoadUniformlyDistributed__SWIG_1(Vec3d.getCPtr(q), q, q_orient.swigValue()), true);
  }

  public LoadUniformlyDistributed(LoadUniformlyDistributed arg) {
    this(karambaJNI.new_LoadUniformlyDistributed__SWIG_2(LoadUniformlyDistributed.getCPtr(arg), arg), true);
  }

  public DeepCloneable clone(SWIGTYPE_p_std__mapT_void_const_p_void_p_t mapDict) {
    long cPtr = karambaJNI.LoadUniformlyDistributed_clone__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__mapT_void_const_p_void_p_t.getCPtr(mapDict));
    return (cPtr == 0) ? null : new LoadUniformlyDistributed(cPtr, false);
  }

  public DeepCloneable clone() {
    long cPtr = karambaJNI.LoadUniformlyDistributed_clone__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new LoadUniformlyDistributed(cPtr, false);
  }

  public void copy(Load orig) {
    karambaJNI.LoadUniformlyDistributed_copy(swigCPtr, this, Load.getCPtr(orig), orig);
  }

  public void update(CooSys coosys) {
    karambaJNI.LoadUniformlyDistributed_update(swigCPtr, this, CooSys.getCPtr(coosys), coosys);
  }

  public Vec3d q_local() {
    return new Vec3d(karambaJNI.LoadUniformlyDistributed_q_local(swigCPtr, this), true);
  }

}
