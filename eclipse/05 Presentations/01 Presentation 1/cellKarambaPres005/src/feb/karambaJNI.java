/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class karambaJNI {
  public final static native double SMALL_NUM_get();
  public final static native double SMALL_NUM3_get();
  public final static native double DEFAULT_SPLIT_TOLERANCE_get();
  public final static native double ABS_BEAM_LENGTH_LIMIT_get();
  public final static native double REL_BEAM_LENGTH_LIMIT_get();
  public final static native long DeepCloneable_clone__SWIG_0(long jarg1, DeepCloneable jarg1_, long jarg2);
  public final static native long DeepCloneable_clone__SWIG_1(long jarg1, DeepCloneable jarg1_);
  public final static native long DeepCloneable_deepclone__SWIG_0(long jarg1, DeepCloneable jarg1_);
  public final static native long DeepCloneable_deepclone__SWIG_1(long jarg1, DeepCloneable jarg1_, long jarg2);
  public final static native long new_DeepCloneable();
  public final static native void delete_DeepCloneable(long jarg1);
  public final static native long new_KDTree();
  public final static native void delete_KDTree(long jarg1);
  public final static native void KDTree_insert(long jarg1, KDTree jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native int KDTree_nearest__SWIG_0(long jarg1, KDTree jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native long KDTree_nearest__SWIG_1(long jarg1, KDTree jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native int KDTree_isNear(long jarg1, KDTree jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long KDTree_nNearest(long jarg1, KDTree jarg1_, double jarg2, double jarg3, double jarg4, int jarg5);
  public final static native long KDTree_rNearest(long jarg1, KDTree jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long KDTree_point(long jarg1, KDTree jarg1_, int jarg2);
  public final static native int KDTree_snapIndex(long jarg1, KDTree jarg1_, int jarg2);
  public final static native int KDTree_snapIndex_nearest(long jarg1, KDTree jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native int KDTree_snapIndex_isNear(long jarg1, KDTree jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void KDTree_order__SWIG_0(long jarg1, KDTree jarg1_);
  public final static native long KDTree_order__SWIG_1(long jarg1, KDTree jarg1_, double jarg2, long jarg3);
  public final static native long KDTree_order__SWIG_2(long jarg1, KDTree jarg1_, double jarg2);
  public final static native long new_KDTreeMultiDim();
  public final static native void delete_KDTreeMultiDim(long jarg1);
  public final static native void KDTreeMultiDim_insert(long jarg1, KDTreeMultiDim jarg1_, long jarg2, VectReal jarg2_);
  public final static native long KDTreeMultiDim_nNearest(long jarg1, KDTreeMultiDim jarg1_, long jarg2, VectReal jarg2_, int jarg3);
  public final static native void KDTreeMultiDim_order(long jarg1, KDTreeMultiDim jarg1_);
  public final static native long new_PointCloud3d_Point(double jarg1, double jarg2, double jarg3);
  public final static native void PointCloud3d_Point_v_set(long jarg1, PointCloud3d.Point jarg1_, long jarg2);
  public final static native long PointCloud3d_Point_v_get(long jarg1, PointCloud3d.Point jarg1_);
  public final static native void delete_PointCloud3d_Point(long jarg1);
  public final static native void PointCloud3d_pts_set(long jarg1, PointCloud3d jarg1_, long jarg2);
  public final static native long PointCloud3d_pts_get(long jarg1, PointCloud3d jarg1_);
  public final static native long PointCloud3d_kdtree_get_point_count(long jarg1, PointCloud3d jarg1_);
  public final static native double PointCloud3d_kdtree_distance(long jarg1, PointCloud3d jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native double PointCloud3d_kdtree_get_pt(long jarg1, PointCloud3d jarg1_, long jarg2, int jarg3);
  public final static native long new_PointCloud3d();
  public final static native void delete_PointCloud3d(long jarg1);
  public final static native long new_NKDTree__SWIG_0(long jarg1);
  public final static native long new_NKDTree__SWIG_1();
  public final static native long new_NKDTree__SWIG_2(long jarg1, NKDTree jarg1_, long jarg2);
  public final static native long new_NKDTree__SWIG_3(long jarg1, NKDTree jarg1_);
  public final static native void NKDTree_copy__SWIG_0(long jarg1, NKDTree jarg1_, long jarg2, NKDTree jarg2_, long jarg3);
  public final static native void NKDTree_copy__SWIG_1(long jarg1, NKDTree jarg1_, long jarg2, NKDTree jarg2_);
  public final static native long NKDTree_clone__SWIG_0(long jarg1, NKDTree jarg1_, long jarg2);
  public final static native long NKDTree_clone__SWIG_1(long jarg1, NKDTree jarg1_);
  public final static native void delete_NKDTree(long jarg1);
  public final static native void NKDTree_insert(long jarg1, NKDTree jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native int NKDTree_nearest__SWIG_0(long jarg1, NKDTree jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native long NKDTree_nearest__SWIG_1(long jarg1, NKDTree jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native int NKDTree_isNear(long jarg1, NKDTree jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long NKDTree_nNearest(long jarg1, NKDTree jarg1_, double jarg2, double jarg3, double jarg4, int jarg5);
  public final static native long NKDTree_rNearest(long jarg1, NKDTree jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long NKDTree_point(long jarg1, NKDTree jarg1_, int jarg2);
  public final static native int NKDTree_snapIndex(long jarg1, NKDTree jarg1_, int jarg2);
  public final static native int NKDTree_snapIndex_nearest(long jarg1, NKDTree jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native long NKDTree_snapPoint_nearest(long jarg1, NKDTree jarg1_, int jarg2);
  public final static native int NKDTree_snapIndex_isNear(long jarg1, NKDTree jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void NKDTree_order__SWIG_0(long jarg1, NKDTree jarg1_);
  public final static native long NKDTree_order__SWIG_1(long jarg1, NKDTree jarg1_, double jarg2, long jarg3);
  public final static native long NKDTree_order__SWIG_2(long jarg1, NKDTree jarg1_, double jarg2);
  public final static native boolean NKDTree_containsNoElements(long jarg1, NKDTree jarg1_);
  public final static native long NKDTree_numberOfPoints(long jarg1, NKDTree jarg1_);
  public final static native double NKDTree_limitDist(long jarg1, NKDTree jarg1_);
  public final static native void Logger_log__SWIG_0(String jarg1);
  public final static native void Logger_log__SWIG_1(double jarg1);
  public final static native void Logger_log__SWIG_2(int jarg1);
  public final static native void Logger_log__SWIG_3(long jarg1, Vec3d jarg1_);
  public final static native void Logger_activate();
  public final static native void Logger_deactivate();
  public final static native void Logger_incCounter(String jarg1);
  public final static native void Logger_listCounters();
  public final static native void Logger_resetCounters();
  public final static native int TRIALVERSION_MAX_BEAMS_get();
  public final static native int TRIALVERSION_MAX_SHELLS_get();
  public final static native String required_lic_version_get();
  public final static native long License_Instance();
  public final static native void License_loadLicense(long jarg1, License jarg1_, String jarg2, String jarg3);
  public final static native boolean License_saveMachineID(long jarg1, License jarg1_, String jarg2);
  public final static native String License_test_withErrorMsg(long jarg1, License jarg1_, long jarg2, Model jarg2_);
  public final static native void License_test__SWIG_0(long jarg1, License jarg1_, long jarg2, Model jarg2_, int jarg3);
  public final static native void License_test__SWIG_1(long jarg1, License jarg1_, long jarg2, Model jarg2_);
  public final static native String License_expir_date(long jarg1, License jarg1_);
  public final static native int License_licenseType(long jarg1, License jarg1_);
  public final static native String License_licenseTypeAsString(long jarg1, License jarg1_, int jarg2);
  public final static native String License_user_name(long jarg1, License jarg1_);
  public final static native String License_user_email(long jarg1, License jarg1_);
  public final static native boolean License_hasExpired(long jarg1, License jarg1_);
  public final static native boolean License_forCommercialUse(long jarg1, License jarg1_);
  public final static native boolean License_error_flg(long jarg1, License jarg1_);
  public final static native String License_error_msg(long jarg1, License jarg1_);
  public final static native void delete_License(long jarg1);
  public final static native long new_Vec3d__SWIG_0();
  public final static native long new_Vec3d__SWIG_1(long jarg1);
  public final static native long new_Vec3d__SWIG_3(double jarg1, double jarg2, double jarg3);
  public final static native long Vec3d_clone(long jarg1, Vec3d jarg1_);
  public final static native void delete_Vec3d(long jarg1);
  public final static native void Vec3d_clear(long jarg1, Vec3d jarg1_);
  public final static native double Vec3d_squaredLength(long jarg1, Vec3d jarg1_);
  public final static native double Vec3d_Length(long jarg1, Vec3d jarg1_);
  public final static native void Vec3d_add(long jarg1, Vec3d jarg1_, long jarg2, Vec3d jarg2_);
  public final static native void Vec3d_scale(long jarg1, Vec3d jarg1_, double jarg2);
  public final static native double Vec3d_x__SWIG_0(long jarg1, Vec3d jarg1_);
  public final static native double Vec3d_x__SWIG_1(long jarg1, Vec3d jarg1_, double jarg2);
  public final static native double Vec3d_y__SWIG_0(long jarg1, Vec3d jarg1_);
  public final static native double Vec3d_y__SWIG_1(long jarg1, Vec3d jarg1_, double jarg2);
  public final static native double Vec3d_z__SWIG_0(long jarg1, Vec3d jarg1_);
  public final static native double Vec3d_z__SWIG_1(long jarg1, Vec3d jarg1_, double jarg2);
  public final static native long Vec3d_princ(long jarg1, Vec3d jarg1_);
  public final static native long Vec3d_first_princ(long jarg1, Vec3d jarg1_);
  public final static native long Vec3d_second_princ(long jarg1, Vec3d jarg1_);
  public final static native double Vec3d_vanMises(long jarg1, Vec3d jarg1_);
  public final static native double squared_distance(long jarg1, Vec3d jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long new_CooSys__SWIG_0();
  public final static native long new_CooSys__SWIG_1(long jarg1);
  public final static native long new_CooSys__SWIG_2(long jarg1, Vec3d jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long new_CooSys__SWIG_3(long jarg1, Vec3d jarg1_, long jarg2, Vec3d jarg2_, long jarg3, Vec3d jarg3_);
  public final static native long new_CooSys__SWIG_4(long jarg1, Vec3d jarg1_, double jarg2);
  public final static native long new_CooSys__SWIG_5(long jarg1, CooSys jarg1_);
  public final static native long CooSys_clone__SWIG_0(long jarg1, CooSys jarg1_, long jarg2);
  public final static native long CooSys_clone__SWIG_1(long jarg1, CooSys jarg1_);
  public final static native void CooSys_copy(long jarg1, CooSys jarg1_, long jarg2, CooSys jarg2_);
  public final static native void delete_CooSys(long jarg1);
  public final static native long CooSys_rotate__SWIG_0(long jarg1, CooSys jarg1_, long jarg2, PointState jarg2_);
  public final static native long CooSys_rotate__SWIG_1(long jarg1, CooSys jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long CooSys_axis(long jarg1, CooSys jarg1_, long jarg2);
  public final static native long CooSys_t_l2g__SWIG_0(long jarg1, CooSys jarg1_);
  public final static native long CooSys_t_l2g__SWIG_1(long jarg1, CooSys jarg1_, long jarg2, PointState jarg2_);
  public final static native long CooSys_t_g2l(long jarg1, CooSys jarg1_);
  public final static native long CooSys_axes(long jarg1, CooSys jarg1_);
  public final static native long rotationMatrix(double jarg1, double jarg2, double jarg3);
  public final static native long prod(long jarg1, long jarg2);
  public final static native long new_Vertex__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native long new_Vertex__SWIG_2(long jarg1, Vertex jarg1_, long jarg2);
  public final static native long new_Vertex__SWIG_3(long jarg1, Vertex jarg1_);
  public final static native long Vertex_clone__SWIG_0(long jarg1, Vertex jarg1_, long jarg2);
  public final static native long Vertex_clone__SWIG_1(long jarg1, Vertex jarg1_);
  public final static native void Vertex_copy__SWIG_0(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3);
  public final static native void Vertex_copy__SWIG_1(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_);
  public final static native void delete_Vertex(long jarg1);
  public final static native long Vertex_pos__SWIG_0(long jarg1, Vertex jarg1_);
  public final static native void Vertex_pos__SWIG_1(long jarg1, Vertex jarg1_, long jarg2, Vec3d jarg2_);
  public final static native double Vertex_x(long jarg1, Vertex jarg1_);
  public final static native double Vertex_y(long jarg1, Vertex jarg1_);
  public final static native double Vertex_z(long jarg1, Vertex jarg1_);
  public final static native void Vertex_setToPosition(long jarg1, Vertex jarg1_, long jarg2, Vec3d jarg2_);
  public final static native void Vertex_addToPosition(long jarg1, Vertex jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long Vertex_ind__SWIG_0(long jarg1, Vertex jarg1_, long jarg2);
  public final static native long Vertex_ind__SWIG_1(long jarg1, Vertex jarg1_);
  public final static native double Vertex_distance(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_);
  public final static native boolean Vertex_hasLocalCooSys(long jarg1, Vertex jarg1_);
  public final static native long Vertex_coosys__SWIG_0(long jarg1, Vertex jarg1_);
  public final static native void Vertex_coosys__SWIG_1(long jarg1, Vertex jarg1_, long jarg2, CooSys jarg2_);
  public final static native long new_VertexSet__SWIG_1(long jarg1);
  public final static native long new_VertexSet__SWIG_2(long jarg1, VertexSet jarg1_, long jarg2);
  public final static native long new_VertexSet__SWIG_3(long jarg1, VertexSet jarg1_);
  public final static native void VertexSet_copy__SWIG_0(long jarg1, VertexSet jarg1_, long jarg2, VertexSet jarg2_, long jarg3);
  public final static native void VertexSet_copy__SWIG_1(long jarg1, VertexSet jarg1_, long jarg2, VertexSet jarg2_);
  public final static native long VertexSet_clone__SWIG_0(long jarg1, VertexSet jarg1_, long jarg2);
  public final static native long VertexSet_clone__SWIG_1(long jarg1, VertexSet jarg1_);
  public final static native void delete_VertexSet(long jarg1);
  public final static native void VertexSet_setVertex(long jarg1, VertexSet jarg1_, long jarg2, long jarg3, Vertex jarg3_);
  public final static native long VertexSet_vertex__SWIG_0(long jarg1, VertexSet jarg1_, long jarg2);
  public final static native long VertexSet_vertexes(long jarg1, VertexSet jarg1_);
  public final static native long VertexSet_nVertexes(long jarg1, VertexSet jarg1_);
  public final static native long VertexSet_direction__SWIG_0(long jarg1, VertexSet jarg1_, int jarg2);
  public final static native long VertexSet_direction__SWIG_1(long jarg1, VertexSet jarg1_);
  public final static native long VertexSet_edge__SWIG_0(long jarg1, VertexSet jarg1_, int jarg2);
  public final static native long VertexSet_edge__SWIG_1(long jarg1, VertexSet jarg1_);
  public final static native long VertexSet_centerPoint(long jarg1, VertexSet jarg1_);
  public final static native double VertexSet_interiorAngle(long jarg1, VertexSet jarg1_, long jarg2);
  public final static native boolean VertexSet_openTopology(long jarg1, VertexSet jarg1_);
  public final static native long VertexSet_ind__SWIG_0(long jarg1, VertexSet jarg1_, long jarg2);
  public final static native long VertexSet_ind__SWIG_1(long jarg1, VertexSet jarg1_);
  public final static native long new_Edge__SWIG_1(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, double jarg3);
  public final static native long new_Edge__SWIG_2(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_);
  public final static native long new_Edge__SWIG_3(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vec3d jarg3_, double jarg4);
  public final static native long new_Edge__SWIG_4(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vec3d jarg3_);
  public final static native long new_Edge__SWIG_5(long jarg1, Edge jarg1_, long jarg2);
  public final static native long new_Edge__SWIG_6(long jarg1, Edge jarg1_);
  public final static native void Edge_copy__SWIG_0(long jarg1, Edge jarg1_, long jarg2, Edge jarg2_, long jarg3);
  public final static native void Edge_copy__SWIG_1(long jarg1, Edge jarg1_, long jarg2, Edge jarg2_);
  public final static native long Edge_clone__SWIG_0(long jarg1, Edge jarg1_, long jarg2);
  public final static native long Edge_clone__SWIG_1(long jarg1, Edge jarg1_);
  public final static native void delete_Edge(long jarg1);
  public final static native double Edge_characteristicLength(long jarg1, Edge jarg1_);
  public final static native double Edge_length(long jarg1, Edge jarg1_);
  public final static native long Edge_segment(long jarg1, Edge jarg1_);
  public final static native long Edge_nearNode(long jarg1, Edge jarg1_, long jarg2, Vertex jarg2_, double jarg3);
  public final static native long Edge_coosys(long jarg1, Edge jarg1_);
  public final static native long Edge_pointOnAxis(long jarg1, Edge jarg1_, double jarg2, long jarg3, Vec3d jarg3_, long jarg4, Vec3d jarg4_);
  public final static native long Edge_pointsOnAxis(long jarg1, Edge jarg1_, long jarg2, long jarg3, Vec3d jarg3_, long jarg4, Vec3d jarg4_);
  public final static native void Edge_updateCooSys__SWIG_0(long jarg1, Edge jarg1_);
  public final static native void Edge_updateCooSys__SWIG_1(long jarg1, Edge jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long Edge_direction__SWIG_0(long jarg1, Edge jarg1_, long jarg2);
  public final static native long Edge_direction__SWIG_1(long jarg1, Edge jarg1_);
  public final static native boolean Edge_openTopology(long jarg1, Edge jarg1_);
  public final static native void TriFaceInfo_localPos_set(long jarg1, TriFaceInfo jarg1_, long jarg2, VectVec3d jarg2_);
  public final static native long TriFaceInfo_localPos_get(long jarg1, TriFaceInfo jarg1_);
  public final static native void TriFaceInfo_edgeVec_set(long jarg1, TriFaceInfo jarg1_, long jarg2, VectVec3d jarg2_);
  public final static native long TriFaceInfo_edgeVec_get(long jarg1, TriFaceInfo jarg1_);
  public final static native void TriFaceInfo_edgeUnitVec_set(long jarg1, TriFaceInfo jarg1_, long jarg2, VectVec3d jarg2_);
  public final static native long TriFaceInfo_edgeUnitVec_get(long jarg1, TriFaceInfo jarg1_);
  public final static native void TriFaceInfo_edgeLength_set(long jarg1, TriFaceInfo jarg1_, long jarg2, VectReal jarg2_);
  public final static native long TriFaceInfo_edgeLength_get(long jarg1, TriFaceInfo jarg1_);
  public final static native long new_TriFaceInfo();
  public final static native void delete_TriFaceInfo(long jarg1);
  public final static native long new_TriFace__SWIG_1(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_);
  public final static native long new_TriFace__SWIG_2(long jarg1, TriFace jarg1_, long jarg2);
  public final static native long new_TriFace__SWIG_3(long jarg1, TriFace jarg1_);
  public final static native void TriFace_copy__SWIG_0(long jarg1, TriFace jarg1_, long jarg2, TriFace jarg2_, long jarg3);
  public final static native void TriFace_copy__SWIG_1(long jarg1, TriFace jarg1_, long jarg2, TriFace jarg2_);
  public final static native long TriFace_clone__SWIG_0(long jarg1, TriFace jarg1_, long jarg2);
  public final static native long TriFace_clone__SWIG_1(long jarg1, TriFace jarg1_);
  public final static native void delete_TriFace(long jarg1);
  public final static native double TriFace_characteristicLength(long jarg1, TriFace jarg1_);
  public final static native double TriFace_area(long jarg1, TriFace jarg1_);
  public final static native void TriFace_updateCooSys(long jarg1, TriFace jarg1_);
  public final static native long TriFace_coosys(long jarg1, TriFace jarg1_);
  public final static native void TriFace_addInfo(long jarg1, TriFace jarg1_, long jarg2, TriFaceInfo jarg2_);
  public final static native long TriFace_localVertexCoordinates(long jarg1, TriFace jarg1_);
  public final static native long TriFace_global2barycentric(long jarg1, TriFace jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long new_Mesh__SWIG_0();
  public final static native long new_Mesh__SWIG_1(long jarg1, Mesh jarg1_, long jarg2);
  public final static native long new_Mesh__SWIG_2(long jarg1, Mesh jarg1_);
  public final static native void Mesh_copy__SWIG_0(long jarg1, Mesh jarg1_, long jarg2, Mesh jarg2_, long jarg3);
  public final static native void Mesh_copy__SWIG_1(long jarg1, Mesh jarg1_, long jarg2, Mesh jarg2_);
  public final static native long Mesh_clone__SWIG_0(long jarg1, Mesh jarg1_, long jarg2);
  public final static native long Mesh_clone__SWIG_1(long jarg1, Mesh jarg1_);
  public final static native void delete_Mesh(long jarg1);
  public final static native long Mesh_add__SWIG_0(long jarg1, Mesh jarg1_, long jarg2, VertexSet jarg2_);
  public final static native long Mesh_add__SWIG_1(long jarg1, Mesh jarg1_, long jarg2, Mesh jarg2_);
  public final static native void Mesh_finalizeConstruction(long jarg1, Mesh jarg1_);
  public final static native long Mesh_numberOfFaces(long jarg1, Mesh jarg1_);
  public final static native long Mesh_face__SWIG_0(long jarg1, Mesh jarg1_, long jarg2);
  public final static native long Mesh_vertexIndexesOfFace(long jarg1, Mesh jarg1_, long jarg2);
  public final static native long Mesh_faces(long jarg1, Mesh jarg1_);
  public final static native long Mesh_numberOfVertexes(long jarg1, Mesh jarg1_);
  public final static native long Mesh_vertex__SWIG_0(long jarg1, Mesh jarg1_, long jarg2);
  public final static native long Mesh_vertexes__SWIG_0(long jarg1, Mesh jarg1_);
  public final static native long Mesh_facesOfVertex(long jarg1, Mesh jarg1_, long jarg2);
  public final static native long Mesh_facesOfEdge(long jarg1, Mesh jarg1_, long jarg2, long jarg3);
  public final static native int Mesh_meshInd__SWIG_0(long jarg1, Mesh jarg1_, long jarg2, Vertex jarg2_);
  public final static native int Mesh_meshInd__SWIG_1(long jarg1, Mesh jarg1_, long jarg2);
  public final static native long new_GeMapper__SWIG_0();
  public final static native long new_GeMapper__SWIG_1(long jarg1, GeMapper jarg1_);
  public final static native long GeMapper_clone__SWIG_0(long jarg1, GeMapper jarg1_, long jarg2);
  public final static native long GeMapper_clone__SWIG_1(long jarg1, GeMapper jarg1_);
  public final static native void GeMapper_copy(long jarg1, GeMapper jarg1_, long jarg2, GeMapper jarg2_);
  public final static native void delete_GeMapper(long jarg1);
  public final static native void GeMapper_map(long jarg1, GeMapper jarg1_, long jarg2, GeModel jarg2_, long jarg3, VectReal jarg3_);
  public final static native void GeMapper_add(long jarg1, GeMapper jarg1_, long jarg2, GeMapping jarg2_);
  public final static native long GeMapper_numberOfParameters(long jarg1, GeMapper jarg1_);
  public final static native long GeMapping_clone__SWIG_0(long jarg1, GeMapping jarg1_, long jarg2);
  public final static native long GeMapping_clone__SWIG_1(long jarg1, GeMapping jarg1_);
  public final static native void GeMapping_copy(long jarg1, GeMapping jarg1_, long jarg2, GeMapping jarg2_);
  public final static native void delete_GeMapping(long jarg1);
  public final static native long GeMapping_parametersPerConnection(long jarg1, GeMapping jarg1_);
  public final static native long GeMapping_numberOfParameters(long jarg1, GeMapping jarg1_);
  public final static native void GeMapping_map(long jarg1, GeMapping jarg1_, long jarg2, GeModel jarg2_, long jarg3, long jarg4);
  public final static native long new_GeModel__SWIG_1(long jarg1, Model jarg1_);
  public final static native long new_GeModel__SWIG_2(long jarg1, GeModel jarg1_);
  public final static native long GeModel_clone__SWIG_0(long jarg1, GeModel jarg1_, long jarg2);
  public final static native long GeModel_clone__SWIG_1(long jarg1, GeModel jarg1_);
  public final static native void GeModel_copy(long jarg1, GeModel jarg1_, long jarg2, GeModel jarg2_);
  public final static native void delete_GeModel(long jarg1);
  public final static native long GeModel_femodel(long jarg1, GeModel jarg1_);
  public final static native long GeModel_handOverFEModel(long jarg1, GeModel jarg1_);
  public final static native long new_Stitch__SWIG_1(long jarg1, long jarg2, ElementStraightLine jarg2_);
  public final static native long new_Stitch__SWIG_2(long jarg1, long jarg2, long jarg3, ElementStraightLine jarg3_);
  public final static native long new_Stitch__SWIG_3(long jarg1, Stitch jarg1_);
  public final static native long Stitch_clone__SWIG_0(long jarg1, Stitch jarg1_, long jarg2);
  public final static native long Stitch_clone__SWIG_1(long jarg1, Stitch jarg1_);
  public final static native void Stitch_copy(long jarg1, Stitch jarg1_, long jarg2, Stitch jarg2_);
  public final static native void delete_Stitch(long jarg1);
  public final static native void Stitch_addEdge(long jarg1, Stitch jarg1_, long jarg2, PolyElement jarg2_);
  public final static native long Stitch_edgesCount(long jarg1, Stitch jarg1_);
  public final static native long Stitch_updatedEdges(long jarg1, Stitch jarg1_, long jarg2, Model jarg2_);
  public final static native long Stitch_parametersPerConnection(long jarg1, Stitch jarg1_);
  public final static native long Stitch_numberOfParameters(long jarg1, Stitch jarg1_);
  public final static native void Stitch_map(long jarg1, Stitch jarg1_, long jarg2, GeModel jarg2_, long jarg3, long jarg4);
  public final static native long new_StackedStitch__SWIG_1(long jarg1, long jarg2, ElementStraightLine jarg2_);
  public final static native long new_StackedStitch__SWIG_2(long jarg1, long jarg2, long jarg3, ElementStraightLine jarg3_);
  public final static native long new_StackedStitch__SWIG_3(long jarg1, StackedStitch jarg1_);
  public final static native long StackedStitch_clone__SWIG_0(long jarg1, StackedStitch jarg1_, long jarg2);
  public final static native long StackedStitch_clone__SWIG_1(long jarg1, StackedStitch jarg1_);
  public final static native void delete_StackedStitch(long jarg1);
  public final static native void StackedStitch_map(long jarg1, StackedStitch jarg1_, long jarg2, GeModel jarg2_, long jarg3, long jarg4);
  public final static native long new_StackedStitchV2__SWIG_1(long jarg1, long jarg2, ElementStraightLine jarg2_, double jarg3);
  public final static native long new_StackedStitchV2__SWIG_2(long jarg1, long jarg2, ElementStraightLine jarg2_);
  public final static native long new_StackedStitchV2__SWIG_3(long jarg1, long jarg2, long jarg3, ElementStraightLine jarg3_, double jarg4);
  public final static native long new_StackedStitchV2__SWIG_4(long jarg1, long jarg2, long jarg3, ElementStraightLine jarg3_);
  public final static native long new_StackedStitchV2__SWIG_5(long jarg1, StackedStitchV2 jarg1_);
  public final static native long StackedStitchV2_clone__SWIG_0(long jarg1, StackedStitchV2 jarg1_, long jarg2);
  public final static native long StackedStitchV2_clone__SWIG_1(long jarg1, StackedStitchV2 jarg1_);
  public final static native void StackedStitchV2_copy(long jarg1, StackedStitchV2 jarg1_, long jarg2, StackedStitchV2 jarg2_);
  public final static native void delete_StackedStitchV2(long jarg1);
  public final static native void StackedStitchV2_map(long jarg1, StackedStitchV2 jarg1_, long jarg2, GeModel jarg2_, long jarg3, long jarg4);
  public final static native long new_ProxyStitch__SWIG_1(long jarg1, long jarg2, ElementStraightLine jarg2_, double jarg3, double jarg4);
  public final static native long new_ProxyStitch__SWIG_2(long jarg1, long jarg2, ElementStraightLine jarg2_, double jarg3);
  public final static native long new_ProxyStitch__SWIG_3(long jarg1, long jarg2, ElementStraightLine jarg2_);
  public final static native long new_ProxyStitch__SWIG_4(long jarg1, int jarg2, long jarg3, ElementStraightLine jarg3_, double jarg4, double jarg5);
  public final static native long new_ProxyStitch__SWIG_5(long jarg1, int jarg2, long jarg3, ElementStraightLine jarg3_, double jarg4);
  public final static native long new_ProxyStitch__SWIG_6(long jarg1, int jarg2, long jarg3, ElementStraightLine jarg3_);
  public final static native long new_ProxyStitch__SWIG_7(long jarg1, ProxyStitch jarg1_);
  public final static native long ProxyStitch_clone__SWIG_0(long jarg1, ProxyStitch jarg1_, long jarg2);
  public final static native long ProxyStitch_clone__SWIG_1(long jarg1, ProxyStitch jarg1_);
  public final static native void ProxyStitch_copy(long jarg1, ProxyStitch jarg1_, long jarg2, ProxyStitch jarg2_);
  public final static native void delete_ProxyStitch(long jarg1);
  public final static native void ProxyStitch_map(long jarg1, ProxyStitch jarg1_, long jarg2, GeModel jarg2_, long jarg3, long jarg4);
  public final static native long new_InterShape__SWIG_0();
  public final static native long new_InterShape__SWIG_1(long jarg1, InterShape jarg1_);
  public final static native long InterShape_clone__SWIG_0(long jarg1, InterShape jarg1_, long jarg2);
  public final static native long InterShape_clone__SWIG_1(long jarg1, InterShape jarg1_);
  public final static native void InterShape_copy(long jarg1, InterShape jarg1_, long jarg2, InterShape jarg2_);
  public final static native void delete_InterShape(long jarg1);
  public final static native long InterShape_parametersPerConnection(long jarg1, InterShape jarg1_);
  public final static native void InterShape_add(long jarg1, InterShape jarg1_, long jarg2, Model jarg2_);
  public final static native long InterShape_numberOfParameters(long jarg1, InterShape jarg1_);
  public final static native void InterShape_map(long jarg1, InterShape jarg1_, long jarg2, GeModel jarg2_, long jarg3, long jarg4);
  public final static native long new_PolyElement__SWIG_0(double jarg1);
  public final static native long new_PolyElement__SWIG_1();
  public final static native long new_PolyElement__SWIG_2(long jarg1, VectSizeT jarg1_, double jarg2);
  public final static native long new_PolyElement__SWIG_3(long jarg1, VectSizeT jarg1_);
  public final static native long new_PolyElement__SWIG_4(long jarg1, PolyElement jarg1_);
  public final static native long PolyElement_clone(long jarg1, PolyElement jarg1_);
  public final static native void delete_PolyElement(long jarg1);
  public final static native void PolyElement_AddElem(long jarg1, PolyElement jarg1_, long jarg2);
  public final static native long PolyElement_node_ind_at(long jarg1, PolyElement jarg1_, long jarg2, Model jarg2_, double jarg3);
  public final static native void PolyElement_update(long jarg1, PolyElement jarg1_, long jarg2, Model jarg2_);
  public final static native double PolyElement_length(long jarg1, PolyElement jarg1_);
  public final static native long PolyElement_pointAt(long jarg1, PolyElement jarg1_, long jarg2, Model jarg2_, double jarg3);
  public final static native long PolyElement_cooSys(long jarg1, PolyElement jarg1_, long jarg2, Model jarg2_, double jarg3);
  public final static native double PolyElement_minSplitLength(long jarg1, PolyElement jarg1_);
  public final static native double penalty_fac_get();
  public final static native long new_MatrixNotPositiveDefinite();
  public final static native void delete_MatrixNotPositiveDefinite(long jarg1);
  public final static native long new_Deform__SWIG_1(long jarg1, Model jarg1_);
  public final static native long new_Deform__SWIG_2(long jarg1, Deform jarg1_);
  public final static native long Deform_clone__SWIG_0(long jarg1, Deform jarg1_, long jarg2);
  public final static native long Deform_clone__SWIG_1(long jarg1, Deform jarg1_);
  public final static native void Deform_copy(long jarg1, Deform jarg1_, long jarg2, Deform jarg2_);
  public final static native void delete_Deform(long jarg1);
  public final static native long Deform_model(long jarg1, Deform jarg1_);
  public final static native int Deform_analyze(long jarg1, Deform jarg1_);
  public final static native double Deform_compliance(long jarg1, Deform jarg1_, long jarg2);
  public final static native double Deform_deadWeight(long jarg1, Deform jarg1_, long jarg2);
  public final static native void Deform_touch(long jarg1, Deform jarg1_);
  public final static native long Deform_stiffness_bandwidth(long jarg1, Deform jarg1_);
  public final static native long Deform_stiffness_numequ(long jarg1, Deform jarg1_);
  public final static native long new_DeformThII__SWIG_1(long jarg1, Model jarg1_, int jarg2, double jarg3, long jarg4, boolean jarg5);
  public final static native long new_DeformThII__SWIG_2(long jarg1, Model jarg1_, int jarg2, double jarg3, long jarg4);
  public final static native long new_DeformThII__SWIG_3(long jarg1, Model jarg1_, int jarg2, double jarg3);
  public final static native long new_DeformThII__SWIG_4(long jarg1, Model jarg1_, int jarg2);
  public final static native long new_DeformThII__SWIG_5(long jarg1, Model jarg1_);
  public final static native long new_DeformThII__SWIG_6(long jarg1, DeformThII jarg1_);
  public final static native long DeformThII_clone__SWIG_0(long jarg1, DeformThII jarg1_, long jarg2);
  public final static native long DeformThII_clone__SWIG_1(long jarg1, DeformThII jarg1_);
  public final static native void DeformThII_copy(long jarg1, DeformThII jarg1_, long jarg2, Deform jarg2_);
  public final static native void delete_DeformThII(long jarg1);
  public final static native int DeformThII_analyze(long jarg1, DeformThII jarg1_);
  public final static native boolean DeformThII_converged(long jarg1, DeformThII jarg1_);
  public final static native double DeformThII_convergence_error(long jarg1, DeformThII jarg1_);
  public final static native long new_Eigenform__SWIG_1(long jarg1, Model jarg1_, int jarg2, int jarg3, double jarg4);
  public final static native long new_Eigenform__SWIG_2(long jarg1, Model jarg1_, int jarg2, int jarg3);
  public final static native long new_Eigenform__SWIG_3(long jarg1, Model jarg1_, int jarg2, int jarg3, int jarg4, double jarg5, int jarg6, double jarg7);
  public final static native long new_Eigenform__SWIG_4(long jarg1, Eigenform jarg1_);
  public final static native long Eigenform_clone__SWIG_0(long jarg1, Eigenform jarg1_, long jarg2);
  public final static native long Eigenform_clone__SWIG_1(long jarg1, Eigenform jarg1_);
  public final static native void Eigenform_copy(long jarg1, Eigenform jarg1_, long jarg2, Deform jarg2_);
  public final static native void delete_Eigenform(long jarg1);
  public final static native int Eigenform_analyze(long jarg1, Eigenform jarg1_);
  public final static native long Eigenform_eigenvalues(long jarg1, Eigenform jarg1_);
  public final static native long new_NaturalVibe__SWIG_1(long jarg1, Model jarg1_, int jarg2, int jarg3, double jarg4);
  public final static native long new_NaturalVibe__SWIG_2(long jarg1, Model jarg1_, int jarg2, int jarg3);
  public final static native long new_NaturalVibe__SWIG_3(long jarg1, Model jarg1_, int jarg2, int jarg3, int jarg4, double jarg5, int jarg6, double jarg7);
  public final static native long new_NaturalVibe__SWIG_4(long jarg1, NaturalVibe jarg1_);
  public final static native long NaturalVibe_clone__SWIG_0(long jarg1, NaturalVibe jarg1_, long jarg2);
  public final static native long NaturalVibe_clone__SWIG_1(long jarg1, NaturalVibe jarg1_);
  public final static native void NaturalVibe_copy(long jarg1, NaturalVibe jarg1_, long jarg2, Deform jarg2_);
  public final static native void delete_NaturalVibe(long jarg1);
  public final static native int NaturalVibe_analyze(long jarg1, NaturalVibe jarg1_);
  public final static native long NaturalVibe_naturalFrequencies(long jarg1, NaturalVibe jarg1_);
  public final static native long NaturalVibe_modalMass(long jarg1, NaturalVibe jarg1_);
  public final static native long NaturalVibe_partCoeff(long jarg1, NaturalVibe jarg1_);
  public final static native long new_Buckling__SWIG_1(long jarg1, Model jarg1_, int jarg2, int jarg3, double jarg4);
  public final static native long new_Buckling__SWIG_2(long jarg1, Model jarg1_, int jarg2, int jarg3);
  public final static native long new_Buckling__SWIG_3(long jarg1, Model jarg1_, int jarg2, int jarg3, int jarg4, double jarg5, int jarg6, double jarg7);
  public final static native long new_Buckling__SWIG_4(long jarg1, Buckling jarg1_);
  public final static native long Buckling_clone__SWIG_0(long jarg1, Buckling jarg1_, long jarg2);
  public final static native long Buckling_clone__SWIG_1(long jarg1, Buckling jarg1_);
  public final static native void Buckling_copy(long jarg1, Buckling jarg1_, long jarg2, Deform jarg2_);
  public final static native void delete_Buckling(long jarg1);
  public final static native int Buckling_analyze(long jarg1, Buckling jarg1_);
  public final static native boolean Buckling_NII_defined(long jarg1, Buckling jarg1_);
  public final static native long Buckling_loadFactors(long jarg1, Buckling jarg1_);
  public final static native int all_loadcases_get();
  public final static native void BoundaryCondition_type_set(long jarg1, BoundaryCondition jarg1_, int jarg2);
  public final static native int BoundaryCondition_type_get(long jarg1, BoundaryCondition jarg1_);
  public final static native void BoundaryCondition_node_ind_set(long jarg1, BoundaryCondition jarg1_, int jarg2);
  public final static native int BoundaryCondition_node_ind_get(long jarg1, BoundaryCondition jarg1_);
  public final static native void BoundaryCondition_lc_num_set(long jarg1, BoundaryCondition jarg1_, int jarg2);
  public final static native int BoundaryCondition_lc_num_get(long jarg1, BoundaryCondition jarg1_);
  public final static native void BoundaryCondition_dof_set(long jarg1, BoundaryCondition jarg1_, int jarg2);
  public final static native int BoundaryCondition_dof_get(long jarg1, BoundaryCondition jarg1_);
  public final static native void BoundaryCondition_val_set(long jarg1, BoundaryCondition jarg1_, double jarg2);
  public final static native double BoundaryCondition_val_get(long jarg1, BoundaryCondition jarg1_);
  public final static native long new_BoundaryCondition__SWIG_1(int jarg1, int jarg2, int jarg3, double jarg4, int jarg5);
  public final static native long new_BoundaryCondition__SWIG_2(int jarg1, int jarg2, int jarg3, double jarg4);
  public final static native long new_BoundaryCondition__SWIG_3(long jarg1, BoundaryCondition jarg1_);
  public final static native long BoundaryCondition_clone__SWIG_0(long jarg1, BoundaryCondition jarg1_, long jarg2);
  public final static native long BoundaryCondition_clone__SWIG_1(long jarg1, BoundaryCondition jarg1_);
  public final static native void BoundaryCondition_copy(long jarg1, BoundaryCondition jarg1_, long jarg2, BoundaryCondition jarg2_);
  public final static native void delete_BoundaryCondition(long jarg1);
  public final static native void BoundaryCondition_updateReaction(long jarg1, BoundaryCondition jarg1_, long jarg2, Model jarg2_);
  public final static native double BoundaryCondition_reaction__SWIG_0(long jarg1, BoundaryCondition jarg1_, long jarg2);
  public final static native long BoundaryCondition_reaction__SWIG_1(long jarg1, BoundaryCondition jarg1_);
  public final static native boolean BoundaryCondition_isActive(long jarg1, BoundaryCondition jarg1_);
  public final static native long BoundaryCondition_ind__SWIG_0(long jarg1, BoundaryCondition jarg1_, long jarg2);
  public final static native long BoundaryCondition_ind__SWIG_1(long jarg1, BoundaryCondition jarg1_);
  public final static native int MAX_NUM_INTERSECTIONS_get();
  public final static native long new_IntersectionAnalysis__SWIG_0();
  public final static native long new_IntersectionAnalysis__SWIG_1(long jarg1, ElementStraightLine jarg1_);
  public final static native long new_IntersectionAnalysis__SWIG_2(long jarg1, IntersectionAnalysis jarg1_);
  public final static native long IntersectionAnalysis_clone__SWIG_0(long jarg1, IntersectionAnalysis jarg1_, long jarg2);
  public final static native long IntersectionAnalysis_clone__SWIG_1(long jarg1, IntersectionAnalysis jarg1_);
  public final static native void IntersectionAnalysis_copy(long jarg1, IntersectionAnalysis jarg1_, long jarg2, IntersectionAnalysis jarg2_);
  public final static native void delete_IntersectionAnalysis(long jarg1);
  public final static native long IntersectionAnalysis_intersect__SWIG_0(long jarg1, IntersectionAnalysis jarg1_, long jarg2, Model jarg2_, long jarg3, Element jarg3_, long jarg4, Element jarg4_, double jarg5, double jarg6, long jarg7, ElementStraightLine jarg7_);
  public final static native long IntersectionAnalysis_intersect__SWIG_1(long jarg1, IntersectionAnalysis jarg1_, long jarg2, Model jarg2_, long jarg3, Element jarg3_, long jarg4, Element jarg4_, double jarg5, double jarg6);
  public final static native long IntersectionAnalysis_intersect__SWIG_2(long jarg1, IntersectionAnalysis jarg1_, long jarg2, Model jarg2_, long jarg3, Element jarg3_, long jarg4, Element jarg4_, double jarg5);
  public final static native long IntersectionAnalysis_intersect__SWIG_3(long jarg1, IntersectionAnalysis jarg1_, long jarg2, Model jarg2_, long jarg3, Element jarg3_, long jarg4, Element jarg4_);
  public final static native void IntersectionAnalysis_intersect__SWIG_4(long jarg1, IntersectionAnalysis jarg1_, long jarg2, Model jarg2_, long jarg3, double jarg4, double jarg5, int jarg6, double jarg7);
  public final static native void IntersectionAnalysis_intersect__SWIG_5(long jarg1, IntersectionAnalysis jarg1_, long jarg2, Model jarg2_, long jarg3, double jarg4, double jarg5, int jarg6);
  public final static native void IntersectionAnalysis_intersect__SWIG_6(long jarg1, IntersectionAnalysis jarg1_, long jarg2, Model jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native void IntersectionAnalysis_intersect__SWIG_7(long jarg1, IntersectionAnalysis jarg1_, long jarg2, Model jarg2_, long jarg3, double jarg4);
  public final static native void IntersectionAnalysis_intersect__SWIG_8(long jarg1, IntersectionAnalysis jarg1_, long jarg2, Model jarg2_, long jarg3);
  public final static native void IntersectionAnalysis_intersect__SWIG_9(long jarg1, IntersectionAnalysis jarg1_, long jarg2, Model jarg2_);
  public final static native long new_CollisionItem__SWIG_0();
  public final static native long new_CollisionItem__SWIG_1(long jarg1, CollisionItem jarg1_);
  public final static native long CollisionItem_clone__SWIG_0(long jarg1, CollisionItem jarg1_, long jarg2);
  public final static native long CollisionItem_clone__SWIG_1(long jarg1, CollisionItem jarg1_);
  public final static native void CollisionItem_copy(long jarg1, CollisionItem jarg1_, long jarg2, CollisionItem jarg2_);
  public final static native long CollisionItem_deepclone__SWIG_0(long jarg1, CollisionItem jarg1_);
  public final static native long CollisionItem_deepclone__SWIG_1(long jarg1, CollisionItem jarg1_, long jarg2);
  public final static native void delete_CollisionItem(long jarg1);
  public final static native void CollisionItem_addTriangle(long jarg1, CollisionItem jarg1_, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10);
  public final static native long CollisionItem_numberOfCollisions(long jarg1, CollisionItem jarg1_, long jarg2);
  public final static native long new_CollisionAnalysis__SWIG_0(long jarg1, Model jarg1_, long jarg2);
  public final static native long new_CollisionAnalysis__SWIG_1(long jarg1, Model jarg1_);
  public final static native long new_CollisionAnalysis__SWIG_2(long jarg1, CollisionAnalysis jarg1_);
  public final static native long CollisionAnalysis_clone__SWIG_0(long jarg1, CollisionAnalysis jarg1_, long jarg2);
  public final static native long CollisionAnalysis_clone__SWIG_1(long jarg1, CollisionAnalysis jarg1_);
  public final static native void CollisionAnalysis_copy(long jarg1, CollisionAnalysis jarg1_, long jarg2, CollisionAnalysis jarg2_);
  public final static native void delete_CollisionAnalysis(long jarg1);
  public final static native void CollisionAnalysis_add(long jarg1, CollisionAnalysis jarg1_, long jarg2, CollisionItem jarg2_);
  public final static native long CollisionAnalysis_nCollisions__SWIG_0(long jarg1, CollisionAnalysis jarg1_);
  public final static native long CollisionAnalysis_nCollisions__SWIG_1(long jarg1, CollisionAnalysis jarg1_, long jarg2, CollisionItem jarg2_);
  public final static native int NO_EXCENTRICITY_get();
  public final static native long new_Eccentricity__SWIG_0(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_Eccentricity__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_Eccentricity__SWIG_2(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_Eccentricity__SWIG_3(double jarg1, double jarg2, double jarg3);
  public final static native long new_Eccentricity__SWIG_4(double jarg1, double jarg2);
  public final static native long new_Eccentricity__SWIG_5(double jarg1);
  public final static native long new_Eccentricity__SWIG_6();
  public final static native long new_Eccentricity__SWIG_7(long jarg1, Eccentricity jarg1_);
  public final static native long Eccentricity_clone__SWIG_0(long jarg1, Eccentricity jarg1_, long jarg2);
  public final static native long Eccentricity_clone__SWIG_1(long jarg1, Eccentricity jarg1_);
  public final static native void Eccentricity_copy(long jarg1, Eccentricity jarg1_, long jarg2, Eccentricity jarg2_);
  public final static native void delete_Eccentricity(long jarg1);
  public final static native long Eccentricity_ecc_global(long jarg1, Eccentricity jarg1_, long jarg2, long jarg3, ElementCroSec jarg3_);
  public final static native long Eccentricity_ind__SWIG_0(long jarg1, Eccentricity jarg1_, long jarg2);
  public final static native long Eccentricity_ind__SWIG_1(long jarg1, Eccentricity jarg1_);
  public final static native long new_Model__SWIG_0(int jarg1);
  public final static native long new_Model__SWIG_1();
  public final static native long new_Model__SWIG_2(long jarg1, VectNode jarg1_, long jarg2, VectElem jarg2_, long jarg3, VectMaterial jarg3_, long jarg4, VectCroSec jarg4_, long jarg5, int jarg6);
  public final static native long new_Model__SWIG_3(long jarg1, VectNode jarg1_, long jarg2, VectElem jarg2_, long jarg3, VectMaterial jarg3_, long jarg4, VectCroSec jarg4_, long jarg5);
  public final static native long new_Model__SWIG_4(long jarg1, Model jarg1_, long jarg2);
  public final static native long new_Model__SWIG_5(long jarg1, Model jarg1_);
  public final static native long Model_clone__SWIG_0(long jarg1, Model jarg1_, long jarg2);
  public final static native long Model_clone__SWIG_1(long jarg1, Model jarg1_);
  public final static native long Model_deepclone(long jarg1, Model jarg1_);
  public final static native void Model_copy__SWIG_0(long jarg1, Model jarg1_, long jarg2, Model jarg2_, long jarg3);
  public final static native void Model_copy__SWIG_1(long jarg1, Model jarg1_, long jarg2, Model jarg2_);
  public final static native void delete_Model(long jarg1);
  public final static native long Model_lcNum__SWIG_0(long jarg1, Model jarg1_);
  public final static native long Model_lcNum__SWIG_1(long jarg1, Model jarg1_, long jarg2);
  public final static native void Model_touch(long jarg1, Model jarg1_);
  public final static native boolean Model_displacementsReady__SWIG_0(long jarg1, Model jarg1_, boolean jarg2);
  public final static native long Model_add__SWIG_0(long jarg1, Model jarg1_, long jarg2, Node jarg2_);
  public final static native long Model_add__SWIG_1(long jarg1, Model jarg1_, long jarg2, Element jarg2_);
  public final static native long Model_add__SWIG_2(long jarg1, Model jarg1_, long jarg2, ShellMesh jarg2_);
  public final static native long Model_add__SWIG_3(long jarg1, Model jarg1_, long jarg2);
  public final static native long Model_add__SWIG_4(long jarg1, Model jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native long Model_add__SWIG_5(long jarg1, Model jarg1_, long jarg2, Material jarg2_);
  public final static native long Model_add__SWIG_6(long jarg1, Model jarg1_, long jarg2, BoundaryCondition jarg2_);
  public final static native long Model_add__SWIG_7(long jarg1, Model jarg1_, long jarg2, Eccentricity jarg2_);
  public final static native double Model_characteristicLength(long jarg1, Model jarg1_);
  public final static native boolean Model_displacementsReady__SWIG_1(long jarg1, Model jarg1_);
  public final static native boolean Model_memberForcesReady(long jarg1, Model jarg1_);
  public final static native long Model_numberOfNodes(long jarg1, Model jarg1_);
  public final static native long Model_node(long jarg1, Model jarg1_, long jarg2);
  public final static native long Model_Nodes(long jarg1, Model jarg1_);
  public final static native long Model_numberOfElements(long jarg1, Model jarg1_);
  public final static native long Model_element(long jarg1, Model jarg1_, long jarg2);
  public final static native long Model_elements(long jarg1, Model jarg1_);
  public final static native long Model_numberOfEccentricities(long jarg1, Model jarg1_);
  public final static native long Model_eccentricity(long jarg1, Model jarg1_, long jarg2);
  public final static native long Model_eccentricities(long jarg1, Model jarg1_);
  public final static native long Model_numberOfBoundaryConditions(long jarg1, Model jarg1_);
  public final static native long Model_boundaryCondition(long jarg1, Model jarg1_, long jarg2);
  public final static native long Model_boundaryConditions(long jarg1, Model jarg1_);
  public final static native long Model_constraints(long jarg1, Model jarg1_);
  public final static native long Model_numberOfCroSecs(long jarg1, Model jarg1_);
  public final static native long Model_elemCroSec(long jarg1, Model jarg1_, long jarg2);
  public final static native long Model_elemCroSecs(long jarg1, Model jarg1_);
  public final static native long Model_numberOfMaterials(long jarg1, Model jarg1_);
  public final static native long Model_material(long jarg1, Model jarg1_, long jarg2);
  public final static native long Model_materials(long jarg1, Model jarg1_);
  public final static native long Model_numberOfTriMeshes(long jarg1, Model jarg1_);
  public final static native long Model_triMesh(long jarg1, Model jarg1_, long jarg2);
  public final static native long Model_triMeshes(long jarg1, Model jarg1_);
  public final static native long Model_numberOfTriShells(long jarg1, Model jarg1_);
  public final static native void Model_gravity__SWIG_0(long jarg1, Model jarg1_, long jarg2, Vec3d jarg2_, int jarg3);
  public final static native void Model_gravity__SWIG_1(long jarg1, Model jarg1_, long jarg2, Vec3d jarg2_);
  public final static native void Model_gravity__SWIG_2(long jarg1, Model jarg1_, double jarg2, double jarg3, double jarg4, int jarg5);
  public final static native void Model_gravity__SWIG_3(long jarg1, Model jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native double Model_g_resultant__SWIG_0(long jarg1, Model jarg1_, int jarg2);
  public final static native double Model_g_resultant__SWIG_1(long jarg1, Model jarg1_);
  public final static native void Model_remove_gravity(long jarg1, Model jarg1_);
  public final static native void Model_initState(long jarg1, Model jarg1_);
  public final static native void Model_updateFext__SWIG_0(long jarg1, Model jarg1_, double jarg2);
  public final static native void Model_updateFext__SWIG_1(long jarg1, Model jarg1_);
  public final static native void Model_updateElementDisplacements(long jarg1, Model jarg1_);
  public final static native void Model_updateFint(long jarg1, Model jarg1_);
  public final static native void Model_updatePosition__SWIG_0(long jarg1, Model jarg1_, long jarg2, Model jarg2_, double jarg3, int jarg4);
  public final static native void Model_updatePosition__SWIG_1(long jarg1, Model jarg1_, long jarg2, Model jarg2_, double jarg3);
  public final static native void Model_updateDeadWeight(long jarg1, Model jarg1_);
  public final static native long new_Node__SWIG_1(double jarg1, double jarg2, double jarg3, int jarg4);
  public final static native long new_Node__SWIG_2(double jarg1, double jarg2, double jarg3);
  public final static native long new_Node__SWIG_3(long jarg1, Vertex jarg1_, int jarg2);
  public final static native long new_Node__SWIG_4(long jarg1, Vertex jarg1_);
  public final static native long new_Node__SWIG_5(long jarg1, Node jarg1_, long jarg2);
  public final static native long new_Node__SWIG_6(long jarg1, Node jarg1_);
  public final static native long Node_clone__SWIG_0(long jarg1, Node jarg1_, long jarg2);
  public final static native long Node_clone__SWIG_1(long jarg1, Node jarg1_);
  public final static native void Node_copy__SWIG_0(long jarg1, Node jarg1_, long jarg2, Vertex jarg2_, long jarg3);
  public final static native void Node_copy__SWIG_1(long jarg1, Node jarg1_, long jarg2, Vertex jarg2_);
  public final static native void delete_Node(long jarg1);
  public final static native long Node_updatedPosition(long jarg1, Node jarg1_, long jarg2, VectReal jarg2_);
  public final static native void Node_updatePosition__SWIG_0(long jarg1, Node jarg1_, double jarg2, int jarg3);
  public final static native void Node_updatePosition__SWIG_1(long jarg1, Node jarg1_, double jarg2);
  public final static native void Node_updatePosition__SWIG_2(long jarg1, Node jarg1_, long jarg2, Node jarg2_, double jarg3, int jarg4);
  public final static native void Node_updatePosition__SWIG_3(long jarg1, Node jarg1_, long jarg2, Node jarg2_, double jarg3);
  public final static native void Node_updateLocalForces(long jarg1, Node jarg1_, long jarg2);
  public final static native long Node_state(long jarg1, Node jarg1_);
  public final static native long Node_dofs__SWIG_0(long jarg1, Node jarg1_, int jarg2);
  public final static native long Node_dofs__SWIG_1(long jarg1, Node jarg1_);
  public final static native void Node_setDofs__SWIG_0(long jarg1, Node jarg1_, long jarg2, int jarg3);
  public final static native void Node_setDofs__SWIG_1(long jarg1, Node jarg1_, long jarg2);
  public final static native void Node_addDofs__SWIG_0(long jarg1, Node jarg1_, long jarg2, int jarg3);
  public final static native void Node_addDofs__SWIG_1(long jarg1, Node jarg1_, long jarg2);
  public final static native long Node_getDisplacement__SWIG_0(long jarg1, Node jarg1_, int jarg2);
  public final static native long Node_getDisplacement__SWIG_1(long jarg1, Node jarg1_);
  public final static native long Node_getDisplacement__SWIG_2(long jarg1, Node jarg1_, long jarg2, VectReal jarg2_);
  public final static native long Node_getDisplacementVec__SWIG_0(long jarg1, Node jarg1_, int jarg2);
  public final static native long Node_getDisplacementVec__SWIG_1(long jarg1, Node jarg1_);
  public final static native double Node_squaredDisplacement__SWIG_0(long jarg1, Node jarg1_, long jarg2, VectReal jarg2_);
  public final static native double Node_squaredDisplacement__SWIG_1(long jarg1, Node jarg1_, int jarg2);
  public final static native double Node_squaredDisplacement__SWIG_2(long jarg1, Node jarg1_);
  public final static native long Node_nodalLoad__SWIG_0(long jarg1, Node jarg1_, int jarg2);
  public final static native long Node_nodalLoad__SWIG_1(long jarg1, Node jarg1_);
  public final static native void Node_updateFext__SWIG_0(long jarg1, Node jarg1_, double jarg2);
  public final static native void Node_updateFext__SWIG_1(long jarg1, Node jarg1_);
  public final static native long Node_getFext_global__SWIG_0(long jarg1, Node jarg1_, int jarg2);
  public final static native long Node_getFext_global__SWIG_1(long jarg1, Node jarg1_);
  public final static native long Node_getFext_local(long jarg1, Node jarg1_, long jarg2);
  public final static native long Node_getFint_local(long jarg1, Node jarg1_, long jarg2);
  public final static native void Node_initState(long jarg1, Node jarg1_, long jarg2);
  public final static native void Node_add__SWIG_0(long jarg1, Node jarg1_, long jarg2, LoadPoint jarg2_, int jarg3);
  public final static native void Node_add__SWIG_1(long jarg1, Node jarg1_, long jarg2, LoadPoint jarg2_);
  public final static native double Node_mass__SWIG_0(long jarg1, Node jarg1_);
  public final static native double Node_mass__SWIG_1(long jarg1, Node jarg1_, double jarg2);
  public final static native long Node_SWIG_dofs__SWIG_0(long jarg1, Node jarg1_, int jarg2);
  public final static native long Node_SWIG_dofs__SWIG_1(long jarg1, Node jarg1_);
  public final static native long Node_SWIG_scaled_dofs(long jarg1, Node jarg1_, long jarg2, VectReal jarg2_);
  public final static native long new_UnknownLoadException();
  public final static native void delete_UnknownLoadException(long jarg1);
  public final static native long Load_clone__SWIG_0(long jarg1, Load jarg1_, long jarg2);
  public final static native long Load_clone__SWIG_1(long jarg1, Load jarg1_);
  public final static native void delete_Load(long jarg1);
  public final static native void Load_update(long jarg1, Load jarg1_, long jarg2, CooSys jarg2_);
  public final static native long new_LoadUniformlyDistributed__SWIG_1(long jarg1, Vec3d jarg1_, int jarg2);
  public final static native long new_LoadUniformlyDistributed__SWIG_2(long jarg1, LoadUniformlyDistributed jarg1_);
  public final static native long LoadUniformlyDistributed_clone__SWIG_0(long jarg1, LoadUniformlyDistributed jarg1_, long jarg2);
  public final static native long LoadUniformlyDistributed_clone__SWIG_1(long jarg1, LoadUniformlyDistributed jarg1_);
  public final static native void LoadUniformlyDistributed_copy(long jarg1, LoadUniformlyDistributed jarg1_, long jarg2, Load jarg2_);
  public final static native void delete_LoadUniformlyDistributed(long jarg1);
  public final static native void LoadUniformlyDistributed_update(long jarg1, LoadUniformlyDistributed jarg1_, long jarg2, CooSys jarg2_);
  public final static native long LoadUniformlyDistributed_q_local(long jarg1, LoadUniformlyDistributed jarg1_);
  public final static native long new_InitialStrain__SWIG_1(double jarg1);
  public final static native long new_InitialStrain__SWIG_2(long jarg1, InitialStrain jarg1_);
  public final static native long InitialStrain_clone__SWIG_0(long jarg1, InitialStrain jarg1_, long jarg2);
  public final static native long InitialStrain_clone__SWIG_1(long jarg1, InitialStrain jarg1_);
  public final static native void InitialStrain_copy(long jarg1, InitialStrain jarg1_, long jarg2, Load jarg2_);
  public final static native void delete_InitialStrain(long jarg1);
  public final static native void InitialStrain_update(long jarg1, InitialStrain jarg1_, long jarg2, CooSys jarg2_);
  public final static native double InitialStrain_eps0(long jarg1, InitialStrain jarg1_);
  public final static native long new_GeometricImperfection__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_GeometricImperfection__SWIG_2(long jarg1, Vec3d jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long new_GeometricImperfection__SWIG_3(long jarg1, GeometricImperfection jarg1_);
  public final static native long GeometricImperfection_clone__SWIG_0(long jarg1, GeometricImperfection jarg1_, long jarg2);
  public final static native long GeometricImperfection_clone__SWIG_1(long jarg1, GeometricImperfection jarg1_);
  public final static native void GeometricImperfection_copy(long jarg1, GeometricImperfection jarg1_, long jarg2, Load jarg2_);
  public final static native void delete_GeometricImperfection(long jarg1);
  public final static native void GeometricImperfection_update(long jarg1, GeometricImperfection jarg1_, long jarg2, CooSys jarg2_);
  public final static native long GeometricImperfection_psi0(long jarg1, GeometricImperfection jarg1_);
  public final static native long GeometricImperfection_kapa0(long jarg1, GeometricImperfection jarg1_);
  public final static native long new_LoadPoint__SWIG_1(long jarg1, Vec3d jarg1_, long jarg2, Vec3d jarg2_, int jarg3);
  public final static native long new_LoadPoint__SWIG_2(long jarg1, Vec3d jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long new_LoadPoint__SWIG_3(long jarg1, Vec3d jarg1_, int jarg2);
  public final static native long new_LoadPoint__SWIG_4(long jarg1, Vec3d jarg1_);
  public final static native long new_LoadPoint__SWIG_5(long jarg1, LoadPoint jarg1_);
  public final static native long LoadPoint_clone__SWIG_0(long jarg1, LoadPoint jarg1_, long jarg2);
  public final static native long LoadPoint_clone__SWIG_1(long jarg1, LoadPoint jarg1_);
  public final static native void LoadPoint_copy(long jarg1, LoadPoint jarg1_, long jarg2, Load jarg2_);
  public final static native void delete_LoadPoint(long jarg1);
  public final static native void LoadPoint_update__SWIG_0(long jarg1, LoadPoint jarg1_, long jarg2);
  public final static native void LoadPoint_update__SWIG_1(long jarg1, LoadPoint jarg1_, long jarg2, CooSys jarg2_);
  public final static native long LoadPoint_L_global(long jarg1, LoadPoint jarg1_);
  public final static native long new_NodeState__SWIG_0(long jarg1);
  public final static native long new_NodeState__SWIG_1();
  public final static native long new_NodeState__SWIG_2(long jarg1, NodeState jarg1_);
  public final static native long NodeState_clone__SWIG_0(long jarg1, NodeState jarg1_, long jarg2);
  public final static native long NodeState_clone__SWIG_1(long jarg1, NodeState jarg1_);
  public final static native void NodeState_copy(long jarg1, NodeState jarg1_, long jarg2, NodeState jarg2_);
  public final static native void delete_NodeState(long jarg1);
  public final static native void NodeState_clear(long jarg1, NodeState jarg1_);
  public final static native void NodeState_scale(long jarg1, NodeState jarg1_, double jarg2);
  public final static native void NodeState_add(long jarg1, NodeState jarg1_, long jarg2, NodeState jarg2_);
  public final static native long NodeState_disp_global__SWIG_0(long jarg1, NodeState jarg1_, long jarg2);
  public final static native long NodeState_disp_trans_global(long jarg1, NodeState jarg1_, long jarg2);
  public final static native long NodeState_disp_rotat_global(long jarg1, NodeState jarg1_, long jarg2);
  public final static native long NodeState_getFext_global__SWIG_0(long jarg1, NodeState jarg1_, long jarg2);
  public final static native long NodeState_getFint_global(long jarg1, NodeState jarg1_, long jarg2);
  public final static native long NodeState_lcNum__SWIG_0(long jarg1, NodeState jarg1_);
  public final static native long NodeState_lcNum__SWIG_1(long jarg1, NodeState jarg1_, long jarg2);
  public final static native long PointState_clone__SWIG_0(long jarg1, PointState jarg1_, long jarg2);
  public final static native long PointState_clone__SWIG_1(long jarg1, PointState jarg1_);
  public final static native void PointState_copy(long jarg1, PointState jarg1_, long jarg2, PointState jarg2_);
  public final static native void delete_PointState(long jarg1);
  public final static native void PointState_clear(long jarg1, PointState jarg1_);
  public final static native void PointState_scale(long jarg1, PointState jarg1_, double jarg2);
  public final static native void PointState_add(long jarg1, PointState jarg1_, long jarg2, PointState jarg2_);
  public final static native double PointState_disp__SWIG_0(long jarg1, PointState jarg1_, int jarg2);
  public final static native long PointState_disp__SWIG_1(long jarg1, PointState jarg1_);
  public final static native void PointState_updateDisplacements(long jarg1, PointState jarg1_, long jarg2);
  public final static native long PointState_dispTransGlobal(long jarg1, PointState jarg1_);
  public final static native double PointState_resDispTrans(long jarg1, PointState jarg1_);
  public final static native double PointState_force__SWIG_0(long jarg1, PointState jarg1_, int jarg2);
  public final static native long PointState_force__SWIG_1(long jarg1, PointState jarg1_);
  public final static native long new_PointStateTrans__SWIG_0();
  public final static native long new_PointStateTrans__SWIG_1(long jarg1, CooSys jarg1_);
  public final static native long new_PointStateTrans__SWIG_2(long jarg1, PointStateTrans jarg1_, long jarg2);
  public final static native long new_PointStateTrans__SWIG_3(long jarg1, PointStateTrans jarg1_);
  public final static native long PointStateTrans_clone__SWIG_0(long jarg1, PointStateTrans jarg1_, long jarg2);
  public final static native long PointStateTrans_clone__SWIG_1(long jarg1, PointStateTrans jarg1_);
  public final static native void PointStateTrans_copy__SWIG_0(long jarg1, PointStateTrans jarg1_, long jarg2, PointState jarg2_, long jarg3);
  public final static native void PointStateTrans_copy__SWIG_1(long jarg1, PointStateTrans jarg1_, long jarg2, PointState jarg2_);
  public final static native void delete_PointStateTrans(long jarg1);
  public final static native long PointStateTrans_dispTransGlobal(long jarg1, PointStateTrans jarg1_);
  public final static native long new_PointStateTransRot__SWIG_0();
  public final static native long new_PointStateTransRot__SWIG_1(long jarg1, CooSys jarg1_);
  public final static native long new_PointStateTransRot__SWIG_2(long jarg1, PointStateTransRot jarg1_, long jarg2);
  public final static native long new_PointStateTransRot__SWIG_3(long jarg1, PointStateTransRot jarg1_);
  public final static native long PointStateTransRot_clone__SWIG_0(long jarg1, PointStateTransRot jarg1_, long jarg2);
  public final static native long PointStateTransRot_clone__SWIG_1(long jarg1, PointStateTransRot jarg1_);
  public final static native void PointStateTransRot_copy__SWIG_0(long jarg1, PointStateTransRot jarg1_, long jarg2, PointState jarg2_, long jarg3);
  public final static native void PointStateTransRot_copy__SWIG_1(long jarg1, PointStateTransRot jarg1_, long jarg2, PointState jarg2_);
  public final static native void delete_PointStateTransRot(long jarg1);
  public final static native long PointStateTransRot_dispTransGlobal(long jarg1, PointStateTransRot jarg1_);
  public final static native long new_ConflictingConstraints();
  public final static native void delete_ConflictingConstraints(long jarg1);
  public final static native long new_ReorderHandler__SWIG_1(long jarg1, Model jarg1_);
  public final static native long new_ReorderHandler__SWIG_2(long jarg1, ReorderHandler jarg1_);
  public final static native long ReorderHandler_clone__SWIG_0(long jarg1, ReorderHandler jarg1_, long jarg2);
  public final static native long ReorderHandler_clone__SWIG_1(long jarg1, ReorderHandler jarg1_);
  public final static native void ReorderHandler_copy(long jarg1, ReorderHandler jarg1_, long jarg2, ReorderHandler jarg2_);
  public final static native void delete_ReorderHandler(long jarg1);
  public final static native void ReorderHandler_update(long jarg1, ReorderHandler jarg1_);
  public final static native long ReorderHandler_numGraphNodes(long jarg1, ReorderHandler jarg1_);
  public final static native boolean ReorderHandler_nodeIsActive(long jarg1, ReorderHandler jarg1_, long jarg2);
  public final static native long ReorderHandler_optiNodeInd(long jarg1, ReorderHandler jarg1_, long jarg2);
  public final static native long ReorderHandler_connectedNodes(long jarg1, ReorderHandler jarg1_);
  public final static native long new_Response__SWIG_1(long jarg1, Deform jarg1_);
  public final static native long new_Response__SWIG_2(long jarg1, Response jarg1_);
  public final static native long Response_clone__SWIG_0(long jarg1, Response jarg1_, long jarg2);
  public final static native long Response_clone__SWIG_1(long jarg1, Response jarg1_);
  public final static native void Response_copy(long jarg1, Response jarg1_, long jarg2, Response jarg2_);
  public final static native void delete_Response(long jarg1);
  public final static native long Response_analysis(long jarg1, Response jarg1_);
  public final static native long Response_model(long jarg1, Response jarg1_);
  public final static native double Response_maxLCBendingEnergy(long jarg1, Response jarg1_);
  public final static native double Response_bendingEnergy__SWIG_0(long jarg1, Response jarg1_, int jarg2);
  public final static native double Response_bendingEnergy__SWIG_1(long jarg1, Response jarg1_);
  public final static native double Response_compliance(long jarg1, Response jarg1_, int jarg2);
  public final static native double Response_maxLCCompliance(long jarg1, Response jarg1_);
  public final static native double Response_maxLCWeightedCompressionCompliance(long jarg1, Response jarg1_);
  public final static native double Response_weightedCompressionCompliance(long jarg1, Response jarg1_, int jarg2);
  public final static native double Response_maxNodalDisplacement__SWIG_0(long jarg1, Response jarg1_);
  public final static native double Response_maxNodalDisplacement__SWIG_1(long jarg1, Response jarg1_, int jarg2);
  public final static native double Response_maxDisplacement__SWIG_0(long jarg1, Response jarg1_);
  public final static native double Response_maxDisplacement__SWIG_1(long jarg1, Response jarg1_, int jarg2);
  public final static native double Response_deadWeight(long jarg1, Response jarg1_, long jarg2);
  public final static native int Response_updateMemberForces(long jarg1, Response jarg1_);
  public final static native int Response_updateNodalDisplacements(long jarg1, Response jarg1_);
  public final static native void Response_touch(long jarg1, Response jarg1_);
  public final static native long new_Material__SWIG_0(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_Material__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_Material__SWIG_2(double jarg1, double jarg2, double jarg3);
  public final static native long new_Material__SWIG_3(double jarg1, double jarg2);
  public final static native long new_Material__SWIG_4(double jarg1);
  public final static native long new_Material__SWIG_5();
  public final static native long new_Material__SWIG_6(long jarg1, Material jarg1_);
  public final static native long Material_clone__SWIG_0(long jarg1, Material jarg1_, long jarg2);
  public final static native long Material_clone__SWIG_1(long jarg1, Material jarg1_);
  public final static native void Material_copy(long jarg1, Material jarg1_, long jarg2, Material jarg2_);
  public final static native void delete_Material(long jarg1);
  public final static native long Material_stress(long jarg1, Material jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long Material_ind__SWIG_0(long jarg1, Material jarg1_, long jarg2);
  public final static native long Material_ind__SWIG_1(long jarg1, Material jarg1_);
  public final static native double Material_E(long jarg1, Material jarg1_);
  public final static native double Material_G(long jarg1, Material jarg1_);
  public final static native double Material_fy(long jarg1, Material jarg1_);
  public final static native double Material_gamma(long jarg1, Material jarg1_);
  public final static native double Material_alphaT(long jarg1, Material jarg1_);
  public final static native long Element_clone__SWIG_0(long jarg1, Element jarg1_, long jarg2);
  public final static native long Element_clone__SWIG_1(long jarg1, Element jarg1_);
  public final static native void Element_copy__SWIG_0(long jarg1, Element jarg1_, long jarg2, Element jarg2_, long jarg3);
  public final static native void Element_copy__SWIG_1(long jarg1, Element jarg1_, long jarg2, Element jarg2_);
  public final static native void delete_Element(long jarg1);
  public final static native long Element_node(long jarg1, Element jarg1_, long jarg2);
  public final static native void Element_setNode(long jarg1, Element jarg1_, int jarg2, long jarg3, Node jarg3_);
  public final static native long Element_vertexes(long jarg1, Element jarg1_);
  public final static native long Element_vertexSet(long jarg1, Element jarg1_);
  public final static native double Element_characteristicLength(long jarg1, Element jarg1_);
  public final static native double Element_volume(long jarg1, Element jarg1_);
  public final static native double Element_mass(long jarg1, Element jarg1_);
  public final static native double Element_weight_per_unit(long jarg1, Element jarg1_);
  public final static native long Element_direction__SWIG_0(long jarg1, Element jarg1_, long jarg2);
  public final static native long Element_direction__SWIG_1(long jarg1, Element jarg1_);
  public final static native boolean Element_openTopology(long jarg1, Element jarg1_);
  public final static native long Element_splitAtNode__SWIG_0(long jarg1, Element jarg1_, long jarg2, Model jarg2_, long jarg3, Node jarg3_, double jarg4);
  public final static native long Element_splitAtNode__SWIG_1(long jarg1, Element jarg1_, long jarg2, Model jarg2_, long jarg3, Node jarg3_);
  public final static native long Element_split__SWIG_0(long jarg1, Element jarg1_, long jarg2, Model jarg2_, double jarg3, double jarg4);
  public final static native long Element_split__SWIG_1(long jarg1, Element jarg1_, long jarg2, Model jarg2_, double jarg3);
  public final static native void Element_add_split_ind(long jarg1, Element jarg1_, long jarg2, VectElem jarg2_, long jarg3, VectSizeT jarg3_);
  public final static native long Element_splitElemInd__SWIG_0(long jarg1, Element jarg1_);
  public final static native long Element_splitElemInd__SWIG_1(long jarg1, Element jarg1_, int jarg2);
  public final static native long Element_boundaryPoint(long jarg1, Element jarg1_, long jarg2, Model jarg2_, long jarg3);
  public final static native void Element_setActive(long jarg1, Element jarg1_);
  public final static native void Element_setInactive(long jarg1, Element jarg1_);
  public final static native boolean Element_isActive(long jarg1, Element jarg1_);
  public final static native long Element_elastStiffMatrix_g2g(long jarg1, Element jarg1_);
  public final static native long Element_massMatrix_g2g(long jarg1, Element jarg1_);
  public final static native long Element_geomStiffMatrix_g2g(long jarg1, Element jarg1_);
  public final static native long Element_tangentStiffMatrix_g2g(long jarg1, Element jarg1_);
  public final static native long Element_nNodes(long jarg1, Element jarg1_);
  public final static native long Element_centerPoint(long jarg1, Element jarg1_);
  public final static native long Element_nDofsPerNode(long jarg1, Element jarg1_);
  public final static native long Element_nTranslationalDofsPerNode(long jarg1, Element jarg1_);
  public final static native long Element_localForce(long jarg1, Element jarg1_, long jarg2, long jarg3);
  public final static native long Element_localDisp(long jarg1, Element jarg1_, long jarg2, long jarg3);
  public final static native long Element_interiorState(long jarg1, Element jarg1_, long jarg2, double jarg3);
  public final static native long Element_interiorStates(long jarg1, Element jarg1_, long jarg2, VectSizeT jarg2_, long jarg3, VectReal jarg3_);
  public final static native long Element_lcNum(long jarg1, Element jarg1_);
  public final static native boolean Element_loadCase_has_weight(long jarg1, Element jarg1_, long jarg2);
  public final static native long Element_loadCase_weight(long jarg1, Element jarg1_, long jarg2);
  public final static native double Element_axialNormalForce__SWIG_0(long jarg1, Element jarg1_, int jarg2);
  public final static native double Element_axialNormalForce__SWIG_1(long jarg1, Element jarg1_);
  public final static native double Element_axialStrain__SWIG_0(long jarg1, Element jarg1_, int jarg2);
  public final static native double Element_axialStrain__SWIG_1(long jarg1, Element jarg1_);
  public final static native long Element_strain__SWIG_0(long jarg1, Element jarg1_, long jarg2, long jarg3);
  public final static native long Element_strain__SWIG_1(long jarg1, Element jarg1_, long jarg2);
  public final static native long Element_strain__SWIG_2(long jarg1, Element jarg1_, long jarg2);
  public final static native long Element_strain__SWIG_3(long jarg1, Element jarg1_);
  public final static native double Element_maxInteriorDeflection__SWIG_0(long jarg1, Element jarg1_, int jarg2);
  public final static native double Element_maxInteriorDeflection__SWIG_1(long jarg1, Element jarg1_);
  public final static native long Element_deflection__SWIG_0(long jarg1, Element jarg1_, long jarg2, int jarg3);
  public final static native long Element_deflection__SWIG_1(long jarg1, Element jarg1_, long jarg2);
  public final static native long Element_coosys(long jarg1, Element jarg1_);
  public final static native void Element_updatePosition(long jarg1, Element jarg1_);
  public final static native void Element_updateCooSys(long jarg1, Element jarg1_);
  public final static native long Element_pointOnAxis__SWIG_0(long jarg1, Element jarg1_, double jarg2, boolean jarg3);
  public final static native long Element_pointOnAxis__SWIG_1(long jarg1, Element jarg1_, double jarg2);
  public final static native long Element_pointsOnAxis__SWIG_0(long jarg1, Element jarg1_, long jarg2, boolean jarg3);
  public final static native long Element_pointsOnAxis__SWIG_1(long jarg1, Element jarg1_, long jarg2);
  public final static native long Element_pointsOnAxis__SWIG_2(long jarg1, Element jarg1_);
  public final static native void Element_addDeflection__SWIG_0(long jarg1, Element jarg1_, long jarg2, VectVec3d jarg2_, long jarg3, double jarg4);
  public final static native void Element_addDeflection__SWIG_1(long jarg1, Element jarg1_, long jarg2, VectVec3d jarg2_, long jarg3);
  public final static native long Element_strainsOnAxis(long jarg1, Element jarg1_, long jarg2, long jarg3);
  public final static native double Element_axialDeformationEnergy__SWIG_0(long jarg1, Element jarg1_, int jarg2);
  public final static native double Element_axialDeformationEnergy__SWIG_1(long jarg1, Element jarg1_);
  public final static native double Element_bendingEnergy__SWIG_0(long jarg1, Element jarg1_, int jarg2);
  public final static native double Element_bendingEnergy__SWIG_1(long jarg1, Element jarg1_);
  public final static native double Element_elastEnergy__SWIG_0(long jarg1, Element jarg1_, int jarg2);
  public final static native double Element_elastEnergy__SWIG_1(long jarg1, Element jarg1_);
  public final static native double Element_work__SWIG_0(long jarg1, Element jarg1_, int jarg2, int jarg3);
  public final static native double Element_work__SWIG_1(long jarg1, Element jarg1_, int jarg2);
  public final static native double Element_work__SWIG_2(long jarg1, Element jarg1_);
  public final static native long Element_crosec__SWIG_0(long jarg1, Element jarg1_);
  public final static native long Element_crosec__SWIG_1(long jarg1, Element jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native long Element_material__SWIG_0(long jarg1, Element jarg1_);
  public final static native long Element_material__SWIG_1(long jarg1, Element jarg1_, long jarg2, Material jarg2_);
  public final static native long Element_eccNum__SWIG_0(long jarg1, Element jarg1_, long jarg2);
  public final static native long Element_eccNum__SWIG_1(long jarg1, Element jarg1_, long jarg2, long jarg3, Eccentricity jarg3_);
  public final static native boolean Element_allowIntersection__SWIG_0(long jarg1, Element jarg1_);
  public final static native boolean Element_allowIntersection__SWIG_1(long jarg1, Element jarg1_, boolean jarg2);
  public final static native void Element_clearLoads(long jarg1, Element jarg1_);
  public final static native void Element_initState(long jarg1, Element jarg1_, long jarg2);
  public final static native void Element_updateFext__SWIG_0(long jarg1, Element jarg1_, long jarg2, double jarg3);
  public final static native void Element_updateFext__SWIG_1(long jarg1, Element jarg1_, long jarg2);
  public final static native void Element_updateDeadWeight(long jarg1, Element jarg1_, long jarg2, VectReal jarg2_, long jarg3);
  public final static native void Element_updateDisplacements(long jarg1, Element jarg1_);
  public final static native void Element_updateFint(long jarg1, Element jarg1_);
  public final static native void Element_add(long jarg1, Element jarg1_, long jarg2, long jarg3, Load jarg3_);
  public final static native long Element_ind__SWIG_0(long jarg1, Element jarg1_, long jarg2);
  public final static native long Element_ind__SWIG_1(long jarg1, Element jarg1_);
  public final static native int Element_id_num__SWIG_0(long jarg1, Element jarg1_, int jarg2);
  public final static native int Element_id_num__SWIG_1(long jarg1, Element jarg1_);
  public final static native void Element_accept(long jarg1, Element jarg1_, long jarg2, ElementVisitor jarg2_);
  public final static native long Element_SWIG_localForceState(long jarg1, Element jarg1_, int jarg2, int jarg3);
  public final static native int Element_SWIG_typeid(long jarg1, Element jarg1_);
  public final static native double Element_SWIG_NII_value(long jarg1, Element jarg1_);
  public final static native void Element_Impl_copy__SWIG_0(long jarg1, Element_Impl jarg1_, long jarg2, Element jarg2_, long jarg3);
  public final static native void Element_Impl_copy__SWIG_1(long jarg1, Element_Impl jarg1_, long jarg2, Element jarg2_);
  public final static native long Element_Impl_clone__SWIG_0(long jarg1, Element_Impl jarg1_, long jarg2);
  public final static native long Element_Impl_clone__SWIG_1(long jarg1, Element_Impl jarg1_);
  public final static native void delete_Element_Impl(long jarg1);
  public final static native long Element_Impl_node(long jarg1, Element_Impl jarg1_, long jarg2);
  public final static native void Element_Impl_setNode(long jarg1, Element_Impl jarg1_, int jarg2, long jarg3, Node jarg3_);
  public final static native long Element_Impl_vertexes(long jarg1, Element_Impl jarg1_);
  public final static native long Element_Impl_vertexSet(long jarg1, Element_Impl jarg1_);
  public final static native double Element_Impl_weight_per_unit(long jarg1, Element_Impl jarg1_);
  public final static native boolean Element_Impl_openTopology(long jarg1, Element_Impl jarg1_);
  public final static native long Element_Impl_direction__SWIG_0(long jarg1, Element_Impl jarg1_, long jarg2);
  public final static native long Element_Impl_direction__SWIG_1(long jarg1, Element_Impl jarg1_);
  public final static native long Element_Impl_centerPoint(long jarg1, Element_Impl jarg1_);
  public final static native void Element_Impl_add_split_ind(long jarg1, Element_Impl jarg1_, long jarg2, VectElem jarg2_, long jarg3, VectSizeT jarg3_);
  public final static native long Element_Impl_splitElemInd__SWIG_0(long jarg1, Element_Impl jarg1_);
  public final static native long Element_Impl_splitElemInd__SWIG_1(long jarg1, Element_Impl jarg1_, int jarg2);
  public final static native long Element_Impl_boundaryPoint(long jarg1, Element_Impl jarg1_, long jarg2, Model jarg2_, long jarg3);
  public final static native long Element_Impl_ind__SWIG_0(long jarg1, Element_Impl jarg1_, long jarg2);
  public final static native long Element_Impl_ind__SWIG_1(long jarg1, Element_Impl jarg1_);
  public final static native void Element_Impl_setActive(long jarg1, Element_Impl jarg1_);
  public final static native void Element_Impl_setInactive(long jarg1, Element_Impl jarg1_);
  public final static native boolean Element_Impl_isActive(long jarg1, Element_Impl jarg1_);
  public final static native long Element_Impl_nNodes(long jarg1, Element_Impl jarg1_);
  public final static native long Element_Impl_localForce(long jarg1, Element_Impl jarg1_, long jarg2, long jarg3);
  public final static native long Element_Impl_localDisp(long jarg1, Element_Impl jarg1_, long jarg2, long jarg3);
  public final static native long Element_Impl_lcNum(long jarg1, Element_Impl jarg1_);
  public final static native double Element_Impl_axialNormalForce__SWIG_0(long jarg1, Element_Impl jarg1_, int jarg2);
  public final static native double Element_Impl_axialNormalForce__SWIG_1(long jarg1, Element_Impl jarg1_);
  public final static native double Element_Impl_axialStrain__SWIG_0(long jarg1, Element_Impl jarg1_, int jarg2);
  public final static native double Element_Impl_axialStrain__SWIG_1(long jarg1, Element_Impl jarg1_);
  public final static native long Element_Impl_strain__SWIG_0(long jarg1, Element_Impl jarg1_, long jarg2, long jarg3);
  public final static native long Element_Impl_strain__SWIG_1(long jarg1, Element_Impl jarg1_, long jarg2);
  public final static native long Element_Impl_strain__SWIG_2(long jarg1, Element_Impl jarg1_, long jarg2);
  public final static native long Element_Impl_strain__SWIG_3(long jarg1, Element_Impl jarg1_);
  public final static native double Element_Impl_maxInteriorDeflection__SWIG_0(long jarg1, Element_Impl jarg1_, int jarg2);
  public final static native double Element_Impl_maxInteriorDeflection__SWIG_1(long jarg1, Element_Impl jarg1_);
  public final static native long Element_Impl_deflection__SWIG_0(long jarg1, Element_Impl jarg1_, long jarg2, int jarg3);
  public final static native long Element_Impl_deflection__SWIG_1(long jarg1, Element_Impl jarg1_, long jarg2);
  public final static native void Element_Impl_updatePosition(long jarg1, Element_Impl jarg1_);
  public final static native long Element_Impl_strainsOnAxis(long jarg1, Element_Impl jarg1_, long jarg2, long jarg3);
  public final static native double Element_Impl_axialDeformationEnergy__SWIG_0(long jarg1, Element_Impl jarg1_, int jarg2);
  public final static native double Element_Impl_axialDeformationEnergy__SWIG_1(long jarg1, Element_Impl jarg1_);
  public final static native double Element_Impl_bendingEnergy__SWIG_0(long jarg1, Element_Impl jarg1_, int jarg2);
  public final static native double Element_Impl_bendingEnergy__SWIG_1(long jarg1, Element_Impl jarg1_);
  public final static native double Element_Impl_elastEnergy__SWIG_0(long jarg1, Element_Impl jarg1_, int jarg2);
  public final static native double Element_Impl_elastEnergy__SWIG_1(long jarg1, Element_Impl jarg1_);
  public final static native double Element_Impl_work__SWIG_0(long jarg1, Element_Impl jarg1_, int jarg2, int jarg3);
  public final static native double Element_Impl_work__SWIG_1(long jarg1, Element_Impl jarg1_, int jarg2);
  public final static native double Element_Impl_work__SWIG_2(long jarg1, Element_Impl jarg1_);
  public final static native long Element_Impl_material__SWIG_0(long jarg1, Element_Impl jarg1_);
  public final static native long Element_Impl_material__SWIG_1(long jarg1, Element_Impl jarg1_, long jarg2, Material jarg2_);
  public final static native long Element_Impl_eccNum__SWIG_0(long jarg1, Element_Impl jarg1_, long jarg2);
  public final static native long Element_Impl_eccNum__SWIG_1(long jarg1, Element_Impl jarg1_, long jarg2, long jarg3, Eccentricity jarg3_);
  public final static native boolean Element_Impl_allowIntersection__SWIG_0(long jarg1, Element_Impl jarg1_);
  public final static native boolean Element_Impl_allowIntersection__SWIG_1(long jarg1, Element_Impl jarg1_, boolean jarg2);
  public final static native void Element_Impl_updateFext__SWIG_0(long jarg1, Element_Impl jarg1_, long jarg2, double jarg3);
  public final static native void Element_Impl_updateFext__SWIG_1(long jarg1, Element_Impl jarg1_, long jarg2);
  public final static native void Element_Impl_updateDeadWeight(long jarg1, Element_Impl jarg1_, long jarg2, VectReal jarg2_, long jarg3);
  public final static native void Element_Impl_updateFint(long jarg1, Element_Impl jarg1_);
  public final static native boolean Element_Impl_loadCase_has_weight(long jarg1, Element_Impl jarg1_, long jarg2);
  public final static native long Element_Impl_loadCase_weight(long jarg1, Element_Impl jarg1_, long jarg2);
  public final static native void Element_Impl_clearLoads(long jarg1, Element_Impl jarg1_);
  public final static native void Element_Impl_add(long jarg1, Element_Impl jarg1_, long jarg2, long jarg3, Load jarg3_);
  public final static native int Element_Impl_id_num__SWIG_0(long jarg1, Element_Impl jarg1_, int jarg2);
  public final static native int Element_Impl_id_num__SWIG_1(long jarg1, Element_Impl jarg1_);
  public final static native long Element_Impl_SWIG_localForceState(long jarg1, Element_Impl jarg1_, int jarg2, int jarg3);
  public final static native int Element_Impl_SWIG_typeid(long jarg1, Element_Impl jarg1_);
  public final static native double Element_Impl_SWIG_NII_value(long jarg1, Element_Impl jarg1_);
  public final static native void delete_ElementVisitor(long jarg1);
  public final static native void ElementVisitor_visit__SWIG_0(long jarg1, ElementVisitor jarg1_, long jarg2, Model jarg2_);
  public final static native void ElementVisitor_visit__SWIG_1(long jarg1, ElementVisitor jarg1_, long jarg2, VectElem jarg2_);
  public final static native void ElementVisitor_visit__SWIG_2(long jarg1, ElementVisitor jarg1_, long jarg2, Beam3D jarg2_);
  public final static native void ElementVisitor_visit__SWIG_3(long jarg1, ElementVisitor jarg1_, long jarg2, Truss3D jarg2_);
  public final static native void ElementVisitor_visit__SWIG_4(long jarg1, ElementVisitor jarg1_, long jarg2, Spring3D jarg2_);
  public final static native void ElementVisitor_visit__SWIG_5(long jarg1, ElementVisitor jarg1_, long jarg2, TriShell3D jarg2_);
  public final static native long new_PropertyTypeMismatch();
  public final static native void delete_PropertyTypeMismatch(long jarg1);
  public final static native long new_CroSecStrain__SWIG_0();
  public final static native long new_CroSecStrain__SWIG_1(long jarg1, Vec3d jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long new_CroSecStrain__SWIG_2(double jarg1, double jarg2, double jarg3);
  public final static native long new_CroSecStrain__SWIG_3(long jarg1, PointState jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native double CroSecStrain_strainAt__SWIG_0(long jarg1, CroSecStrain jarg1_, double jarg2, double jarg3);
  public final static native long CroSecStrain_strainAt__SWIG_1(long jarg1, CroSecStrain jarg1_, double jarg2);
  public final static native long CroSecStrain_stressAt(long jarg1, CroSecStrain jarg1_, double jarg2, long jarg3, Material jarg3_);
  public final static native double CroSecStrain_kapa_y(long jarg1, CroSecStrain jarg1_);
  public final static native double CroSecStrain_kapa_z(long jarg1, CroSecStrain jarg1_);
  public final static native double CroSecStrain_eps_x(long jarg1, CroSecStrain jarg1_);
  public final static native long CroSecStrain_kapa(long jarg1, CroSecStrain jarg1_);
  public final static native void delete_CroSecStrain(long jarg1);
  public final static native long ElementCroSec_clone__SWIG_0(long jarg1, ElementCroSec jarg1_, long jarg2);
  public final static native long ElementCroSec_clone__SWIG_1(long jarg1, ElementCroSec jarg1_);
  public final static native void ElementCroSec_copy(long jarg1, ElementCroSec jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void delete_ElementCroSec(long jarg1);
  public final static native boolean ElementCroSec_strongerThan(long jarg1, ElementCroSec jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void ElementCroSec_family_set(long jarg1, ElementCroSec jarg1_, int jarg2);
  public final static native int ElementCroSec_family_get(long jarg1, ElementCroSec jarg1_);
  public final static native void ElementCroSec_id_set(long jarg1, ElementCroSec jarg1_, int jarg2);
  public final static native int ElementCroSec_id_get(long jarg1, ElementCroSec jarg1_);
  public final static native long ElementCroSec_ind__SWIG_0(long jarg1, ElementCroSec jarg1_, long jarg2);
  public final static native long ElementCroSec_ind__SWIG_1(long jarg1, ElementCroSec jarg1_);
  public final static native long ElementCroSec_eccentricity__SWIG_0(long jarg1, ElementCroSec jarg1_);
  public final static native long ElementCroSec_eccentricity__SWIG_1(long jarg1, ElementCroSec jarg1_, long jarg2, Vec3d jarg2_);
  public final static native void ElementState_copy__SWIG_0(long jarg1, ElementState jarg1_, long jarg2, ElementState jarg2_, long jarg3);
  public final static native void ElementState_copy__SWIG_1(long jarg1, ElementState jarg1_, long jarg2, ElementState jarg2_);
  public final static native long ElementState_clone__SWIG_0(long jarg1, ElementState jarg1_, long jarg2);
  public final static native long ElementState_clone__SWIG_1(long jarg1, ElementState jarg1_);
  public final static native void delete_ElementState(long jarg1);
  public final static native long ElementState_nNodes(long jarg1, ElementState jarg1_);
  public final static native long ElementState_nNodalDofs(long jarg1, ElementState jarg1_);
  public final static native long ElementState_lcNum(long jarg1, ElementState jarg1_);
  public final static native double ElementState_elastEnergy__SWIG_0(long jarg1, ElementState jarg1_, long jarg2);
  public final static native double ElementState_elastEnergy__SWIG_1(long jarg1, ElementState jarg1_, long jarg2, double jarg3);
  public final static native long ElementState_disp(long jarg1, ElementState jarg1_, long jarg2, long jarg3);
  public final static native long ElementState_elemDisp(long jarg1, ElementState jarg1_, long jarg2);
  public final static native long ElementState_force(long jarg1, ElementState jarg1_, long jarg2, long jarg3);
  public final static native void ElementState_subtractFint(long jarg1, ElementState jarg1_, long jarg2, long jarg3);
  public final static native long ElementState_globalForce(long jarg1, ElementState jarg1_, long jarg2, long jarg3);
  public final static native void ElementState_updateDisplacements(long jarg1, ElementState jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void ElementState_setEccentricity(long jarg1, ElementState jarg1_, long jarg2);
  public final static native void ElementState_clear(long jarg1, ElementState jarg1_);
  public final static native void ElementState_scale(long jarg1, ElementState jarg1_, double jarg2);
  public final static native void ElementState_add(long jarg1, ElementState jarg1_, long jarg2, ElementState jarg2_);
  public final static native void ElementStraightLine_copy__SWIG_0(long jarg1, ElementStraightLine jarg1_, long jarg2, Element jarg2_, long jarg3);
  public final static native void ElementStraightLine_copy__SWIG_1(long jarg1, ElementStraightLine jarg1_, long jarg2, Element jarg2_);
  public final static native long ElementStraightLine_clone__SWIG_0(long jarg1, ElementStraightLine jarg1_, long jarg2);
  public final static native long ElementStraightLine_clone__SWIG_1(long jarg1, ElementStraightLine jarg1_);
  public final static native void delete_ElementStraightLine(long jarg1);
  public final static native long ElementStraightLine_edge(long jarg1, ElementStraightLine jarg1_);
  public final static native double ElementStraightLine_characteristicLength(long jarg1, ElementStraightLine jarg1_);
  public final static native double ElementStraightLine_length(long jarg1, ElementStraightLine jarg1_);
  public final static native long ElementStraightLine_segment(long jarg1, ElementStraightLine jarg1_);
  public final static native long ElementStraightLine_nearNode(long jarg1, ElementStraightLine jarg1_, long jarg2, Vertex jarg2_, double jarg3);
  public final static native long ElementStraightLine_coosys(long jarg1, ElementStraightLine jarg1_);
  public final static native void ElementStraightLine_updateCooSys(long jarg1, ElementStraightLine jarg1_);
  public final static native void ElementStraightLine_updatePosition(long jarg1, ElementStraightLine jarg1_);
  public final static native long ElementStraightLine_pointsOnAxis__SWIG_0(long jarg1, ElementStraightLine jarg1_, long jarg2, boolean jarg3);
  public final static native long ElementStraightLine_pointsOnAxis__SWIG_1(long jarg1, ElementStraightLine jarg1_, long jarg2);
  public final static native long ElementStraightLine_pointOnAxis__SWIG_0(long jarg1, ElementStraightLine jarg1_, double jarg2, boolean jarg3);
  public final static native long ElementStraightLine_pointOnAxis__SWIG_1(long jarg1, ElementStraightLine jarg1_, double jarg2);
  public final static native double ElementStraightLine_bucklingLengthZ(long jarg1, ElementStraightLine jarg1_);
  public final static native double ElementStraightLine_bucklingLengthY(long jarg1, ElementStraightLine jarg1_);
  public final static native double ElementStraightLine_bucklingLengthLT(long jarg1, ElementStraightLine jarg1_);
  public final static native double ElementStraightLine_axialStrain__SWIG_0(long jarg1, ElementStraightLine jarg1_, int jarg2);
  public final static native double ElementStraightLine_axialStrain__SWIG_1(long jarg1, ElementStraightLine jarg1_);
  public final static native long ElementStraightLine_splitAtNode(long jarg1, ElementStraightLine jarg1_, long jarg2, Model jarg2_, long jarg3, Node jarg3_, double jarg4);
  public final static native long ElementStraightLine_split(long jarg1, ElementStraightLine jarg1_, long jarg2, Model jarg2_, double jarg3, double jarg4);
  public final static native void ElementStraightLine_addDeflection__SWIG_0(long jarg1, ElementStraightLine jarg1_, long jarg2, VectVec3d jarg2_, long jarg3, double jarg4);
  public final static native void ElementStraightLine_addDeflection__SWIG_1(long jarg1, ElementStraightLine jarg1_, long jarg2, VectVec3d jarg2_, long jarg3);
  public final static native long ElementStraightLine_strainsOnAxis(long jarg1, ElementStraightLine jarg1_, long jarg2, long jarg3);
  public final static native void ElementStraightLine_updateFext__SWIG_0(long jarg1, ElementStraightLine jarg1_, long jarg2, double jarg3);
  public final static native void ElementStraightLine_updateFext__SWIG_1(long jarg1, ElementStraightLine jarg1_, long jarg2);
  public final static native void ElementStraightLine_updateDisplacements(long jarg1, ElementStraightLine jarg1_);
  public final static native long ElementStraightLine_interiorState(long jarg1, ElementStraightLine jarg1_, long jarg2, double jarg3);
  public final static native long ElementStraightLine_interiorStates(long jarg1, ElementStraightLine jarg1_, long jarg2, VectSizeT jarg2_, long jarg3, VectReal jarg3_);
  public final static native double ElementStraightLine_NII__SWIG_0(long jarg1, ElementStraightLine jarg1_, double jarg2);
  public final static native double ElementStraightLine_NII__SWIG_1(long jarg1, ElementStraightLine jarg1_);
  public final static native double ElementStraightLine_SWIG_NII_value(long jarg1, ElementStraightLine jarg1_);
  public final static native void ElementStraightLineState_copy__SWIG_0(long jarg1, ElementStraightLineState jarg1_, long jarg2, ElementState jarg2_, long jarg3);
  public final static native void ElementStraightLineState_copy__SWIG_1(long jarg1, ElementStraightLineState jarg1_, long jarg2, ElementState jarg2_);
  public final static native void delete_ElementStraightLineState(long jarg1);
  public final static native long ElementStraightLineState_globalForce(long jarg1, ElementStraightLineState jarg1_, long jarg2, long jarg3);
  public final static native void ElementStraightLineState_updateDisplacements(long jarg1, ElementStraightLineState jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void ElementStraightLineState_setEccentricity(long jarg1, ElementStraightLineState jarg1_, long jarg2);
  public final static native void delete_ElementStraightLineLoadInfo(long jarg1);
  public final static native long ElementStraightLineLoadInfo_maxDegAj_get();
  public final static native long ElementStraightLineLoadInfo_aj(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native long ElementStraightLineLoadInfo_bjy(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native long ElementStraightLineLoadInfo_bjz(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native double ElementStraightLineLoadInfo_ky(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native double ElementStraightLineLoadInfo_kz(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native double ElementStraightLineLoadInfo_gammay(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native double ElementStraightLineLoadInfo_gammaz(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native double ElementStraightLineLoadInfo_nII(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native void ElementStraightLineLoadInfo_setPos(long jarg1, ElementStraightLineLoadInfo jarg1_, double jarg2);
  public final static native double ElementStraightLineLoadInfo_length(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native double ElementStraightLineLoadInfo_invEIy(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native double ElementStraightLineLoadInfo_invGAz(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native double ElementStraightLineLoadInfo_invEIz(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native double ElementStraightLineLoadInfo_invGAy(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native void ElementStraightLineLoadInfo_addPsi0(long jarg1, ElementStraightLineLoadInfo jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long ElementStraightLineLoadInfo_psi0(long jarg1, ElementStraightLineLoadInfo jarg1_);
  public final static native long new_Truss3D__SWIG_1(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Truss3DCroSec jarg4_, double jarg5, int jarg6, double jarg7, double jarg8, double jarg9);
  public final static native long new_Truss3D__SWIG_2(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Truss3DCroSec jarg4_, double jarg5, int jarg6, double jarg7, double jarg8);
  public final static native long new_Truss3D__SWIG_3(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Truss3DCroSec jarg4_, double jarg5, int jarg6, double jarg7);
  public final static native long new_Truss3D__SWIG_4(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Truss3DCroSec jarg4_, double jarg5, int jarg6);
  public final static native long new_Truss3D__SWIG_5(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Truss3DCroSec jarg4_, double jarg5);
  public final static native long new_Truss3D__SWIG_6(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Truss3DCroSec jarg4_);
  public final static native long new_Truss3D__SWIG_7(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, int jarg7, double jarg8, double jarg9, double jarg10);
  public final static native long new_Truss3D__SWIG_8(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, int jarg7, double jarg8, double jarg9);
  public final static native long new_Truss3D__SWIG_9(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, int jarg7, double jarg8);
  public final static native long new_Truss3D__SWIG_10(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, int jarg7);
  public final static native long new_Truss3D__SWIG_11(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6);
  public final static native long new_Truss3D__SWIG_12(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5);
  public final static native long new_Truss3D__SWIG_13(long jarg1, Truss3D jarg1_, long jarg2);
  public final static native long new_Truss3D__SWIG_14(long jarg1, Truss3D jarg1_);
  public final static native long Truss3D_clone__SWIG_0(long jarg1, Truss3D jarg1_, long jarg2);
  public final static native long Truss3D_clone__SWIG_1(long jarg1, Truss3D jarg1_);
  public final static native void Truss3D_copy__SWIG_0(long jarg1, Truss3D jarg1_, long jarg2, Element jarg2_, long jarg3);
  public final static native void Truss3D_copy__SWIG_1(long jarg1, Truss3D jarg1_, long jarg2, Element jarg2_);
  public final static native void delete_Truss3D(long jarg1);
  public final static native long Truss3D_elastStiffMatrix_g2g(long jarg1, Truss3D jarg1_);
  public final static native long Truss3D_massMatrix_g2g(long jarg1, Truss3D jarg1_);
  public final static native long Truss3D_geomStiffMatrix_g2g(long jarg1, Truss3D jarg1_);
  public final static native long Truss3D_tangentStiffMatrix_g2g(long jarg1, Truss3D jarg1_);
  public final static native long Truss3D_nDofsPerNode(long jarg1, Truss3D jarg1_);
  public final static native long Truss3D_nTranslationalDofsPerNode(long jarg1, Truss3D jarg1_);
  public final static native double Truss3D_volume(long jarg1, Truss3D jarg1_);
  public final static native double Truss3D_mass(long jarg1, Truss3D jarg1_);
  public final static native double Truss3D_weight_per_unit(long jarg1, Truss3D jarg1_);
  public final static native double Truss3D_axialNormalForce__SWIG_0(long jarg1, Truss3D jarg1_, int jarg2);
  public final static native double Truss3D_axialNormalForce__SWIG_1(long jarg1, Truss3D jarg1_);
  public final static native double Truss3D_axialDeformationEnergy__SWIG_0(long jarg1, Truss3D jarg1_, int jarg2);
  public final static native double Truss3D_axialDeformationEnergy__SWIG_1(long jarg1, Truss3D jarg1_);
  public final static native double Truss3D_maxInteriorDeflection__SWIG_0(long jarg1, Truss3D jarg1_, int jarg2);
  public final static native double Truss3D_maxInteriorDeflection__SWIG_1(long jarg1, Truss3D jarg1_);
  public final static native long Truss3D_deflection__SWIG_0(long jarg1, Truss3D jarg1_, long jarg2, int jarg3);
  public final static native long Truss3D_deflection__SWIG_1(long jarg1, Truss3D jarg1_, long jarg2);
  public final static native long Truss3D_strain__SWIG_0(long jarg1, Truss3D jarg1_, long jarg2, long jarg3);
  public final static native long Truss3D_strain__SWIG_1(long jarg1, Truss3D jarg1_, long jarg2);
  public final static native long Truss3D_crosec__SWIG_0(long jarg1, Truss3D jarg1_);
  public final static native long Truss3D_crosec__SWIG_1(long jarg1, Truss3D jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void Truss3D_accept(long jarg1, Truss3D jarg1_, long jarg2, ElementVisitor jarg2_);
  public final static native int Truss3D_SWIG_typeid(long jarg1, Truss3D jarg1_);
  public final static native void Truss3DCroSec_A_set(long jarg1, Truss3DCroSec jarg1_, double jarg2);
  public final static native double Truss3DCroSec_A_get(long jarg1, Truss3DCroSec jarg1_);
  public final static native long new_Truss3DCroSec__SWIG_0();
  public final static native long new_Truss3DCroSec__SWIG_1(double jarg1);
  public final static native long new_Truss3DCroSec__SWIG_2(long jarg1, Truss3DCroSec jarg1_);
  public final static native long Truss3DCroSec_clone__SWIG_0(long jarg1, Truss3DCroSec jarg1_, long jarg2);
  public final static native long Truss3DCroSec_clone__SWIG_1(long jarg1, Truss3DCroSec jarg1_);
  public final static native void Truss3DCroSec_copy(long jarg1, Truss3DCroSec jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void delete_Truss3DCroSec(long jarg1);
  public final static native long new_Truss3DState__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native long new_Truss3DState__SWIG_2(long jarg1, Truss3DState jarg1_, long jarg2);
  public final static native long new_Truss3DState__SWIG_3(long jarg1, Truss3DState jarg1_);
  public final static native long Truss3DState_clone__SWIG_0(long jarg1, Truss3DState jarg1_, long jarg2);
  public final static native long Truss3DState_clone__SWIG_1(long jarg1, Truss3DState jarg1_);
  public final static native void Truss3DState_copy__SWIG_0(long jarg1, Truss3DState jarg1_, long jarg2, ElementState jarg2_, long jarg3);
  public final static native void Truss3DState_copy__SWIG_1(long jarg1, Truss3DState jarg1_, long jarg2, ElementState jarg2_);
  public final static native void delete_Truss3DState(long jarg1);
  public final static native long Truss3DState_nNodes(long jarg1, Truss3DState jarg1_);
  public final static native long Truss3DState_nNodalDofs(long jarg1, Truss3DState jarg1_);
  public final static native long new_Truss3DLoadInfo(double jarg1, double jarg2);
  public final static native void delete_Truss3DLoadInfo(long jarg1);
  public final static native long Truss3DLoadInfo_aj(long jarg1, Truss3DLoadInfo jarg1_);
  public final static native long Truss3DLoadInfo_bjy(long jarg1, Truss3DLoadInfo jarg1_);
  public final static native long Truss3DLoadInfo_bjz(long jarg1, Truss3DLoadInfo jarg1_);
  public final static native double Truss3DLoadInfo_ky(long jarg1, Truss3DLoadInfo jarg1_);
  public final static native double Truss3DLoadInfo_kz(long jarg1, Truss3DLoadInfo jarg1_);
  public final static native double Truss3DLoadInfo_gammay(long jarg1, Truss3DLoadInfo jarg1_);
  public final static native double Truss3DLoadInfo_gammaz(long jarg1, Truss3DLoadInfo jarg1_);
  public final static native double Truss3DLoadInfo_nII(long jarg1, Truss3DLoadInfo jarg1_);
  public final static native void Truss3DLoadInfo_setPos(long jarg1, Truss3DLoadInfo jarg1_, double jarg2);
  public final static native double Truss3DLoadInfo_length(long jarg1, Truss3DLoadInfo jarg1_);
  public final static native double Truss3DLoadInfo_invEIy(long jarg1, Truss3DLoadInfo jarg1_);
  public final static native double Truss3DLoadInfo_invGAz(long jarg1, Truss3DLoadInfo jarg1_);
  public final static native double Truss3DLoadInfo_invEIz(long jarg1, Truss3DLoadInfo jarg1_);
  public final static native double Truss3DLoadInfo_invGAy(long jarg1, Truss3DLoadInfo jarg1_);
  public final static native long new_Beam3D__SWIG_1(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Beam3DCroSec jarg4_, double jarg5, int jarg6, long jarg7, Eccentricity jarg7_, long jarg8, Eccentricity jarg8_, double jarg9, double jarg10, double jarg11);
  public final static native long new_Beam3D__SWIG_2(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Beam3DCroSec jarg4_, double jarg5, int jarg6, long jarg7, Eccentricity jarg7_, long jarg8, Eccentricity jarg8_, double jarg9, double jarg10);
  public final static native long new_Beam3D__SWIG_3(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Beam3DCroSec jarg4_, double jarg5, int jarg6, long jarg7, Eccentricity jarg7_, long jarg8, Eccentricity jarg8_, double jarg9);
  public final static native long new_Beam3D__SWIG_4(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Beam3DCroSec jarg4_, double jarg5, int jarg6, long jarg7, Eccentricity jarg7_, long jarg8, Eccentricity jarg8_);
  public final static native long new_Beam3D__SWIG_5(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Beam3DCroSec jarg4_, double jarg5, int jarg6, long jarg7, Eccentricity jarg7_);
  public final static native long new_Beam3D__SWIG_6(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Beam3DCroSec jarg4_, double jarg5, int jarg6);
  public final static native long new_Beam3D__SWIG_7(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Beam3DCroSec jarg4_, double jarg5);
  public final static native long new_Beam3D__SWIG_8(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Beam3DCroSec jarg4_);
  public final static native long new_Beam3D__SWIG_9(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, int jarg7, long jarg8, Eccentricity jarg8_, long jarg9, Eccentricity jarg9_, double jarg10, double jarg11, double jarg12);
  public final static native long new_Beam3D__SWIG_10(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, int jarg7, long jarg8, Eccentricity jarg8_, long jarg9, Eccentricity jarg9_, double jarg10, double jarg11);
  public final static native long new_Beam3D__SWIG_11(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, int jarg7, long jarg8, Eccentricity jarg8_, long jarg9, Eccentricity jarg9_, double jarg10);
  public final static native long new_Beam3D__SWIG_12(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, int jarg7, long jarg8, Eccentricity jarg8_, long jarg9, Eccentricity jarg9_);
  public final static native long new_Beam3D__SWIG_13(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, int jarg7, long jarg8, Eccentricity jarg8_);
  public final static native long new_Beam3D__SWIG_14(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, int jarg7);
  public final static native long new_Beam3D__SWIG_15(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6);
  public final static native long new_Beam3D__SWIG_16(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5);
  public final static native long new_Beam3D__SWIG_17(long jarg1, Beam3D jarg1_, long jarg2);
  public final static native long new_Beam3D__SWIG_18(long jarg1, Beam3D jarg1_);
  public final static native long Beam3D_clone__SWIG_0(long jarg1, Beam3D jarg1_, long jarg2);
  public final static native long Beam3D_clone__SWIG_1(long jarg1, Beam3D jarg1_);
  public final static native void Beam3D_copy__SWIG_0(long jarg1, Beam3D jarg1_, long jarg2, Element jarg2_, long jarg3);
  public final static native void Beam3D_copy__SWIG_1(long jarg1, Beam3D jarg1_, long jarg2, Element jarg2_);
  public final static native void delete_Beam3D(long jarg1);
  public final static native long Beam3D_elastStiffMatrix_g2g(long jarg1, Beam3D jarg1_);
  public final static native long Beam3D_massMatrix_g2g(long jarg1, Beam3D jarg1_);
  public final static native long Beam3D_geomStiffMatrix_g2g(long jarg1, Beam3D jarg1_);
  public final static native long Beam3D_tangentStiffMatrix_g2g(long jarg1, Beam3D jarg1_);
  public final static native long Beam3D_nDofsPerNode(long jarg1, Beam3D jarg1_);
  public final static native long Beam3D_nTranslationalDofsPerNode(long jarg1, Beam3D jarg1_);
  public final static native double Beam3D_axialNormalForce__SWIG_0(long jarg1, Beam3D jarg1_, int jarg2);
  public final static native double Beam3D_axialNormalForce__SWIG_1(long jarg1, Beam3D jarg1_);
  public final static native double Beam3D_volume(long jarg1, Beam3D jarg1_);
  public final static native double Beam3D_mass(long jarg1, Beam3D jarg1_);
  public final static native double Beam3D_weight_per_unit(long jarg1, Beam3D jarg1_);
  public final static native double Beam3D_axialDeformationEnergy__SWIG_0(long jarg1, Beam3D jarg1_, int jarg2);
  public final static native double Beam3D_axialDeformationEnergy__SWIG_1(long jarg1, Beam3D jarg1_);
  public final static native double Beam3D_bendingEnergy__SWIG_0(long jarg1, Beam3D jarg1_, int jarg2);
  public final static native double Beam3D_bendingEnergy__SWIG_1(long jarg1, Beam3D jarg1_);
  public final static native double Beam3D_elastEnergy__SWIG_0(long jarg1, Beam3D jarg1_, int jarg2);
  public final static native double Beam3D_elastEnergy__SWIG_1(long jarg1, Beam3D jarg1_);
  public final static native double Beam3D_maxInteriorDeflection__SWIG_0(long jarg1, Beam3D jarg1_, int jarg2);
  public final static native double Beam3D_maxInteriorDeflection__SWIG_1(long jarg1, Beam3D jarg1_);
  public final static native long Beam3D_deflection__SWIG_0(long jarg1, Beam3D jarg1_, long jarg2, int jarg3);
  public final static native long Beam3D_deflection__SWIG_1(long jarg1, Beam3D jarg1_, long jarg2);
  public final static native long Beam3D_strain__SWIG_0(long jarg1, Beam3D jarg1_, long jarg2, long jarg3);
  public final static native long Beam3D_strain__SWIG_1(long jarg1, Beam3D jarg1_, long jarg2);
  public final static native long Beam3D_crosec__SWIG_0(long jarg1, Beam3D jarg1_);
  public final static native long Beam3D_crosec__SWIG_1(long jarg1, Beam3D jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void Beam3D_accept(long jarg1, Beam3D jarg1_, long jarg2, ElementVisitor jarg2_);
  public final static native int Beam3D_SWIG_typeid(long jarg1, Beam3D jarg1_);
  public final static native long new_Beam3DCroSec__SWIG_0();
  public final static native long new_Beam3DCroSec__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20);
  public final static native long new_Beam3DCroSec__SWIG_2(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15, double jarg16, double jarg17, double jarg18, double jarg19);
  public final static native long new_Beam3DCroSec__SWIG_3(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15, double jarg16, double jarg17, double jarg18);
  public final static native long new_Beam3DCroSec__SWIG_4(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15, double jarg16, double jarg17);
  public final static native long new_Beam3DCroSec__SWIG_5(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15, double jarg16);
  public final static native long new_Beam3DCroSec__SWIG_6(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15);
  public final static native long new_Beam3DCroSec__SWIG_7(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14);
  public final static native long new_Beam3DCroSec__SWIG_8(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13);
  public final static native long new_Beam3DCroSec__SWIG_9(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12);
  public final static native long new_Beam3DCroSec__SWIG_10(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8, double jarg9, double jarg10, double jarg11);
  public final static native long new_Beam3DCroSec__SWIG_11(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8, double jarg9, double jarg10);
  public final static native long new_Beam3DCroSec__SWIG_12(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8, double jarg9);
  public final static native long new_Beam3DCroSec__SWIG_13(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8);
  public final static native long new_Beam3DCroSec__SWIG_14(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, int jarg7);
  public final static native long new_Beam3DCroSec__SWIG_15(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_Beam3DCroSec__SWIG_16(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_Beam3DCroSec__SWIG_17(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_Beam3DCroSec__SWIG_18(double jarg1, double jarg2, double jarg3);
  public final static native long new_Beam3DCroSec__SWIG_19(long jarg1, Beam3DCroSec jarg1_);
  public final static native long Beam3DCroSec_clone__SWIG_0(long jarg1, Beam3DCroSec jarg1_, long jarg2);
  public final static native long Beam3DCroSec_clone__SWIG_1(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_copy(long jarg1, Beam3DCroSec jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void delete_Beam3DCroSec(long jarg1);
  public final static native boolean Beam3DCroSec_strongerThan(long jarg1, Beam3DCroSec jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native boolean Beam3DCroSec_isHollow(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_Iyy_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_Iyy_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_Izz_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_Izz_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_Ipp_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_Ipp_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_Cw_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_Cw_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_ky_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_ky_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_kz_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_kz_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_Wely_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_Wely_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_Wply_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_Wply_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_iy_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_iy_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_Welz_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_Welz_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_Wplz_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_Wplz_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_iz_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_iz_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_alpha_y_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_alpha_y_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_alpha_z_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_alpha_z_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_alpha_LT_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_alpha_LT_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_Wt_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_Wt_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_Ay_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_Ay_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native void Beam3DCroSec_Az_set(long jarg1, Beam3DCroSec jarg1_, double jarg2);
  public final static native double Beam3DCroSec_Az_get(long jarg1, Beam3DCroSec jarg1_);
  public final static native long Beam3DCroSec_croSecClass(long jarg1, Beam3DCroSec jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_Beam3DCroSec_I__SWIG_0();
  public final static native long new_Beam3DCroSec_I__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22, double jarg23, double jarg24, double jarg25, double jarg26, double jarg27, double jarg28);
  public final static native long new_Beam3DCroSec_I__SWIG_2(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22, double jarg23, double jarg24, double jarg25, double jarg26, double jarg27);
  public final static native long new_Beam3DCroSec_I__SWIG_3(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22, double jarg23, double jarg24, double jarg25, double jarg26);
  public final static native long new_Beam3DCroSec_I__SWIG_4(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22, double jarg23, double jarg24, double jarg25);
  public final static native long new_Beam3DCroSec_I__SWIG_5(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22, double jarg23, double jarg24);
  public final static native long new_Beam3DCroSec_I__SWIG_6(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22, double jarg23);
  public final static native long new_Beam3DCroSec_I__SWIG_7(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22);
  public final static native long new_Beam3DCroSec_I__SWIG_8(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21);
  public final static native long new_Beam3DCroSec_I__SWIG_9(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20);
  public final static native long new_Beam3DCroSec_I__SWIG_10(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19);
  public final static native long new_Beam3DCroSec_I__SWIG_11(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18);
  public final static native long new_Beam3DCroSec_I__SWIG_12(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17);
  public final static native long new_Beam3DCroSec_I__SWIG_13(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16);
  public final static native long new_Beam3DCroSec_I__SWIG_14(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15);
  public final static native long new_Beam3DCroSec_I__SWIG_15(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14);
  public final static native long new_Beam3DCroSec_I__SWIG_16(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13);
  public final static native long new_Beam3DCroSec_I__SWIG_17(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12);
  public final static native long new_Beam3DCroSec_I__SWIG_18(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11);
  public final static native long new_Beam3DCroSec_I__SWIG_19(long jarg1, Beam3DCroSec_I jarg1_);
  public final static native long Beam3DCroSec_I_clone__SWIG_0(long jarg1, Beam3DCroSec_I jarg1_, long jarg2);
  public final static native long Beam3DCroSec_I_clone__SWIG_1(long jarg1, Beam3DCroSec_I jarg1_);
  public final static native void Beam3DCroSec_I_copy(long jarg1, Beam3DCroSec_I jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void delete_Beam3DCroSec_I(long jarg1);
  public final static native double Beam3DCroSec_I_zj_pos(long jarg1, Beam3DCroSec_I jarg1_);
  public final static native double Beam3DCroSec_I_zj_neg(long jarg1, Beam3DCroSec_I jarg1_);
  public final static native long Beam3DCroSec_I_croSecClass(long jarg1, Beam3DCroSec_I jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native boolean Beam3DCroSec_I_isHollow(long jarg1, Beam3DCroSec_I jarg1_);
  public final static native long new_Beam3DCroSec_RHS__SWIG_0();
  public final static native long new_Beam3DCroSec_RHS__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22, double jarg23, double jarg24, double jarg25, double jarg26, double jarg27, double jarg28);
  public final static native long new_Beam3DCroSec_RHS__SWIG_2(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22, double jarg23, double jarg24, double jarg25, double jarg26, double jarg27);
  public final static native long new_Beam3DCroSec_RHS__SWIG_3(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22, double jarg23, double jarg24, double jarg25, double jarg26);
  public final static native long new_Beam3DCroSec_RHS__SWIG_4(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22, double jarg23, double jarg24, double jarg25);
  public final static native long new_Beam3DCroSec_RHS__SWIG_5(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22, double jarg23, double jarg24);
  public final static native long new_Beam3DCroSec_RHS__SWIG_6(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22, double jarg23);
  public final static native long new_Beam3DCroSec_RHS__SWIG_7(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22);
  public final static native long new_Beam3DCroSec_RHS__SWIG_8(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21);
  public final static native long new_Beam3DCroSec_RHS__SWIG_9(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20);
  public final static native long new_Beam3DCroSec_RHS__SWIG_10(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18, double jarg19);
  public final static native long new_Beam3DCroSec_RHS__SWIG_11(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17, double jarg18);
  public final static native long new_Beam3DCroSec_RHS__SWIG_12(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16, double jarg17);
  public final static native long new_Beam3DCroSec_RHS__SWIG_13(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15, double jarg16);
  public final static native long new_Beam3DCroSec_RHS__SWIG_14(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, int jarg15);
  public final static native long new_Beam3DCroSec_RHS__SWIG_15(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14);
  public final static native long new_Beam3DCroSec_RHS__SWIG_16(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13);
  public final static native long new_Beam3DCroSec_RHS__SWIG_17(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12);
  public final static native long new_Beam3DCroSec_RHS__SWIG_18(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11);
  public final static native long new_Beam3DCroSec_RHS__SWIG_19(long jarg1, Beam3DCroSec_RHS jarg1_);
  public final static native long Beam3DCroSec_RHS_clone__SWIG_0(long jarg1, Beam3DCroSec_RHS jarg1_, long jarg2);
  public final static native long Beam3DCroSec_RHS_clone__SWIG_1(long jarg1, Beam3DCroSec_RHS jarg1_);
  public final static native void Beam3DCroSec_RHS_copy(long jarg1, Beam3DCroSec_RHS jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void delete_Beam3DCroSec_RHS(long jarg1);
  public final static native long Beam3DCroSec_RHS_croSecClass(long jarg1, Beam3DCroSec_RHS jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native boolean Beam3DCroSec_RHS_isHollow(long jarg1, Beam3DCroSec_RHS jarg1_);
  public final static native long new_Beam3DCroSec_CHS__SWIG_0();
  public final static native long new_Beam3DCroSec_CHS__SWIG_1(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21, double jarg22);
  public final static native long new_Beam3DCroSec_CHS__SWIG_2(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20, double jarg21);
  public final static native long new_Beam3DCroSec_CHS__SWIG_3(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15, double jarg16, double jarg17, double jarg18, double jarg19, double jarg20);
  public final static native long new_Beam3DCroSec_CHS__SWIG_4(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15, double jarg16, double jarg17, double jarg18, double jarg19);
  public final static native long new_Beam3DCroSec_CHS__SWIG_5(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15, double jarg16, double jarg17, double jarg18);
  public final static native long new_Beam3DCroSec_CHS__SWIG_6(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15, double jarg16, double jarg17);
  public final static native long new_Beam3DCroSec_CHS__SWIG_7(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15, double jarg16);
  public final static native long new_Beam3DCroSec_CHS__SWIG_8(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15);
  public final static native long new_Beam3DCroSec_CHS__SWIG_9(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14);
  public final static native long new_Beam3DCroSec_CHS__SWIG_10(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, double jarg10, double jarg11, double jarg12, double jarg13);
  public final static native long new_Beam3DCroSec_CHS__SWIG_11(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, double jarg10, double jarg11, double jarg12);
  public final static native long new_Beam3DCroSec_CHS__SWIG_12(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, double jarg10, double jarg11);
  public final static native long new_Beam3DCroSec_CHS__SWIG_13(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, double jarg10);
  public final static native long new_Beam3DCroSec_CHS__SWIG_14(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9);
  public final static native long new_Beam3DCroSec_CHS__SWIG_15(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native long new_Beam3DCroSec_CHS__SWIG_16(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_Beam3DCroSec_CHS__SWIG_17(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_Beam3DCroSec_CHS__SWIG_18(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_Beam3DCroSec_CHS__SWIG_19(long jarg1, Beam3DCroSec_CHS jarg1_);
  public final static native long Beam3DCroSec_CHS_clone__SWIG_0(long jarg1, Beam3DCroSec_CHS jarg1_, long jarg2);
  public final static native long Beam3DCroSec_CHS_clone__SWIG_1(long jarg1, Beam3DCroSec_CHS jarg1_);
  public final static native void Beam3DCroSec_CHS_copy(long jarg1, Beam3DCroSec_CHS jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void delete_Beam3DCroSec_CHS(long jarg1);
  public final static native long Beam3DCroSec_CHS_croSecClass(long jarg1, Beam3DCroSec_CHS jarg1_, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native boolean Beam3DCroSec_CHS_isHollow(long jarg1, Beam3DCroSec_CHS jarg1_);
  public final static native long new_Beam3DState__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native long new_Beam3DState__SWIG_2(long jarg1, Beam3DState jarg1_, long jarg2);
  public final static native long new_Beam3DState__SWIG_3(long jarg1, Beam3DState jarg1_);
  public final static native long Beam3DState_clone__SWIG_0(long jarg1, Beam3DState jarg1_, long jarg2);
  public final static native long Beam3DState_clone__SWIG_1(long jarg1, Beam3DState jarg1_);
  public final static native void Beam3DState_copy__SWIG_0(long jarg1, Beam3DState jarg1_, long jarg2, ElementState jarg2_, long jarg3);
  public final static native void Beam3DState_copy__SWIG_1(long jarg1, Beam3DState jarg1_, long jarg2, ElementState jarg2_);
  public final static native void delete_Beam3DState(long jarg1);
  public final static native long Beam3DState_nNodes(long jarg1, Beam3DState jarg1_);
  public final static native long Beam3DState_nNodalDofs(long jarg1, Beam3DState jarg1_);
  public final static native long new_Beam3DLoadInfo(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10);
  public final static native void delete_Beam3DLoadInfo(long jarg1);
  public final static native long Beam3DLoadInfo_bjy(long jarg1, Beam3DLoadInfo jarg1_);
  public final static native long Beam3DLoadInfo_bjz(long jarg1, Beam3DLoadInfo jarg1_);
  public final static native double Beam3DLoadInfo_invEIy(long jarg1, Beam3DLoadInfo jarg1_);
  public final static native double Beam3DLoadInfo_invGAz(long jarg1, Beam3DLoadInfo jarg1_);
  public final static native double Beam3DLoadInfo_invEIz(long jarg1, Beam3DLoadInfo jarg1_);
  public final static native double Beam3DLoadInfo_invGAy(long jarg1, Beam3DLoadInfo jarg1_);
  public final static native void Beam3DLoadInfo_setPos(long jarg1, Beam3DLoadInfo jarg1_, double jarg2);
  public final static native long new_Spring3D__SWIG_1(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_, double jarg5, int jarg6, long jarg7, Eccentricity jarg7_, long jarg8, Eccentricity jarg8_);
  public final static native long new_Spring3D__SWIG_2(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_, double jarg5, int jarg6, long jarg7, Eccentricity jarg7_);
  public final static native long new_Spring3D__SWIG_3(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_, double jarg5, int jarg6);
  public final static native long new_Spring3D__SWIG_4(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_, double jarg5);
  public final static native long new_Spring3D__SWIG_5(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_);
  public final static native long new_Spring3D__SWIG_6(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_, long jarg5, Vec3d jarg5_, double jarg6, int jarg7, long jarg8, Eccentricity jarg8_, long jarg9, Eccentricity jarg9_);
  public final static native long new_Spring3D__SWIG_7(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_, long jarg5, Vec3d jarg5_, double jarg6, int jarg7, long jarg8, Eccentricity jarg8_);
  public final static native long new_Spring3D__SWIG_8(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_, long jarg5, Vec3d jarg5_, double jarg6, int jarg7);
  public final static native long new_Spring3D__SWIG_9(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_, long jarg5, Vec3d jarg5_, double jarg6);
  public final static native long new_Spring3D__SWIG_10(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_, long jarg5, Vec3d jarg5_);
  public final static native long new_Spring3D__SWIG_11(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, long jarg10, Eccentricity jarg10_, long jarg11, Eccentricity jarg11_);
  public final static native long new_Spring3D__SWIG_12(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, long jarg10, Eccentricity jarg10_);
  public final static native long new_Spring3D__SWIG_13(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9);
  public final static native long new_Spring3D__SWIG_14(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Material jarg3_, long jarg4, Spring3DProperties jarg4_, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native long new_Spring3D__SWIG_15(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, double jarg7, double jarg8, double jarg9, int jarg10, long jarg11, Eccentricity jarg11_, long jarg12, Eccentricity jarg12_);
  public final static native long new_Spring3D__SWIG_16(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, double jarg7, double jarg8, double jarg9, int jarg10, long jarg11, Eccentricity jarg11_);
  public final static native long new_Spring3D__SWIG_17(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, double jarg7, double jarg8, double jarg9, int jarg10);
  public final static native long new_Spring3D__SWIG_18(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, long jarg5, double jarg6, double jarg7, double jarg8, double jarg9);
  public final static native long new_Spring3D__SWIG_19(long jarg1, Spring3D jarg1_, long jarg2);
  public final static native long new_Spring3D__SWIG_20(long jarg1, Spring3D jarg1_);
  public final static native long Spring3D_clone__SWIG_0(long jarg1, Spring3D jarg1_, long jarg2);
  public final static native long Spring3D_clone__SWIG_1(long jarg1, Spring3D jarg1_);
  public final static native void Spring3D_copy__SWIG_0(long jarg1, Spring3D jarg1_, long jarg2, Element jarg2_, long jarg3);
  public final static native void Spring3D_copy__SWIG_1(long jarg1, Spring3D jarg1_, long jarg2, Element jarg2_);
  public final static native void delete_Spring3D(long jarg1);
  public final static native long Spring3D_StiffnessMatrix_l2l(long jarg1, Spring3D jarg1_);
  public final static native long Spring3D_elastStiffMatrix_g2g(long jarg1, Spring3D jarg1_);
  public final static native long Spring3D_massMatrix_g2g(long jarg1, Spring3D jarg1_);
  public final static native long Spring3D_geomStiffMatrix_g2g(long jarg1, Spring3D jarg1_);
  public final static native long Spring3D_tangentStiffMatrix_g2g(long jarg1, Spring3D jarg1_);
  public final static native long Spring3D_nDofsPerNode(long jarg1, Spring3D jarg1_);
  public final static native long Spring3D_nTranslationalDofsPerNode(long jarg1, Spring3D jarg1_);
  public final static native void Spring3D_updateDisplacements(long jarg1, Spring3D jarg1_);
  public final static native double Spring3D_axialNormalForce__SWIG_0(long jarg1, Spring3D jarg1_, int jarg2);
  public final static native double Spring3D_axialNormalForce__SWIG_1(long jarg1, Spring3D jarg1_);
  public final static native double Spring3D_volume(long jarg1, Spring3D jarg1_);
  public final static native double Spring3D_mass(long jarg1, Spring3D jarg1_);
  public final static native double Spring3D_axialDeformationEnergy__SWIG_0(long jarg1, Spring3D jarg1_, int jarg2);
  public final static native double Spring3D_axialDeformationEnergy__SWIG_1(long jarg1, Spring3D jarg1_);
  public final static native double Spring3D_bendingEnergy__SWIG_0(long jarg1, Spring3D jarg1_, int jarg2);
  public final static native double Spring3D_bendingEnergy__SWIG_1(long jarg1, Spring3D jarg1_);
  public final static native long Spring3D_interiorState(long jarg1, Spring3D jarg1_, long jarg2, double jarg3);
  public final static native long Spring3D_interiorStates(long jarg1, Spring3D jarg1_, long jarg2, VectSizeT jarg2_, long jarg3, VectReal jarg3_);
  public final static native double Spring3D_maxInteriorDeflection__SWIG_0(long jarg1, Spring3D jarg1_, int jarg2);
  public final static native double Spring3D_maxInteriorDeflection__SWIG_1(long jarg1, Spring3D jarg1_);
  public final static native long Spring3D_deflection__SWIG_0(long jarg1, Spring3D jarg1_, long jarg2, int jarg3);
  public final static native long Spring3D_deflection__SWIG_1(long jarg1, Spring3D jarg1_, long jarg2);
  public final static native long Spring3D_strain__SWIG_0(long jarg1, Spring3D jarg1_, long jarg2, long jarg3);
  public final static native long Spring3D_strain__SWIG_1(long jarg1, Spring3D jarg1_, long jarg2);
  public final static native long Spring3D_pointOnAxis__SWIG_0(long jarg1, Spring3D jarg1_, double jarg2, boolean jarg3);
  public final static native long Spring3D_pointOnAxis__SWIG_1(long jarg1, Spring3D jarg1_, double jarg2);
  public final static native long Spring3D_crosec__SWIG_0(long jarg1, Spring3D jarg1_);
  public final static native long Spring3D_crosec__SWIG_1(long jarg1, Spring3D jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void Spring3D_accept(long jarg1, Spring3D jarg1_, long jarg2, ElementVisitor jarg2_);
  public final static native int Spring3D_SWIG_typeid(long jarg1, Spring3D jarg1_);
  public final static native long new_Spring3DProperties__SWIG_0();
  public final static native long new_Spring3DProperties__SWIG_1(long jarg1, VectReal jarg1_);
  public final static native long new_Spring3DProperties__SWIG_2(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_Spring3DProperties__SWIG_3(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_Spring3DProperties__SWIG_4(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_Spring3DProperties__SWIG_5(double jarg1, double jarg2, double jarg3);
  public final static native long new_Spring3DProperties__SWIG_6(double jarg1, double jarg2);
  public final static native long new_Spring3DProperties__SWIG_7(double jarg1);
  public final static native long new_Spring3DProperties__SWIG_8(long jarg1, Spring3DProperties jarg1_);
  public final static native long Spring3DProperties_clone__SWIG_0(long jarg1, Spring3DProperties jarg1_, long jarg2);
  public final static native long Spring3DProperties_clone__SWIG_1(long jarg1, Spring3DProperties jarg1_);
  public final static native void Spring3DProperties_copy(long jarg1, Spring3DProperties jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void delete_Spring3DProperties(long jarg1);
  public final static native long Spring3DProperties_c(long jarg1, Spring3DProperties jarg1_);
  public final static native long new_Spring3DState__SWIG_1(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long new_Spring3DState__SWIG_2(long jarg1, Spring3DState jarg1_, long jarg2);
  public final static native long new_Spring3DState__SWIG_3(long jarg1, Spring3DState jarg1_);
  public final static native long Spring3DState_clone__SWIG_0(long jarg1, Spring3DState jarg1_, long jarg2);
  public final static native long Spring3DState_clone__SWIG_1(long jarg1, Spring3DState jarg1_);
  public final static native void Spring3DState_copy__SWIG_0(long jarg1, Spring3DState jarg1_, long jarg2, ElementState jarg2_, long jarg3);
  public final static native void Spring3DState_copy__SWIG_1(long jarg1, Spring3DState jarg1_, long jarg2, ElementState jarg2_);
  public final static native void delete_Spring3DState(long jarg1);
  public final static native long Spring3DState_nNodes(long jarg1, Spring3DState jarg1_);
  public final static native long Spring3DState_nNodalDofs(long jarg1, Spring3DState jarg1_);
  public final static native void TriShell3dLoadInfo_kapa_ct_set(long jarg1, TriShell3dLoadInfo jarg1_, long jarg2);
  public final static native long TriShell3dLoadInfo_kapa_ct_get(long jarg1, TriShell3dLoadInfo jarg1_);
  public final static native long new_TriShell3dLoadInfo();
  public final static native void delete_TriShell3dLoadInfo(long jarg1);
  public final static native long new_TriShell3D__SWIG_1(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, Material jarg4_, long jarg5, Surface3DCroSec jarg5_, int jarg6);
  public final static native long new_TriShell3D__SWIG_2(long jarg1, Vertex jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, Material jarg4_, long jarg5, Surface3DCroSec jarg5_);
  public final static native long new_TriShell3D__SWIG_3(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, Vertex jarg4_, long jarg5, long jarg6, int jarg7);
  public final static native long new_TriShell3D__SWIG_4(long jarg1, Model jarg1_, long jarg2, Vertex jarg2_, long jarg3, Vertex jarg3_, long jarg4, Vertex jarg4_, long jarg5, long jarg6);
  public final static native long new_TriShell3D__SWIG_5(long jarg1, TriShell3D jarg1_, long jarg2);
  public final static native long new_TriShell3D__SWIG_6(long jarg1, TriShell3D jarg1_);
  public final static native long TriShell3D_clone__SWIG_0(long jarg1, TriShell3D jarg1_, long jarg2);
  public final static native long TriShell3D_clone__SWIG_1(long jarg1, TriShell3D jarg1_);
  public final static native void TriShell3D_copy__SWIG_0(long jarg1, TriShell3D jarg1_, long jarg2, Element jarg2_, long jarg3);
  public final static native void TriShell3D_copy__SWIG_1(long jarg1, TriShell3D jarg1_, long jarg2, Element jarg2_);
  public final static native void delete_TriShell3D(long jarg1);
  public final static native long TriShell3D_elastStiffMatrix_g2g(long jarg1, TriShell3D jarg1_);
  public final static native long TriShell3D_geomStiffMatrix_g2g(long jarg1, TriShell3D jarg1_);
  public final static native long TriShell3D_tangentStiffMatrix_g2g(long jarg1, TriShell3D jarg1_);
  public final static native long TriShell3D_massMatrix_g2g(long jarg1, TriShell3D jarg1_);
  public final static native long TriShell3D_face(long jarg1, TriShell3D jarg1_);
  public final static native double TriShell3D_characteristicLength(long jarg1, TriShell3D jarg1_);
  public final static native double TriShell3D_nodalInfluence(long jarg1, TriShell3D jarg1_, long jarg2);
  public final static native double TriShell3D_area(long jarg1, TriShell3D jarg1_);
  public final static native void TriShell3D_updateCooSys(long jarg1, TriShell3D jarg1_);
  public final static native void TriShell3D_updatePosition(long jarg1, TriShell3D jarg1_);
  public final static native long TriShell3D_coosys(long jarg1, TriShell3D jarg1_);
  public final static native long TriShell3D_pointOnAxis__SWIG_0(long jarg1, TriShell3D jarg1_, double jarg2, boolean jarg3);
  public final static native long TriShell3D_pointOnAxis__SWIG_1(long jarg1, TriShell3D jarg1_, double jarg2);
  public final static native long TriShell3D_pointsOnAxis__SWIG_0(long jarg1, TriShell3D jarg1_, long jarg2, boolean jarg3);
  public final static native long TriShell3D_pointsOnAxis__SWIG_1(long jarg1, TriShell3D jarg1_, long jarg2);
  public final static native long TriShell3D_pointsOnAxis__SWIG_2(long jarg1, TriShell3D jarg1_);
  public final static native long TriShell3D_splitAtNode__SWIG_0(long jarg1, TriShell3D jarg1_, long jarg2, Model jarg2_, long jarg3, Node jarg3_, double jarg4);
  public final static native long TriShell3D_splitAtNode__SWIG_1(long jarg1, TriShell3D jarg1_, long jarg2, Model jarg2_, long jarg3, Node jarg3_);
  public final static native long TriShell3D_split__SWIG_0(long jarg1, TriShell3D jarg1_, long jarg2, Model jarg2_, double jarg3, double jarg4);
  public final static native long TriShell3D_split__SWIG_1(long jarg1, TriShell3D jarg1_, long jarg2, Model jarg2_, double jarg3);
  public final static native long TriShell3D_nDofsPerNode(long jarg1, TriShell3D jarg1_);
  public final static native long TriShell3D_nTranslationalDofsPerNode(long jarg1, TriShell3D jarg1_);
  public final static native void TriShell3D_updateFext__SWIG_0(long jarg1, TriShell3D jarg1_, long jarg2, double jarg3);
  public final static native void TriShell3D_updateFext__SWIG_1(long jarg1, TriShell3D jarg1_, long jarg2);
  public final static native void TriShell3D_updateDisplacements(long jarg1, TriShell3D jarg1_);
  public final static native double TriShell3D_volume(long jarg1, TriShell3D jarg1_);
  public final static native double TriShell3D_mass(long jarg1, TriShell3D jarg1_);
  public final static native double TriShell3D_weight_per_unit(long jarg1, TriShell3D jarg1_);
  public final static native double TriShell3D_axialDeformationEnergy__SWIG_0(long jarg1, TriShell3D jarg1_, int jarg2);
  public final static native double TriShell3D_axialDeformationEnergy__SWIG_1(long jarg1, TriShell3D jarg1_);
  public final static native double TriShell3D_bendingEnergy__SWIG_0(long jarg1, TriShell3D jarg1_, int jarg2);
  public final static native double TriShell3D_bendingEnergy__SWIG_1(long jarg1, TriShell3D jarg1_);
  public final static native long TriShell3D_strain__SWIG_0(long jarg1, TriShell3D jarg1_, long jarg2);
  public final static native long TriShell3D_strain__SWIG_1(long jarg1, TriShell3D jarg1_);
  public final static native long TriShell3D_crosec__SWIG_0(long jarg1, TriShell3D jarg1_);
  public final static native long TriShell3D_crosec__SWIG_1(long jarg1, TriShell3D jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native long TriShell3D_interiorState(long jarg1, TriShell3D jarg1_, long jarg2, double jarg3);
  public final static native long TriShell3D_interiorStates(long jarg1, TriShell3D jarg1_, long jarg2, VectSizeT jarg2_, long jarg3, VectReal jarg3_);
  public final static native void TriShell3D_addDeflection__SWIG_0(long jarg1, TriShell3D jarg1_, long jarg2, VectVec3d jarg2_, long jarg3, double jarg4);
  public final static native void TriShell3D_addDeflection__SWIG_1(long jarg1, TriShell3D jarg1_, long jarg2, VectVec3d jarg2_, long jarg3);
  public final static native void TriShell3D_accept(long jarg1, TriShell3D jarg1_, long jarg2, ElementVisitor jarg2_);
  public final static native int TriShell3D_SWIG_typeid(long jarg1, TriShell3D jarg1_);
  public final static native long TriShell3D_NII__SWIG_0(long jarg1, TriShell3D jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long TriShell3D_NII__SWIG_1(long jarg1, TriShell3D jarg1_);
  public final static native long Surface3DVecEvalStrategy_res(long jarg1, Surface3DVecEvalStrategy jarg1_, long jarg2, TriShell3D jarg2_);
  public final static native void Surface3DVecEvalStrategy_setLC(long jarg1, Surface3DVecEvalStrategy jarg1_, long jarg2);
  public final static native void delete_Surface3DVecEvalStrategy(long jarg1);
  public final static native long new_Surface3dFirstPrincipalStress(long jarg1, double jarg2);
  public final static native long Surface3dFirstPrincipalStress_res(long jarg1, Surface3dFirstPrincipalStress jarg1_, long jarg2, TriShell3D jarg2_);
  public final static native void delete_Surface3dFirstPrincipalStress(long jarg1);
  public final static native long new_Surface3dSecondPrincipalStress(long jarg1, double jarg2);
  public final static native long Surface3dSecondPrincipalStress_res(long jarg1, Surface3dSecondPrincipalStress jarg1_, long jarg2, TriShell3D jarg2_);
  public final static native void delete_Surface3dSecondPrincipalStress(long jarg1);
  public final static native long new_Surface3dFirstPrincipalKapa(long jarg1);
  public final static native long Surface3dFirstPrincipalKapa_res(long jarg1, Surface3dFirstPrincipalKapa jarg1_, long jarg2, TriShell3D jarg2_);
  public final static native void delete_Surface3dFirstPrincipalKapa(long jarg1);
  public final static native long new_Surface3dSecondPrincipalKapa(long jarg1);
  public final static native long Surface3dSecondPrincipalKapa_res(long jarg1, Surface3dSecondPrincipalKapa jarg1_, long jarg2, TriShell3D jarg2_);
  public final static native void delete_Surface3dSecondPrincipalKapa(long jarg1);
  public final static native long new_ShellMesh__SWIG_0();
  public final static native long new_ShellMesh__SWIG_1(long jarg1, ShellMesh jarg1_, long jarg2);
  public final static native long new_ShellMesh__SWIG_2(long jarg1, ShellMesh jarg1_);
  public final static native long ShellMesh_clone__SWIG_0(long jarg1, ShellMesh jarg1_, long jarg2);
  public final static native long ShellMesh_clone__SWIG_1(long jarg1, ShellMesh jarg1_);
  public final static native void ShellMesh_copy__SWIG_0(long jarg1, ShellMesh jarg1_, long jarg2, ShellMesh jarg2_, long jarg3);
  public final static native void ShellMesh_copy__SWIG_1(long jarg1, ShellMesh jarg1_, long jarg2, ShellMesh jarg2_);
  public final static native void delete_ShellMesh(long jarg1);
  public final static native long ShellMesh_add__SWIG_0(long jarg1, ShellMesh jarg1_, long jarg2, TriShell3D jarg2_);
  public final static native long ShellMesh_add__SWIG_1(long jarg1, ShellMesh jarg1_, long jarg2, ShellMesh jarg2_);
  public final static native void ShellMesh_finalizeConstruction(long jarg1, ShellMesh jarg1_);
  public final static native long ShellMesh_mesh__SWIG_0(long jarg1, ShellMesh jarg1_);
  public final static native int ShellMesh_meshInd__SWIG_0(long jarg1, ShellMesh jarg1_, long jarg2, Vertex jarg2_);
  public final static native int ShellMesh_meshInd__SWIG_1(long jarg1, ShellMesh jarg1_, long jarg2);
  public final static native long ShellMesh_facesOfEdge(long jarg1, ShellMesh jarg1_, long jarg2, long jarg3);
  public final static native long ShellMesh_facesOfVertex(long jarg1, ShellMesh jarg1_, long jarg2);
  public final static native long ShellMesh_numberOfElems(long jarg1, ShellMesh jarg1_);
  public final static native long ShellMesh_elem__SWIG_0(long jarg1, ShellMesh jarg1_, long jarg2);
  public final static native long ShellMesh_elems__SWIG_0(long jarg1, ShellMesh jarg1_);
  public final static native long ShellMesh_vertexIndexesOfFace(long jarg1, ShellMesh jarg1_, long jarg2);
  public final static native long ShellMesh_numberOfVertexes(long jarg1, ShellMesh jarg1_);
  public final static native long ShellMesh_vertex__SWIG_0(long jarg1, ShellMesh jarg1_, long jarg2);
  public final static native long ShellMesh_material(long jarg1, ShellMesh jarg1_, long jarg2, Material jarg2_);
  public final static native long ShellMesh_elementScalarResult(long jarg1, ShellMesh jarg1_, int jarg2, double jarg3, long jarg4, double jarg5);
  public final static native long ShellMesh_elementPrincipalResult__SWIG_0(long jarg1, ShellMesh jarg1_, long jarg2, Surface3DVecEvalStrategy jarg2_, double jarg3);
  public final static native long ShellMesh_elementPrincipalResult__SWIG_1(long jarg1, ShellMesh jarg1_, long jarg2, Surface3DVecEvalStrategy jarg2_, long jarg3, VectReal jarg3_);
  public final static native long ShellMesh_elementVectorResult__SWIG_0(long jarg1, ShellMesh jarg1_, int jarg2, double jarg3, long jarg4, VectReal jarg4_);
  public final static native long ShellMesh_elementVectorResult__SWIG_1(long jarg1, ShellMesh jarg1_, int jarg2, double jarg3, long jarg4, double jarg5);
  public final static native long ShellMesh_elementSigEps__SWIG_0(long jarg1, ShellMesh jarg1_, double jarg2, long jarg3, double jarg4);
  public final static native long ShellMesh_elementSigEps__SWIG_1(long jarg1, ShellMesh jarg1_, double jarg2, long jarg3, VectReal jarg3_);
  public final static native long ShellMesh_elementResultants__SWIG_0(long jarg1, ShellMesh jarg1_, long jarg2, double jarg3);
  public final static native long ShellMesh_elementResultants__SWIG_1(long jarg1, ShellMesh jarg1_, long jarg2, VectReal jarg2_);
  public final static native long ShellMesh_nodalVectorResult(long jarg1, ShellMesh jarg1_, int jarg2, long jarg3, VectReal jarg3_);
  public final static native long ShellMesh_nodalScalarResult__SWIG_0(long jarg1, ShellMesh jarg1_, int jarg2, double jarg3, long jarg4, double jarg5);
  public final static native long ShellMesh_nodalScalarResult__SWIG_1(long jarg1, ShellMesh jarg1_, int jarg2, double jarg3, long jarg4, VectReal jarg4_);
  public final static native long ShellMesh_nodalPrincipalResult__SWIG_0(long jarg1, ShellMesh jarg1_, long jarg2, Surface3DVecEvalStrategy jarg2_, double jarg3);
  public final static native long ShellMesh_nodalPrincipalResult__SWIG_1(long jarg1, ShellMesh jarg1_, long jarg2, Surface3DVecEvalStrategy jarg2_, long jarg3, VectReal jarg3_);
  public final static native long ShellMesh_nodalFlowDirResult__SWIG_0(long jarg1, ShellMesh jarg1_, long jarg2, Vec3d jarg2_, double jarg3, long jarg4, double jarg5, double jarg6);
  public final static native long ShellMesh_nodalFlowDirResult__SWIG_1(long jarg1, ShellMesh jarg1_, long jarg2, Vec3d jarg2_, double jarg3, long jarg4, double jarg5);
  public final static native long ShellMesh_nodalFlowDirResult__SWIG_2(long jarg1, ShellMesh jarg1_, long jarg2, Vec3d jarg2_, double jarg3, long jarg4, VectReal jarg4_, double jarg5);
  public final static native long ShellMesh_nodalFlowDirResult__SWIG_3(long jarg1, ShellMesh jarg1_, long jarg2, Vec3d jarg2_, double jarg3, long jarg4, VectReal jarg4_);
  public final static native long ShellMesh_nodalFlowDirResult__SWIG_4(long jarg1, ShellMesh jarg1_, long jarg2, VectVec3d jarg2_, long jarg3, VectVec3d jarg3_, double jarg4, long jarg5, double jarg6, double jarg7);
  public final static native long ShellMesh_nodalFlowDirResult__SWIG_5(long jarg1, ShellMesh jarg1_, long jarg2, VectVec3d jarg2_, long jarg3, VectVec3d jarg3_, double jarg4, long jarg5, double jarg6);
  public final static native long ShellMesh_nodalFlowDirResult__SWIG_6(long jarg1, ShellMesh jarg1_, long jarg2, VectVec3d jarg2_, long jarg3, VectVec3d jarg3_, double jarg4, long jarg5, VectReal jarg5_, double jarg6);
  public final static native long ShellMesh_nodalFlowDirResult__SWIG_7(long jarg1, ShellMesh jarg1_, long jarg2, VectVec3d jarg2_, long jarg3, VectVec3d jarg3_, double jarg4, long jarg5, VectReal jarg5_);
  public final static native double ShellMesh_axialDeformationEnergy__SWIG_0(long jarg1, ShellMesh jarg1_, int jarg2);
  public final static native double ShellMesh_axialDeformationEnergy__SWIG_1(long jarg1, ShellMesh jarg1_);
  public final static native double ShellMesh_bendingEnergy__SWIG_0(long jarg1, ShellMesh jarg1_, int jarg2);
  public final static native double ShellMesh_bendingEnergy__SWIG_1(long jarg1, ShellMesh jarg1_);
  public final static native void delete_ElementDirectionStrategy(long jarg1);
  public final static native long ElementDirectionStrategy_elementDir(long jarg1, ElementDirectionStrategy jarg1_, long jarg2);
  public final static native long new_ConstantElementDirectionStrategy(long jarg1, Vec3d jarg1_);
  public final static native long ConstantElementDirectionStrategy_elementDir(long jarg1, ConstantElementDirectionStrategy jarg1_, long jarg2);
  public final static native void delete_ConstantElementDirectionStrategy(long jarg1);
  public final static native long new_NeaerstElementDirectionStrategy(long jarg1, VectVec3d jarg1_, long jarg2, VectVec3d jarg2_, long jarg3, VectTriShell3D jarg3_, long jarg4);
  public final static native long NeaerstElementDirectionStrategy_elementDir(long jarg1, NeaerstElementDirectionStrategy jarg1_, long jarg2);
  public final static native void delete_NeaerstElementDirectionStrategy(long jarg1);
  public final static native long new_TriStream__SWIG_0(long jarg1, Mesh jarg1_, long jarg2, VectVec3d jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native long new_TriStream__SWIG_1(long jarg1, Mesh jarg1_, long jarg2, VectVec3d jarg2_, long jarg3, double jarg4);
  public final static native long new_TriStream__SWIG_2(long jarg1, Mesh jarg1_, long jarg2, VectVec3d jarg2_, long jarg3);
  public final static native long new_TriStream__SWIG_3(long jarg1, Mesh jarg1_, long jarg2, VectVec3d jarg2_);
  public final static native void delete_TriStream(long jarg1);
  public final static native long TriStream_addNodalScals(long jarg1, TriStream jarg1_, long jarg2, VectReal jarg2_);
  public final static native long TriStream_addNodalVecs(long jarg1, TriStream jarg1_, long jarg2, VectVec3d jarg2_);
  public final static native long TriStream_addElemVecs(long jarg1, TriStream jarg1_, long jarg2, VectVec3d jarg2_);
  public final static native void TriStream_traceNodalDirections__SWIG_0(long jarg1, TriStream jarg1_, long jarg2, long jarg3, TriStreamTriangle jarg3_, long jarg4, Vec3d jarg4_, long jarg5, TriStreamParticle jarg5_, long jarg6, long jarg7, long jarg8);
  public final static native void TriStream_traceNodalDirections__SWIG_1(long jarg1, TriStream jarg1_, long jarg2, long jarg3, TriStreamTriangle jarg3_, long jarg4, Vec3d jarg4_, long jarg5, TriStreamParticle jarg5_, long jarg6, long jarg7);
  public final static native void TriStream_traceNodalDirections__SWIG_2(long jarg1, TriStream jarg1_, long jarg2, long jarg3, Vec3d jarg3_, long jarg4, Vec3d jarg4_, double jarg5, long jarg6, boolean jarg7);
  public final static native void TriStream_traceNodalDirections__SWIG_3(long jarg1, TriStream jarg1_, long jarg2, long jarg3, Vec3d jarg3_, long jarg4, Vec3d jarg4_, double jarg5, long jarg6);
  public final static native void TriStream_traceNodalDirections__SWIG_4(long jarg1, TriStream jarg1_, long jarg2, long jarg3, Vec3d jarg3_, long jarg4, Vec3d jarg4_, double jarg5);
  public final static native void TriStream_traceNodalDirections__SWIG_5(long jarg1, TriStream jarg1_, long jarg2, long jarg3, Vec3d jarg3_, long jarg4, Vec3d jarg4_);
  public final static native double TriStream_traceIsoLine__SWIG_0(long jarg1, TriStream jarg1_, long jarg2, long jarg3, TriStreamTriangle jarg3_, long jarg4, Vec3d jarg4_, long jarg5, TriStreamParticle jarg5_, long jarg6, long jarg7);
  public final static native long TriStream_traceIsoLine__SWIG_1(long jarg1, TriStream jarg1_, long jarg2, long jarg3, Vec3d jarg3_, long jarg4, Vec3d jarg4_, double jarg5);
  public final static native long TriStream_traceIsoLine__SWIG_2(long jarg1, TriStream jarg1_, long jarg2, long jarg3, Vec3d jarg3_, long jarg4, Vec3d jarg4_);
  public final static native long TriStream_numberOfFlowPaths(long jarg1, TriStream jarg1_);
  public final static native long TriStream_flowpath(long jarg1, TriStream jarg1_, long jarg2);
  public final static native void FlowPathPos_pos_disp_set(long jarg1, FlowPathPos jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long FlowPathPos_pos_disp_get(long jarg1, FlowPathPos jarg1_);
  public final static native void FlowPathPos_pos_set(long jarg1, FlowPathPos jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long FlowPathPos_pos_get(long jarg1, FlowPathPos jarg1_);
  public final static native void FlowPathPos_on_boundary_set(long jarg1, FlowPathPos jarg1_, boolean jarg2);
  public final static native boolean FlowPathPos_on_boundary_get(long jarg1, FlowPathPos jarg1_);
  public final static native long new_FlowPathPos__SWIG_0(long jarg1, Vec3d jarg1_, long jarg2, Vec3d jarg2_, boolean jarg3);
  public final static native long new_FlowPathPos__SWIG_1();
  public final static native void delete_FlowPathPos(long jarg1);
  public final static native long new_TriStreamParticle__SWIG_0(long jarg1, TriStreamTriangle jarg1_);
  public final static native long new_TriStreamParticle__SWIG_1(long jarg1, TriStreamParticle jarg1_);
  public final static native void TriStreamParticle_jumpTo(long jarg1, TriStreamParticle jarg1_, long jarg2, TriStreamTriangle jarg2_);
  public final static native boolean TriStreamParticle_pathIsCircular__SWIG_0(long jarg1, TriStreamParticle jarg1_, long jarg2);
  public final static native boolean TriStreamParticle_pathIsCircular__SWIG_1(long jarg1, TriStreamParticle jarg1_);
  public final static native void TriStreamParticle_adjustBarycentricCoordinates(long jarg1, TriStreamParticle jarg1_, double jarg2);
  public final static native void TriStreamParticle_L_set(long jarg1, TriStreamParticle jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long TriStreamParticle_L_get(long jarg1, TriStreamParticle jarg1_);
  public final static native void TriStreamParticle_b_set(long jarg1, TriStreamParticle jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long TriStreamParticle_b_get(long jarg1, TriStreamParticle jarg1_);
  public final static native void TriStreamParticle_dir_set(long jarg1, TriStreamParticle jarg1_, boolean jarg2);
  public final static native boolean TriStreamParticle_dir_get(long jarg1, TriStreamParticle jarg1_);
  public final static native void TriStreamParticle_inertia_set(long jarg1, TriStreamParticle jarg1_, boolean jarg2);
  public final static native boolean TriStreamParticle_inertia_get(long jarg1, TriStreamParticle jarg1_);
  public final static native void TriStreamParticle_edge_set(long jarg1, TriStreamParticle jarg1_, int jarg2);
  public final static native int TriStreamParticle_edge_get(long jarg1, TriStreamParticle jarg1_);
  public final static native void TriStreamParticle_path_set(long jarg1, TriStreamParticle jarg1_, long jarg2, VectFlowPathPos jarg2_);
  public final static native long TriStreamParticle_path_get(long jarg1, TriStreamParticle jarg1_);
  public final static native long TriStreamParticle_edgeNodeInd(long jarg1, TriStreamParticle jarg1_, long jarg2);
  public final static native void delete_TriStreamParticle(long jarg1);
  public final static native long new_TriStreamTriangle(long jarg1, TriFace jarg1_, long jarg2, long jarg3, VectSizeT jarg3_, long jarg4, VectVec3d jarg4_);
  public final static native long TriStreamTriangle_global2barycentric(long jarg1, TriStreamTriangle jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long TriStreamTriangle_barycentric2global(long jarg1, TriStreamTriangle jarg1_, long jarg2, Vec3d jarg2_);
  public final static native boolean TriStreamTriangle_traceVelocities__SWIG_0(long jarg1, TriStreamTriangle jarg1_, long jarg2, TriStreamParticle jarg2_, long jarg3, VectVec3d jarg3_, long jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native boolean TriStreamTriangle_traceVelocities__SWIG_1(long jarg1, TriStreamTriangle jarg1_, long jarg2, TriStreamParticle jarg2_, long jarg3, VectVec3d jarg3_, long jarg4, double jarg5, double jarg6);
  public final static native boolean TriStreamTriangle_traceVelocities__SWIG_2(long jarg1, TriStreamTriangle jarg1_, long jarg2, TriStreamParticle jarg2_, long jarg3, VectVec3d jarg3_, long jarg4, double jarg5);
  public final static native boolean TriStreamTriangle_traceVelocities__SWIG_3(long jarg1, TriStreamTriangle jarg1_, long jarg2, TriStreamParticle jarg2_, long jarg3, VectVec3d jarg3_, long jarg4);
  public final static native boolean TriStreamTriangle_traceVelocities__SWIG_4(long jarg1, TriStreamTriangle jarg1_, long jarg2, TriStreamParticle jarg2_, long jarg3, VectVec3d jarg3_);
  public final static native boolean TriStreamTriangle_tracePrincipalDirection_2ndOrder__SWIG_0(long jarg1, TriStreamTriangle jarg1_, long jarg2, TriStreamParticle jarg2_, long jarg3, VectVec3d jarg3_, long jarg4, double jarg5, double jarg6);
  public final static native boolean TriStreamTriangle_tracePrincipalDirection_2ndOrder__SWIG_1(long jarg1, TriStreamTriangle jarg1_, long jarg2, TriStreamParticle jarg2_, long jarg3, VectVec3d jarg3_, long jarg4, double jarg5);
  public final static native boolean TriStreamTriangle_tracePrincipalDirection_2ndOrder__SWIG_2(long jarg1, TriStreamTriangle jarg1_, long jarg2, TriStreamParticle jarg2_, long jarg3, VectVec3d jarg3_, long jarg4);
  public final static native boolean TriStreamTriangle_tracePrincipalDirection_2ndOrder__SWIG_3(long jarg1, TriStreamTriangle jarg1_, long jarg2, TriStreamParticle jarg2_, long jarg3, VectVec3d jarg3_);
  public final static native boolean TriStreamTriangle_traceIsoLine(long jarg1, TriStreamTriangle jarg1_, long jarg2, TriStreamParticle jarg2_, long jarg3, Vec3d jarg3_, double jarg4);
  public final static native long TriStreamTriangle_face(long jarg1, TriStreamTriangle jarg1_);
  public final static native long TriStreamTriangle_nodeInd(long jarg1, TriStreamTriangle jarg1_, long jarg2);
  public final static native long TriStreamTriangle_elemInd(long jarg1, TriStreamTriangle jarg1_);
  public final static native void delete_TriStreamTriangle(long jarg1);
  public final static native long new_TriStreamTriangle2ndOrder(long jarg1, TriFace jarg1_, long jarg2, long jarg3, VectSizeT jarg3_, long jarg4, VectVec3d jarg4_);
  public final static native void delete_TriStreamTriangle2ndOrder(long jarg1);
  public final static native double Surface3DCroSec_h(long jarg1, Surface3DCroSec jarg1_);
  public final static native double Surface3DCroSec_I(long jarg1, Surface3DCroSec jarg1_);
  public final static native long new_Surface3DCroSec__SWIG_0();
  public final static native long new_Surface3DCroSec__SWIG_1(double jarg1);
  public final static native long new_Surface3DCroSec__SWIG_2(long jarg1, Surface3DCroSec jarg1_);
  public final static native long Surface3DCroSec_clone__SWIG_0(long jarg1, Surface3DCroSec jarg1_, long jarg2);
  public final static native long Surface3DCroSec_clone__SWIG_1(long jarg1, Surface3DCroSec jarg1_);
  public final static native void Surface3DCroSec_copy(long jarg1, Surface3DCroSec jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void delete_Surface3DCroSec(long jarg1);
  public final static native boolean Surface3DCroSec_strongerThan(long jarg1, Surface3DCroSec jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native long new_Surface3DSigEps__SWIG_0();
  public final static native long new_Surface3DSigEps__SWIG_1(long jarg1, Vec3d jarg1_, long jarg2, Material jarg2_);
  public final static native long Surface3DSigEps_clone(long jarg1, Surface3DSigEps jarg1_);
  public final static native void Surface3DSigEps_copy(long jarg1, Surface3DSigEps jarg1_, long jarg2, Surface3DSigEps jarg2_);
  public final static native long Surface3DSigEps_eps(long jarg1, Surface3DSigEps jarg1_);
  public final static native long Surface3DSigEps_sig(long jarg1, Surface3DSigEps jarg1_);
  public final static native long Surface3DSigEps_eps_princ(long jarg1, Surface3DSigEps jarg1_);
  public final static native long Surface3DSigEps_sig_princ(long jarg1, Surface3DSigEps jarg1_);
  public final static native double Surface3DSigEps_sig_vonMises(long jarg1, Surface3DSigEps jarg1_);
  public final static native double Surface3DSigEps_sig_vonMises_signed(long jarg1, Surface3DSigEps jarg1_);
  public final static native double Surface3DSigEps_utilization(long jarg1, Surface3DSigEps jarg1_);
  public final static native double Surface3DSigEps_utilization_signed(long jarg1, Surface3DSigEps jarg1_);
  public final static native long Surface3DSigEps_vecResult(long jarg1, Surface3DSigEps jarg1_, int jarg2);
  public final static native double Surface3DSigEps_scalResult(long jarg1, Surface3DSigEps jarg1_, int jarg2);
  public final static native void Surface3DSigEps_add(long jarg1, Surface3DSigEps jarg1_, long jarg2, Surface3DSigEps jarg2_);
  public final static native void Surface3DSigEps_scale(long jarg1, Surface3DSigEps jarg1_, double jarg2);
  public final static native long Surface3DSigEps_transformSigTo(long jarg1, Surface3DSigEps jarg1_, long jarg2);
  public final static native void delete_Surface3DSigEps(long jarg1);
  public final static native long new_Surface3DResultants__SWIG_0();
  public final static native long new_Surface3DResultants__SWIG_1(long jarg1, Vec3d jarg1_, long jarg2, Vec3d jarg2_, long jarg3, Vec3d jarg3_);
  public final static native long Surface3DResultants_clone(long jarg1, Surface3DResultants jarg1_);
  public final static native void Surface3DResultants_copy(long jarg1, Surface3DResultants jarg1_, long jarg2, Surface3DResultants jarg2_);
  public final static native long Surface3DResultants_M(long jarg1, Surface3DResultants jarg1_);
  public final static native long Surface3DResultants_N(long jarg1, Surface3DResultants jarg1_);
  public final static native long Surface3DResultants_V(long jarg1, Surface3DResultants jarg1_);
  public final static native void Surface3DResultants_add(long jarg1, Surface3DResultants jarg1_, long jarg2, Surface3DResultants jarg2_);
  public final static native void delete_Surface3DResultants(long jarg1);
  public final static native long new_Surface3DState__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native long new_Surface3DState__SWIG_2(long jarg1, Surface3DState jarg1_, long jarg2);
  public final static native long new_Surface3DState__SWIG_3(long jarg1, Surface3DState jarg1_);
  public final static native long Surface3DState_clone__SWIG_0(long jarg1, Surface3DState jarg1_, long jarg2);
  public final static native long Surface3DState_clone__SWIG_1(long jarg1, Surface3DState jarg1_);
  public final static native void Surface3DState_copy__SWIG_0(long jarg1, Surface3DState jarg1_, long jarg2, ElementState jarg2_, long jarg3);
  public final static native void Surface3DState_copy__SWIG_1(long jarg1, Surface3DState jarg1_, long jarg2, ElementState jarg2_);
  public final static native void delete_Surface3DState(long jarg1);
  public final static native long Surface3DState_nNodes(long jarg1, Surface3DState jarg1_);
  public final static native long Surface3DState_nNodalDofs(long jarg1, Surface3DState jarg1_);
  public final static native long new_ESODesigner(long jarg1, Response jarg1_);
  public final static native void ESODesigner_copy(long jarg1, ESODesigner jarg1_, long jarg2, ESODesigner jarg2_);
  public final static native void delete_ESODesigner(long jarg1);
  public final static native double ESODesigner_optimize(long jarg1, ESODesigner jarg1_);
  public final static native long ESODesigner_maxDesignIter__SWIG_0(long jarg1, ESODesigner jarg1_);
  public final static native long ESODesigner_maxDesignIter__SWIG_1(long jarg1, ESODesigner jarg1_, long jarg2);
  public final static native double ESODesigner_targetRemovalRatio__SWIG_0(long jarg1, ESODesigner jarg1_);
  public final static native double ESODesigner_targetRemovalRatio__SWIG_1(long jarg1, ESODesigner jarg1_, double jarg2);
  public final static native void ESODesigner_add(long jarg1, ESODesigner jarg1_, long jarg2, Element jarg2_);
  public final static native void ESODesigner_inactiveMaterial(long jarg1, ESODesigner jarg1_, long jarg2, Material jarg2_);
  public final static native long new_weightingInfo(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native void weightingInfo_fac_tension_set(long jarg1, weightingInfo jarg1_, double jarg2);
  public final static native double weightingInfo_fac_tension_get(long jarg1, weightingInfo jarg1_);
  public final static native void weightingInfo_fac_compression_set(long jarg1, weightingInfo jarg1_, double jarg2);
  public final static native double weightingInfo_fac_compression_get(long jarg1, weightingInfo jarg1_);
  public final static native void weightingInfo_fac_shear_set(long jarg1, weightingInfo jarg1_, double jarg2);
  public final static native double weightingInfo_fac_shear_get(long jarg1, weightingInfo jarg1_);
  public final static native void weightingInfo_fac_moment_set(long jarg1, weightingInfo jarg1_, double jarg2);
  public final static native double weightingInfo_fac_moment_get(long jarg1, weightingInfo jarg1_);
  public final static native void delete_weightingInfo(long jarg1);
  public final static native long new_BESOElem(long jarg1, Element jarg1_, long jarg2, Material jarg2_);
  public final static native void delete_BESOElem(long jarg1);
  public final static native boolean BESOElem_isActive__SWIG_0(long jarg1, BESOElem jarg1_);
  public final static native boolean BESOElem_isActive__SWIG_1(long jarg1, BESOElem jarg1_, boolean jarg2);
  public final static native double BESOElem_weight(long jarg1, BESOElem jarg1_, long jarg2, VectInt jarg2_, long jarg3, weightingInfo jarg3_);
  public final static native double BESOElem_mass(long jarg1, BESOElem jarg1_);
  public final static native void BESOElem_updateFEModel(long jarg1, BESOElem jarg1_);
  public final static native boolean BESOElem_neighborChanged(long jarg1, BESOElem jarg1_, long jarg2, VectBool jarg2_, long jarg3, double jarg4);
  public final static native void BESOElem_markAsChanged(long jarg1, BESOElem jarg1_, long jarg2, VectBool jarg2_);
  public final static native long BESOElem_ind(long jarg1, BESOElem jarg1_);
  public final static native long new_BESOGroup();
  public final static native void delete_BESOGroup(long jarg1);
  public final static native void BESOGroup_add(long jarg1, BESOGroup jarg1_, long jarg2, BESOElem jarg2_);
  public final static native boolean BESOGroup_isActive__SWIG_0(long jarg1, BESOGroup jarg1_);
  public final static native boolean BESOGroup_isActive__SWIG_1(long jarg1, BESOGroup jarg1_, boolean jarg2);
  public final static native boolean BESOGroup_flipIsActive(long jarg1, BESOGroup jarg1_, int jarg2);
  public final static native void BESOGroup_updateWeight(long jarg1, BESOGroup jarg1_, long jarg2, VectInt jarg2_, long jarg3, weightingInfo jarg3_);
  public final static native double BESOGroup_weight(long jarg1, BESOGroup jarg1_);
  public final static native double BESOGroup_mass(long jarg1, BESOGroup jarg1_);
  public final static native void BESOGroup_init(long jarg1, BESOGroup jarg1_);
  public final static native void BESOGroup_updateFEModel(long jarg1, BESOGroup jarg1_);
  public final static native boolean BESOGroup_neighborChanged(long jarg1, BESOGroup jarg1_, long jarg2, VectBool jarg2_, long jarg3, double jarg4);
  public final static native void BESOGroup_markAsChanged(long jarg1, BESOGroup jarg1_, long jarg2, VectBool jarg2_);
  public final static native long BESOGroup_members(long jarg1, BESOGroup jarg1_);
  public final static native long new_BESODesigner(long jarg1, Response jarg1_, long jarg2, VectInt jarg2_, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, int jarg8, int jarg9);
  public final static native void delete_BESODesigner(long jarg1);
  public final static native void BESODesigner_add(long jarg1, BESODesigner jarg1_, long jarg2, BESOGroup jarg2_);
  public final static native long BESODesigner_history(long jarg1, BESODesigner jarg1_, long jarg2);
  public final static native long BESODesigner_numberOfHistories(long jarg1, BESODesigner jarg1_);
  public final static native int BESODesigner_optimize(long jarg1, BESODesigner jarg1_);
  public final static native double BESODesigner_maxDisplacement(long jarg1, BESODesigner jarg1_);
  public final static native double BESODesigner_pilgrimStepFactor(long jarg1, BESODesigner jarg1_, double jarg2);
  public final static native double BESODesigner_minElemDistance(long jarg1, BESODesigner jarg1_, double jarg2);
  public final static native double BESODesigner_minElemWeightRatio(long jarg1, BESODesigner jarg1_, double jarg2);
  public final static native long BESODesigner_weightsDitribution(long jarg1, BESODesigner jarg1_);
  public final static native long new_FormFinder__SWIG_0(long jarg1, Model jarg1_, long jarg2);
  public final static native long new_FormFinder__SWIG_1(long jarg1, Model jarg1_);
  public final static native void FormFinder_copy(long jarg1, FormFinder jarg1_, long jarg2, FormFinder jarg2_);
  public final static native void delete_FormFinder(long jarg1);
  public final static native void FormFinder_targetDeflection(long jarg1, FormFinder jarg1_, double jarg2);
  public final static native long FormFinder_findForm(long jarg1, FormFinder jarg1_);
  public final static native double FormFinder_maxTotDeflection(long jarg1, FormFinder jarg1_);
  public final static native long FormFinder_transformToGlobal(long jarg1, FormFinder jarg1_, long jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void CroSecDesigner_copy(long jarg1, CroSecDesigner jarg1_, long jarg2, CroSecDesigner jarg2_);
  public final static native void delete_CroSecDesigner(long jarg1);
  public final static native void CroSecDesigner_ElemGrp_members_set(long jarg1, CroSecDesigner.ElemGrp jarg1_, long jarg2, VectElem jarg2_);
  public final static native long CroSecDesigner_ElemGrp_members_get(long jarg1, CroSecDesigner.ElemGrp jarg1_);
  public final static native void CroSecDesigner_ElemGrp_can_buckle_set(long jarg1, CroSecDesigner.ElemGrp jarg1_, boolean jarg2);
  public final static native boolean CroSecDesigner_ElemGrp_can_buckle_get(long jarg1, CroSecDesigner.ElemGrp jarg1_);
  public final static native void CroSecDesigner_ElemGrp_opti_crosec_set(long jarg1, CroSecDesigner.ElemGrp jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native long CroSecDesigner_ElemGrp_opti_crosec_get(long jarg1, CroSecDesigner.ElemGrp jarg1_);
  public final static native long new_CroSecDesigner_ElemGrp();
  public final static native long CroSecDesigner_ElemGrp_checkedGroup(long jarg1, CroSecDesigner.ElemGrp jarg1_, long jarg2);
  public final static native void delete_CroSecDesigner_ElemGrp(long jarg1);
  public final static native int CroSecDesigner_optimize(long jarg1, CroSecDesigner jarg1_);
  public final static native boolean CroSecDesigner_design(long jarg1, CroSecDesigner jarg1_, long jarg2, CroSecDesigner.ElemGrp jarg2_, long jarg3, long jarg4);
  public final static native void CroSecDesigner_add__SWIG_0(long jarg1, CroSecDesigner jarg1_, long jarg2, VectCroSec jarg2_);
  public final static native void CroSecDesigner_add__SWIG_1(long jarg1, CroSecDesigner jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void CroSecDesigner_add__SWIG_2(long jarg1, CroSecDesigner jarg1_, long jarg2, Element jarg2_, boolean jarg3);
  public final static native void CroSecDesigner_add__SWIG_3(long jarg1, CroSecDesigner jarg1_, long jarg2, Element jarg2_);
  public final static native void CroSecDesigner_add__SWIG_4(long jarg1, CroSecDesigner jarg1_, long jarg2, VectElem jarg2_, boolean jarg3);
  public final static native void CroSecDesigner_add__SWIG_5(long jarg1, CroSecDesigner jarg1_, long jarg2, VectElem jarg2_);
  public final static native double CroSecDesigner_utilization__SWIG_0(long jarg1, CroSecDesigner jarg1_, long jarg2, ElementStraightLine jarg2_, boolean jarg3, long jarg4, Beam3DCroSec jarg4_, long jarg5);
  public final static native double CroSecDesigner_utilization__SWIG_1(long jarg1, CroSecDesigner jarg1_, long jarg2, boolean jarg3, long jarg4);
  public final static native double CroSecDesigner_utilization__SWIG_2(long jarg1, CroSecDesigner jarg1_, long jarg2, ElementStraightLine jarg2_, boolean jarg3, long jarg4, Beam3DCroSec jarg4_);
  public final static native double CroSecDesigner_limitUtilization(long jarg1, CroSecDesigner jarg1_);
  public final static native int CroSecDesigner_maxULSDesignIterations__SWIG_0(long jarg1, CroSecDesigner jarg1_);
  public final static native int CroSecDesigner_maxULSDesignIterations__SWIG_1(long jarg1, CroSecDesigner jarg1_, int jarg2);
  public final static native int CroSecDesigner_maxSLSDesignIterations__SWIG_0(long jarg1, CroSecDesigner jarg1_);
  public final static native int CroSecDesigner_maxSLSDesignIterations__SWIG_1(long jarg1, CroSecDesigner jarg1_, int jarg2);
  public final static native int CroSecDesigner_nSamplePoints__SWIG_0(long jarg1, CroSecDesigner jarg1_);
  public final static native int CroSecDesigner_nSamplePoints__SWIG_1(long jarg1, CroSecDesigner jarg1_, long jarg2);
  public final static native int CroSecDesigner_crosecModelInd2PoolInd(long jarg1, CroSecDesigner jarg1_, long jarg2);
  public final static native int CroSecDesigner_crosecElemInd2PoolInd(long jarg1, CroSecDesigner jarg1_, long jarg2);
  public final static native double CroSecDesigner_globalStrengthFactor__SWIG_0(long jarg1, CroSecDesigner jarg1_);
  public final static native double CroSecDesigner_globalStrengthFactor__SWIG_1(long jarg1, CroSecDesigner jarg1_, double jarg2);
  public final static native double CroSecDesigner_maxDeformationTarget__SWIG_0(long jarg1, CroSecDesigner jarg1_);
  public final static native double CroSecDesigner_maxDeformationTarget__SWIG_1(long jarg1, CroSecDesigner jarg1_, double jarg2);
  public final static native void CroSecDesigner_setBeamCroSecForces__SWIG_0(long jarg1, CroSecDesigner jarg1_, boolean jarg2);
  public final static native void CroSecDesigner_setBeamCroSecForces__SWIG_1(long jarg1, CroSecDesigner jarg1_, int jarg2, boolean jarg3);
  public final static native long new_ElemSLDimElastic__SWIG_0(long jarg1, Response jarg1_, long jarg2, long jarg3, double jarg4, long jarg5);
  public final static native long new_ElemSLDimElastic__SWIG_1(long jarg1, Response jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long new_ElemSLDimElastic__SWIG_2(long jarg1, Response jarg1_, long jarg2, long jarg3);
  public final static native long new_ElemSLDimElastic__SWIG_3(long jarg1, Response jarg1_, long jarg2);
  public final static native long new_ElemSLDimElastic__SWIG_4(long jarg1, Response jarg1_);
  public final static native void delete_ElemSLDimElastic(long jarg1);
  public final static native long ElemSLDimElastic_clone__SWIG_0(long jarg1, ElemSLDimElastic jarg1_, long jarg2);
  public final static native long ElemSLDimElastic_clone__SWIG_1(long jarg1, ElemSLDimElastic jarg1_);
  public final static native void ElemSLDimElastic_add__SWIG_0(long jarg1, ElemSLDimElastic jarg1_, long jarg2, Model jarg2_);
  public final static native void ElemSLDimElastic_add__SWIG_1(long jarg1, ElemSLDimElastic jarg1_, long jarg2, VectCroSec jarg2_);
  public final static native void ElemSLDimElastic_add__SWIG_2(long jarg1, ElemSLDimElastic jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native void ElemSLDimElastic_add__SWIG_3(long jarg1, ElemSLDimElastic jarg1_, long jarg2, Element jarg2_, boolean jarg3);
  public final static native void ElemSLDimElastic_add__SWIG_4(long jarg1, ElemSLDimElastic jarg1_, long jarg2, Element jarg2_);
  public final static native void ElemSLDimElastic_add__SWIG_5(long jarg1, ElemSLDimElastic jarg1_, long jarg2, VectElem jarg2_, boolean jarg3);
  public final static native void ElemSLDimElastic_add__SWIG_6(long jarg1, ElemSLDimElastic jarg1_, long jarg2, VectElem jarg2_);
  public final static native double ElemSLDimElastic_utilization(long jarg1, ElemSLDimElastic jarg1_, long jarg2, ElementStraightLine jarg2_, boolean jarg3, long jarg4, Beam3DCroSec jarg4_, long jarg5);
  public final static native double ElemSLDimElastic_bucklingLengthZ(long jarg1, ElemSLDimElastic jarg1_, long jarg2);
  public final static native double ElemSLDimElastic_bucklingLengthY(long jarg1, ElemSLDimElastic jarg1_, long jarg2);
  public final static native long new_ElemSLDimPlastic__SWIG_0(long jarg1, Response jarg1_, long jarg2, long jarg3, double jarg4, long jarg5);
  public final static native long new_ElemSLDimPlastic__SWIG_1(long jarg1, Response jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long new_ElemSLDimPlastic__SWIG_2(long jarg1, Response jarg1_, long jarg2, long jarg3);
  public final static native long new_ElemSLDimPlastic__SWIG_3(long jarg1, Response jarg1_, long jarg2);
  public final static native long new_ElemSLDimPlastic__SWIG_4(long jarg1, Response jarg1_);
  public final static native void delete_ElemSLDimPlastic(long jarg1);
  public final static native long new_CroSecFamily();
  public final static native void delete_CroSecFamily(long jarg1);
  public final static native void CroSecFamily_add(long jarg1, CroSecFamily jarg1_, long jarg2, Beam3DCroSec jarg2_);
  public final static native long CroSecFamily_size(long jarg1, CroSecFamily jarg1_);
  public final static native long CroSecFamily_prop(long jarg1, CroSecFamily jarg1_, long jarg2);
  public final static native void CroSecFamily_design(long jarg1, CroSecFamily jarg1_, long jarg2, ElementStraightLine jarg2_, boolean jarg3, long jarg4, long jarg5, CroSecDesigner jarg5_);
  public final static native long CroSecFamily_largest(long jarg1, CroSecFamily jarg1_);
  public final static native long CroSecFamily_members(long jarg1, CroSecFamily jarg1_);
  public final static native long new_ActionVisitor__SWIG_1(long jarg1, VectSizeT jarg1_, long jarg2, double jarg3);
  public final static native long new_ActionVisitor__SWIG_2(long jarg1, VectSizeT jarg1_, long jarg2);
  public final static native long new_ActionVisitor__SWIG_3(long jarg1, VectSizeT jarg1_);
  public final static native void ActionVisitor_disableForceComp__SWIG_0(long jarg1, ActionVisitor jarg1_, int jarg2);
  public final static native void ActionVisitor_disableForceComp__SWIG_1(long jarg1, ActionVisitor jarg1_, int jarg2);
  public final static native void ActionVisitor_disableForceComp__SWIG_2(long jarg1, ActionVisitor jarg1_, int jarg2);
  public final static native long ActionVisitor_action(long jarg1, ActionVisitor jarg1_, long jarg2, Element jarg2_);
  public final static native void ActionVisitor_visit__SWIG_0(long jarg1, ActionVisitor jarg1_, long jarg2, VectElem jarg2_, long jarg3, VectReal jarg3_);
  public final static native void ActionVisitor_visit__SWIG_1(long jarg1, ActionVisitor jarg1_, long jarg2, VectElem jarg2_);
  public final static native void ActionVisitor_visit__SWIG_2(long jarg1, ActionVisitor jarg1_, long jarg2, Beam3D jarg2_);
  public final static native void ActionVisitor_visit__SWIG_3(long jarg1, ActionVisitor jarg1_, long jarg2, Truss3D jarg2_);
  public final static native void ActionVisitor_visit__SWIG_4(long jarg1, ActionVisitor jarg1_, long jarg2, Spring3D jarg2_);
  public final static native void ActionVisitor_visit__SWIG_5(long jarg1, ActionVisitor jarg1_, long jarg2, TriShell3D jarg2_);
  public final static native long ActionVisitor_nLoadCases(long jarg1, ActionVisitor jarg1_);
  public final static native long ActionVisitor_modelLoadCaseInd(long jarg1, ActionVisitor jarg1_, long jarg2);
  public final static native long ActionVisitor_loadCaseScalingFactors(long jarg1, ActionVisitor jarg1_);
  public final static native void delete_ActionVisitor(long jarg1);
  public final static native long new_BucklingLength__SWIG_1(long jarg1, Model jarg1_);
  public final static native long BucklingLength_bklLengthZ__SWIG_0(long jarg1, BucklingLength jarg1_);
  public final static native double BucklingLength_bklLengthZ__SWIG_1(long jarg1, BucklingLength jarg1_, long jarg2);
  public final static native long BucklingLength_bklLengthY__SWIG_0(long jarg1, BucklingLength jarg1_);
  public final static native double BucklingLength_bklLengthY__SWIG_1(long jarg1, BucklingLength jarg1_, long jarg2);
  public final static native long BucklingLength_bklLengthLT__SWIG_0(long jarg1, BucklingLength jarg1_);
  public final static native double BucklingLength_bklLengthLT__SWIG_1(long jarg1, BucklingLength jarg1_, long jarg2);
  public final static native void delete_BucklingLength(long jarg1);
  public final static native long new_CroSecSpace();
  public final static native void delete_CroSecSpace(long jarg1);
  public final static native void CroSecSpace_add(long jarg1, CroSecSpace jarg1_, long jarg2, ElementCroSec jarg2_, int jarg3);
  public final static native long CroSecSpace_croSecs(long jarg1, CroSecSpace jarg1_);
  public final static native long CroSecSpace_croSecIter__SWIG_0(long jarg1, CroSecSpace jarg1_);
  public final static native void CroSecSpace_croSecIter__SWIG_1(long jarg1, CroSecSpace jarg1_, long jarg2);
  public final static native void CroSecSpace_setLinearSearchIterator(long jarg1, CroSecSpace jarg1_);
  public final static native void CroSecSpace_setBisectionSearchIterator(long jarg1, CroSecSpace jarg1_);
  public final static native void CroSecSpace_mapCroSecToUID(long jarg1, CroSecSpace jarg1_, long jarg2);
  public final static native void CroSecState_copy(long jarg1, CroSecState jarg1_, long jarg2, CroSecState jarg2_);
  public final static native void delete_CroSecState(long jarg1);
  public final static native double CroSecState_utilization(long jarg1, CroSecState jarg1_, long jarg2, ActionVisitor jarg2_, long jarg3, BucklingLength jarg3_, long jarg4, ElementCroSec jarg4_);
  public final static native boolean CroSecState_isSufficient(long jarg1, CroSecState jarg1_, long jarg2, ActionVisitor jarg2_, long jarg3, BucklingLength jarg3_, long jarg4, ElementCroSec jarg4_);
  public final static native long CroSecState_getElementCroSec(long jarg1, CroSecState jarg1_);
  public final static native void CroSecState_setElementCroSec(long jarg1, CroSecState jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native long CroSecState_elems(long jarg1, CroSecState jarg1_);
  public final static native void CroSecState_accept(long jarg1, CroSecState jarg1_, long jarg2, CroSecStateVisitor jarg2_);
  public final static native void CroSecState_init(long jarg1, CroSecState jarg1_, long jarg2, VectElem jarg2_, boolean jarg3);
  public final static native long new_ElasticCroSecState_EC3_Simplified__SWIG_0(boolean jarg1, double jarg2);
  public final static native long new_ElasticCroSecState_EC3_Simplified__SWIG_1(boolean jarg1);
  public final static native long new_ElasticCroSecState_EC3_Simplified__SWIG_2();
  public final static native long new_ElasticCroSecState_EC3_Simplified__SWIG_3(long jarg1, VectElem jarg1_, boolean jarg2, double jarg3);
  public final static native long new_ElasticCroSecState_EC3_Simplified__SWIG_4(long jarg1, VectElem jarg1_, boolean jarg2);
  public final static native long new_ElasticCroSecState_EC3_Simplified__SWIG_5(long jarg1, VectElem jarg1_);
  public final static native long new_ElasticCroSecState_EC3_Simplified__SWIG_6(long jarg1, ElasticCroSecState_EC3_Simplified jarg1_);
  public final static native long ElasticCroSecState_EC3_Simplified_clone__SWIG_0(long jarg1, ElasticCroSecState_EC3_Simplified jarg1_, long jarg2);
  public final static native long ElasticCroSecState_EC3_Simplified_clone__SWIG_1(long jarg1, ElasticCroSecState_EC3_Simplified jarg1_);
  public final static native void ElasticCroSecState_EC3_Simplified_copy(long jarg1, ElasticCroSecState_EC3_Simplified jarg1_, long jarg2, CroSecState jarg2_);
  public final static native void delete_ElasticCroSecState_EC3_Simplified(long jarg1);
  public final static native void ElasticCroSecState_EC3_Simplified_init(long jarg1, ElasticCroSecState_EC3_Simplified jarg1_, long jarg2, VectElem jarg2_, boolean jarg3);
  public final static native long new_PlasticCroSecState_EC3_Simplified__SWIG_0(boolean jarg1, double jarg2);
  public final static native long new_PlasticCroSecState_EC3_Simplified__SWIG_1(boolean jarg1);
  public final static native long new_PlasticCroSecState_EC3_Simplified__SWIG_2();
  public final static native long new_PlasticCroSecState_EC3_Simplified__SWIG_3(long jarg1, VectElem jarg1_, boolean jarg2, double jarg3);
  public final static native long new_PlasticCroSecState_EC3_Simplified__SWIG_4(long jarg1, VectElem jarg1_, boolean jarg2);
  public final static native long new_PlasticCroSecState_EC3_Simplified__SWIG_5(long jarg1, VectElem jarg1_);
  public final static native long new_PlasticCroSecState_EC3_Simplified__SWIG_6(long jarg1, PlasticCroSecState_EC3_Simplified jarg1_);
  public final static native long PlasticCroSecState_EC3_Simplified_clone__SWIG_0(long jarg1, PlasticCroSecState_EC3_Simplified jarg1_, long jarg2);
  public final static native long PlasticCroSecState_EC3_Simplified_clone__SWIG_1(long jarg1, PlasticCroSecState_EC3_Simplified jarg1_);
  public final static native void PlasticCroSecState_EC3_Simplified_copy(long jarg1, PlasticCroSecState_EC3_Simplified jarg1_, long jarg2, CroSecState jarg2_);
  public final static native void delete_PlasticCroSecState_EC3_Simplified(long jarg1);
  public final static native void PlasticCroSecState_EC3_Simplified_init(long jarg1, PlasticCroSecState_EC3_Simplified jarg1_, long jarg2, VectElem jarg2_, boolean jarg3);
  public final static native long new_ElasticCroSecState_EC3__SWIG_0(boolean jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_ElasticCroSecState_EC3__SWIG_1(boolean jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_ElasticCroSecState_EC3__SWIG_2(boolean jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_ElasticCroSecState_EC3__SWIG_3(boolean jarg1, double jarg2, double jarg3);
  public final static native long new_ElasticCroSecState_EC3__SWIG_4(boolean jarg1, double jarg2);
  public final static native long new_ElasticCroSecState_EC3__SWIG_5(boolean jarg1);
  public final static native long new_ElasticCroSecState_EC3__SWIG_6();
  public final static native long new_ElasticCroSecState_EC3__SWIG_7(long jarg1, VectElem jarg1_, boolean jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_ElasticCroSecState_EC3__SWIG_8(long jarg1, VectElem jarg1_, boolean jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_ElasticCroSecState_EC3__SWIG_9(long jarg1, VectElem jarg1_, boolean jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_ElasticCroSecState_EC3__SWIG_10(long jarg1, VectElem jarg1_, boolean jarg2, double jarg3, double jarg4);
  public final static native long new_ElasticCroSecState_EC3__SWIG_11(long jarg1, VectElem jarg1_, boolean jarg2, double jarg3);
  public final static native long new_ElasticCroSecState_EC3__SWIG_12(long jarg1, VectElem jarg1_, boolean jarg2);
  public final static native long new_ElasticCroSecState_EC3__SWIG_13(long jarg1, VectElem jarg1_);
  public final static native long new_ElasticCroSecState_EC3__SWIG_14(long jarg1, ElasticCroSecState_EC3 jarg1_);
  public final static native long ElasticCroSecState_EC3_clone__SWIG_0(long jarg1, ElasticCroSecState_EC3 jarg1_, long jarg2);
  public final static native long ElasticCroSecState_EC3_clone__SWIG_1(long jarg1, ElasticCroSecState_EC3 jarg1_);
  public final static native void ElasticCroSecState_EC3_copy(long jarg1, ElasticCroSecState_EC3 jarg1_, long jarg2, CroSecState jarg2_);
  public final static native void delete_ElasticCroSecState_EC3(long jarg1);
  public final static native void ElasticCroSecState_EC3_init(long jarg1, ElasticCroSecState_EC3 jarg1_, long jarg2, VectElem jarg2_, boolean jarg3);
  public final static native long new_PlasticCroSecState_EC3__SWIG_0(boolean jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_PlasticCroSecState_EC3__SWIG_1(boolean jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_PlasticCroSecState_EC3__SWIG_2(boolean jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_PlasticCroSecState_EC3__SWIG_3(boolean jarg1, double jarg2, double jarg3);
  public final static native long new_PlasticCroSecState_EC3__SWIG_4(boolean jarg1, double jarg2);
  public final static native long new_PlasticCroSecState_EC3__SWIG_5(boolean jarg1);
  public final static native long new_PlasticCroSecState_EC3__SWIG_6();
  public final static native long new_PlasticCroSecState_EC3__SWIG_7(long jarg1, VectElem jarg1_, boolean jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_PlasticCroSecState_EC3__SWIG_8(long jarg1, VectElem jarg1_, boolean jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_PlasticCroSecState_EC3__SWIG_9(long jarg1, VectElem jarg1_, boolean jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_PlasticCroSecState_EC3__SWIG_10(long jarg1, VectElem jarg1_, boolean jarg2, double jarg3, double jarg4);
  public final static native long new_PlasticCroSecState_EC3__SWIG_11(long jarg1, VectElem jarg1_, boolean jarg2, double jarg3);
  public final static native long new_PlasticCroSecState_EC3__SWIG_12(long jarg1, VectElem jarg1_, boolean jarg2);
  public final static native long new_PlasticCroSecState_EC3__SWIG_13(long jarg1, VectElem jarg1_);
  public final static native long new_PlasticCroSecState_EC3__SWIG_14(long jarg1, PlasticCroSecState_EC3 jarg1_);
  public final static native long PlasticCroSecState_EC3_clone__SWIG_0(long jarg1, PlasticCroSecState_EC3 jarg1_, long jarg2);
  public final static native long PlasticCroSecState_EC3_clone__SWIG_1(long jarg1, PlasticCroSecState_EC3 jarg1_);
  public final static native void PlasticCroSecState_EC3_copy(long jarg1, PlasticCroSecState_EC3 jarg1_, long jarg2, CroSecState jarg2_);
  public final static native void delete_PlasticCroSecState_EC3(long jarg1);
  public final static native void PlasticCroSecState_EC3_init(long jarg1, PlasticCroSecState_EC3 jarg1_, long jarg2, VectElem jarg2_, boolean jarg3);
  public final static native void delete_CroSecStateVisitor(long jarg1);
  public final static native void CroSecStateVisitor_visit__SWIG_0(long jarg1, CroSecStateVisitor jarg1_, long jarg2);
  public final static native void CroSecStateVisitor_visit__SWIG_1(long jarg1, CroSecStateVisitor jarg1_, long jarg2);
  public final static native void CroSecStateVisitor_visit__SWIG_2(long jarg1, CroSecStateVisitor jarg1_, long jarg2, CroSecStateImp_LinearElastic_Beam_EC3 jarg2_);
  public final static native void CroSecStateVisitor_visit__SWIG_3(long jarg1, CroSecStateVisitor jarg1_, long jarg2, CroSecStateImp_Plastic_Beam_EC3 jarg2_);
  public final static native void CroSecStateVisitor_visit__SWIG_4(long jarg1, CroSecStateVisitor jarg1_, long jarg2, CroSecStateImp_LinearElastic_Shell jarg2_);
  public final static native void CroSecStateVisitor_visit__SWIG_5(long jarg1, CroSecStateVisitor jarg1_, long jarg2, CroSecStateImp_Plastic_Shell jarg2_);
  public final static native long CroSecStateImp_clone__SWIG_0(long jarg1, CroSecStateImp jarg1_, long jarg2);
  public final static native long CroSecStateImp_clone__SWIG_1(long jarg1, CroSecStateImp jarg1_);
  public final static native void delete_CroSecStateImp(long jarg1);
  public final static native double CroSecStateImp_utilization(long jarg1, CroSecStateImp jarg1_, long jarg2, Element jarg2_, long jarg3, ActionVisitor jarg3_, long jarg4, BucklingLength jarg4_, long jarg5, ElementCroSec jarg5_, boolean jarg6);
  public final static native void CroSecStateImp_accept(long jarg1, CroSecStateImp jarg1_, long jarg2, CroSecStateVisitor jarg2_);
  public final static native long new_CroSecStateImp_LinearElastic_Shell();
  public final static native long CroSecStateImp_LinearElastic_Shell_clone__SWIG_0(long jarg1, CroSecStateImp_LinearElastic_Shell jarg1_, long jarg2);
  public final static native long CroSecStateImp_LinearElastic_Shell_clone__SWIG_1(long jarg1, CroSecStateImp_LinearElastic_Shell jarg1_);
  public final static native void delete_CroSecStateImp_LinearElastic_Shell(long jarg1);
  public final static native void CroSecStateImp_LinearElastic_Shell_accept(long jarg1, CroSecStateImp_LinearElastic_Shell jarg1_, long jarg2, CroSecStateVisitor jarg2_);
  public final static native double CroSecStateImp_LinearElastic_Shell_utilization(long jarg1, CroSecStateImp_LinearElastic_Shell jarg1_, long jarg2, Element jarg2_, long jarg3, ActionVisitor jarg3_, long jarg4, BucklingLength jarg4_, long jarg5, ElementCroSec jarg5_, boolean jarg6);
  public final static native long new_CroSecStateImp_Plastic_Shell();
  public final static native long CroSecStateImp_Plastic_Shell_clone__SWIG_0(long jarg1, CroSecStateImp_Plastic_Shell jarg1_, long jarg2);
  public final static native long CroSecStateImp_Plastic_Shell_clone__SWIG_1(long jarg1, CroSecStateImp_Plastic_Shell jarg1_);
  public final static native void delete_CroSecStateImp_Plastic_Shell(long jarg1);
  public final static native void CroSecStateImp_Plastic_Shell_accept(long jarg1, CroSecStateImp_Plastic_Shell jarg1_, long jarg2, CroSecStateVisitor jarg2_);
  public final static native long new_UtilBendingBeam();
  public final static native void UtilBendingBeam_copy(long jarg1, UtilBendingBeam jarg1_, long jarg2, UtilBendingBeam jarg2_);
  public final static native void UtilBendingBeam_fac_N_set(long jarg1, UtilBendingBeam jarg1_, double jarg2);
  public final static native double UtilBendingBeam_fac_N_get(long jarg1, UtilBendingBeam jarg1_);
  public final static native void UtilBendingBeam_fac_My_set(long jarg1, UtilBendingBeam jarg1_, double jarg2);
  public final static native double UtilBendingBeam_fac_My_get(long jarg1, UtilBendingBeam jarg1_);
  public final static native void UtilBendingBeam_fac_Mz_set(long jarg1, UtilBendingBeam jarg1_, double jarg2);
  public final static native double UtilBendingBeam_fac_Mz_get(long jarg1, UtilBendingBeam jarg1_);
  public final static native double UtilBendingBeam_util(long jarg1, UtilBendingBeam jarg1_);
  public final static native void delete_UtilBendingBeam(long jarg1);
  public final static native long new_UtilShearBeam();
  public final static native void UtilShearBeam_copy(long jarg1, UtilShearBeam jarg1_, long jarg2, UtilShearBeam jarg2_);
  public final static native void UtilShearBeam_fac_Vy_set(long jarg1, UtilShearBeam jarg1_, double jarg2);
  public final static native double UtilShearBeam_fac_Vy_get(long jarg1, UtilShearBeam jarg1_);
  public final static native void UtilShearBeam_fac_Vz_set(long jarg1, UtilShearBeam jarg1_, double jarg2);
  public final static native double UtilShearBeam_fac_Vz_get(long jarg1, UtilShearBeam jarg1_);
  public final static native void UtilShearBeam_fac_Mt_set(long jarg1, UtilShearBeam jarg1_, double jarg2);
  public final static native double UtilShearBeam_fac_Mt_get(long jarg1, UtilShearBeam jarg1_);
  public final static native double UtilShearBeam_util(long jarg1, UtilShearBeam jarg1_);
  public final static native void delete_UtilShearBeam(long jarg1);
  public final static native void UtilDetailsEC3_copy(long jarg1, UtilDetailsEC3 jarg1_, long jarg2, UtilDetailsEC3 jarg2_);
  public final static native void UtilDetailsEC3_bending_Y_set(long jarg1, UtilDetailsEC3 jarg1_, long jarg2, UtilBendingBeam jarg2_);
  public final static native long UtilDetailsEC3_bending_Y_get(long jarg1, UtilDetailsEC3 jarg1_);
  public final static native void UtilDetailsEC3_bending_Z_set(long jarg1, UtilDetailsEC3 jarg1_, long jarg2, UtilBendingBeam jarg2_);
  public final static native long UtilDetailsEC3_bending_Z_get(long jarg1, UtilDetailsEC3 jarg1_);
  public final static native void UtilDetailsEC3_shear_set(long jarg1, UtilDetailsEC3 jarg1_, long jarg2, UtilShearBeam jarg2_);
  public final static native long UtilDetailsEC3_shear_get(long jarg1, UtilDetailsEC3 jarg1_);
  public final static native double UtilDetailsEC3_util(long jarg1, UtilDetailsEC3 jarg1_);
  public final static native long new_UtilDetailsEC3();
  public final static native void delete_UtilDetailsEC3(long jarg1);
  public final static native void CalcDetailsEC3_crosec_class_set(long jarg1, CalcDetailsEC3 jarg1_, long jarg2);
  public final static native long CalcDetailsEC3_crosec_class_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_N_Rd_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_N_Rd_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_Vy_Rd_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_Vy_Rd_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_Vz_Rd_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_Vz_Rd_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_Mt_Rd_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_Mt_Rd_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_My_Rd_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_My_Rd_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_Mz_Rd_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_Mz_Rd_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_Mcr_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_Mcr_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_Ncr_y_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_Ncr_y_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_Ncr_z_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_Ncr_z_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_psi_y_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_psi_y_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_Cmy_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_Cmy_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_Cmz_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_Cmz_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_CmLT_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_CmLT_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_chi_y_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_chi_y_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_chi_z_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_chi_z_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_chi_LT_mod_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_chi_LT_mod_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_kyy_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_kyy_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_kzz_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_kzz_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_kyz_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_kyz_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native void CalcDetailsEC3_kzy_set(long jarg1, CalcDetailsEC3 jarg1_, double jarg2);
  public final static native double CalcDetailsEC3_kzy_get(long jarg1, CalcDetailsEC3 jarg1_);
  public final static native long new_CalcDetailsEC3();
  public final static native void delete_CalcDetailsEC3(long jarg1);
  public final static native long new_CroSecStateImp_LinearElastic_Beam_EC3__SWIG_0(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_CroSecStateImp_LinearElastic_Beam_EC3__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native long new_CroSecStateImp_LinearElastic_Beam_EC3__SWIG_2(double jarg1, double jarg2);
  public final static native long new_CroSecStateImp_LinearElastic_Beam_EC3__SWIG_3(double jarg1);
  public final static native long new_CroSecStateImp_LinearElastic_Beam_EC3__SWIG_4();
  public final static native long CroSecStateImp_LinearElastic_Beam_EC3_clone__SWIG_0(long jarg1, CroSecStateImp_LinearElastic_Beam_EC3 jarg1_, long jarg2);
  public final static native long CroSecStateImp_LinearElastic_Beam_EC3_clone__SWIG_1(long jarg1, CroSecStateImp_LinearElastic_Beam_EC3 jarg1_);
  public final static native void delete_CroSecStateImp_LinearElastic_Beam_EC3(long jarg1);
  public final static native void CroSecStateImp_LinearElastic_Beam_EC3_accept(long jarg1, CroSecStateImp_LinearElastic_Beam_EC3 jarg1_, long jarg2, CroSecStateVisitor jarg2_);
  public final static native double CroSecStateImp_LinearElastic_Beam_EC3_utilization(long jarg1, CroSecStateImp_LinearElastic_Beam_EC3 jarg1_, long jarg2, Element jarg2_, long jarg3, ActionVisitor jarg3_, long jarg4, BucklingLength jarg4_, long jarg5, ElementCroSec jarg5_, boolean jarg6);
  public final static native long CroSecStateImp_LinearElastic_Beam_EC3_utilization_details(long jarg1, CroSecStateImp_LinearElastic_Beam_EC3 jarg1_);
  public final static native long CroSecStateImp_LinearElastic_Beam_EC3_calculation_details(long jarg1, CroSecStateImp_LinearElastic_Beam_EC3 jarg1_);
  public final static native long new_CroSecStateImp_Plastic_Beam_EC3__SWIG_0(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_CroSecStateImp_Plastic_Beam_EC3__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native long new_CroSecStateImp_Plastic_Beam_EC3__SWIG_2(double jarg1, double jarg2);
  public final static native long new_CroSecStateImp_Plastic_Beam_EC3__SWIG_3(double jarg1);
  public final static native long new_CroSecStateImp_Plastic_Beam_EC3__SWIG_4();
  public final static native long CroSecStateImp_Plastic_Beam_EC3_clone__SWIG_0(long jarg1, CroSecStateImp_Plastic_Beam_EC3 jarg1_, long jarg2);
  public final static native long CroSecStateImp_Plastic_Beam_EC3_clone__SWIG_1(long jarg1, CroSecStateImp_Plastic_Beam_EC3 jarg1_);
  public final static native void delete_CroSecStateImp_Plastic_Beam_EC3(long jarg1);
  public final static native long new_CroSecStateVisitor_EC3();
  public final static native void CroSecStateVisitor_EC3_util_set(long jarg1, CroSecStateVisitor_EC3 jarg1_, long jarg2, UtilDetailsEC3 jarg2_);
  public final static native long CroSecStateVisitor_EC3_util_get(long jarg1, CroSecStateVisitor_EC3 jarg1_);
  public final static native void CroSecStateVisitor_EC3_calc_set(long jarg1, CroSecStateVisitor_EC3 jarg1_, long jarg2, CalcDetailsEC3 jarg2_);
  public final static native long CroSecStateVisitor_EC3_calc_get(long jarg1, CroSecStateVisitor_EC3 jarg1_);
  public final static native void delete_CroSecStateVisitor_EC3(long jarg1);
  public final static native void CroSecStateVisitor_EC3_visit__SWIG_0(long jarg1, CroSecStateVisitor_EC3 jarg1_, long jarg2);
  public final static native void CroSecStateVisitor_EC3_visit__SWIG_1(long jarg1, CroSecStateVisitor_EC3 jarg1_, long jarg2);
  public final static native void CroSecStateVisitor_EC3_visit__SWIG_2(long jarg1, CroSecStateVisitor_EC3 jarg1_, long jarg2, CroSecStateImp_LinearElastic_Beam_EC3 jarg2_);
  public final static native void CroSecStateVisitor_EC3_visit__SWIG_3(long jarg1, CroSecStateVisitor_EC3 jarg1_, long jarg2, CroSecStateImp_Plastic_Beam_EC3 jarg2_);
  public final static native void CroSecStateVisitor_EC3_visit__SWIG_4(long jarg1, CroSecStateVisitor_EC3 jarg1_, long jarg2, CroSecStateImp_LinearElastic_Shell jarg2_);
  public final static native void CroSecStateVisitor_EC3_visit__SWIG_5(long jarg1, CroSecStateVisitor_EC3 jarg1_, long jarg2, CroSecStateImp_Plastic_Shell jarg2_);
  public final static native long new_ElementDesignerImp(long jarg1, CroSecState jarg1_, long jarg2, CroSecSpace jarg2_);
  public final static native void delete_ElementDesignerImp(long jarg1);
  public final static native void ElementDesignerImp_optimize(long jarg1, ElementDesignerImp jarg1_, long jarg2, ActionVisitor jarg2_, long jarg3, BucklingLength jarg3_, long jarg4, long jarg5);
  public final static native boolean ElementDesignerImp_hasChanged(long jarg1, ElementDesignerImp jarg1_);
  public final static native long ElementDesignerImp_crosecState(long jarg1, ElementDesignerImp jarg1_);
  public final static native long ElementDesignerImp_crosecSpace(long jarg1, ElementDesignerImp jarg1_);
  public final static native long ElementDesignerImp_elems(long jarg1, ElementDesignerImp jarg1_);
  public final static native long ElementDesignerImp_getElementCroSec(long jarg1, ElementDesignerImp jarg1_);
  public final static native void ElementDesignerImp_setElementCroSec(long jarg1, ElementDesignerImp jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native long new_ElementDesigner(long jarg1, CroSecState jarg1_, long jarg2, CroSecSpace jarg2_);
  public final static native void delete_ElementDesigner(long jarg1);
  public final static native void ElementDesigner_optimize(long jarg1, ElementDesigner jarg1_, long jarg2, ActionVisitor jarg2_, long jarg3, BucklingLength jarg3_, long jarg4, long jarg5);
  public final static native boolean ElementDesigner_hasChanged(long jarg1, ElementDesigner jarg1_);
  public final static native long ElementDesigner_crosecState(long jarg1, ElementDesigner jarg1_);
  public final static native long ElementDesigner_crosecSpace(long jarg1, ElementDesigner jarg1_);
  public final static native long ElementDesigner_elems(long jarg1, ElementDesigner jarg1_);
  public final static native long ElementDesigner_crosec__SWIG_0(long jarg1, ElementDesigner jarg1_);
  public final static native void ElementDesigner_crosec__SWIG_1(long jarg1, ElementDesigner jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native long new_ModelDesigner__SWIG_0(long jarg1, Response jarg1_, long jarg2, ActionVisitor jarg2_, long jarg3, long jarg4);
  public final static native long new_ModelDesigner__SWIG_1(long jarg1, Response jarg1_, long jarg2, ActionVisitor jarg2_, long jarg3);
  public final static native long new_ModelDesigner__SWIG_2(long jarg1, Response jarg1_, long jarg2, ActionVisitor jarg2_);
  public final static native void delete_ModelDesigner(long jarg1);
  public final static native void ModelDesigner_add(long jarg1, ModelDesigner jarg1_, long jarg2, CroSecState jarg2_, long jarg3, CroSecSpace jarg3_);
  public final static native int ModelDesigner_optimize(long jarg1, ModelDesigner jarg1_);
  public final static native int ModelDesigner_crosecInd2DesignSpaceInd(long jarg1, ModelDesigner jarg1_, long jarg2);
  public final static native int ModelDesigner_elemInd2DesignSpaceInd(long jarg1, ModelDesigner jarg1_, long jarg2);
  public final static native int ModelDesigner_maxULSDesignIterations__SWIG_0(long jarg1, ModelDesigner jarg1_);
  public final static native int ModelDesigner_maxULSDesignIterations__SWIG_1(long jarg1, ModelDesigner jarg1_, int jarg2);
  public final static native int ModelDesigner_maxSLSDesignIterations__SWIG_0(long jarg1, ModelDesigner jarg1_);
  public final static native int ModelDesigner_maxSLSDesignIterations__SWIG_1(long jarg1, ModelDesigner jarg1_, int jarg2);
  public final static native double ModelDesigner_maxDeformationTarget__SWIG_0(long jarg1, ModelDesigner jarg1_);
  public final static native double ModelDesigner_maxDeformationTarget__SWIG_1(long jarg1, ModelDesigner jarg1_, double jarg2);
  public final static native long new_VectStrain__SWIG_0();
  public final static native long new_VectStrain__SWIG_1(long jarg1);
  public final static native long VectStrain_size(long jarg1, VectStrain jarg1_);
  public final static native long VectStrain_capacity(long jarg1, VectStrain jarg1_);
  public final static native void VectStrain_reserve(long jarg1, VectStrain jarg1_, long jarg2);
  public final static native boolean VectStrain_isEmpty(long jarg1, VectStrain jarg1_);
  public final static native void VectStrain_clear(long jarg1, VectStrain jarg1_);
  public final static native void VectStrain_add(long jarg1, VectStrain jarg1_, long jarg2, CroSecStrain jarg2_);
  public final static native long VectStrain_get(long jarg1, VectStrain jarg1_, int jarg2);
  public final static native void VectStrain_set(long jarg1, VectStrain jarg1_, int jarg2, long jarg3, CroSecStrain jarg3_);
  public final static native void delete_VectStrain(long jarg1);
  public final static native long new_VectVec3d__SWIG_0();
  public final static native long new_VectVec3d__SWIG_1(long jarg1);
  public final static native long VectVec3d_size(long jarg1, VectVec3d jarg1_);
  public final static native long VectVec3d_capacity(long jarg1, VectVec3d jarg1_);
  public final static native void VectVec3d_reserve(long jarg1, VectVec3d jarg1_, long jarg2);
  public final static native boolean VectVec3d_isEmpty(long jarg1, VectVec3d jarg1_);
  public final static native void VectVec3d_clear(long jarg1, VectVec3d jarg1_);
  public final static native void VectVec3d_add(long jarg1, VectVec3d jarg1_, long jarg2, Vec3d jarg2_);
  public final static native long VectVec3d_get(long jarg1, VectVec3d jarg1_, int jarg2);
  public final static native void VectVec3d_set(long jarg1, VectVec3d jarg1_, int jarg2, long jarg3, Vec3d jarg3_);
  public final static native void delete_VectVec3d(long jarg1);
  public final static native long new_VectReal__SWIG_0();
  public final static native long new_VectReal__SWIG_1(long jarg1);
  public final static native long VectReal_size(long jarg1, VectReal jarg1_);
  public final static native long VectReal_capacity(long jarg1, VectReal jarg1_);
  public final static native void VectReal_reserve(long jarg1, VectReal jarg1_, long jarg2);
  public final static native boolean VectReal_isEmpty(long jarg1, VectReal jarg1_);
  public final static native void VectReal_clear(long jarg1, VectReal jarg1_);
  public final static native void VectReal_add(long jarg1, VectReal jarg1_, double jarg2);
  public final static native double VectReal_get(long jarg1, VectReal jarg1_, int jarg2);
  public final static native void VectReal_set(long jarg1, VectReal jarg1_, int jarg2, double jarg3);
  public final static native void delete_VectReal(long jarg1);
  public final static native long new_VectInt__SWIG_0();
  public final static native long new_VectInt__SWIG_1(long jarg1);
  public final static native long VectInt_size(long jarg1, VectInt jarg1_);
  public final static native long VectInt_capacity(long jarg1, VectInt jarg1_);
  public final static native void VectInt_reserve(long jarg1, VectInt jarg1_, long jarg2);
  public final static native boolean VectInt_isEmpty(long jarg1, VectInt jarg1_);
  public final static native void VectInt_clear(long jarg1, VectInt jarg1_);
  public final static native void VectInt_add(long jarg1, VectInt jarg1_, int jarg2);
  public final static native int VectInt_get(long jarg1, VectInt jarg1_, int jarg2);
  public final static native void VectInt_set(long jarg1, VectInt jarg1_, int jarg2, int jarg3);
  public final static native void delete_VectInt(long jarg1);
  public final static native long new_VectLong__SWIG_0();
  public final static native long new_VectLong__SWIG_1(long jarg1);
  public final static native long VectLong_size(long jarg1, VectLong jarg1_);
  public final static native long VectLong_capacity(long jarg1, VectLong jarg1_);
  public final static native void VectLong_reserve(long jarg1, VectLong jarg1_, long jarg2);
  public final static native boolean VectLong_isEmpty(long jarg1, VectLong jarg1_);
  public final static native void VectLong_clear(long jarg1, VectLong jarg1_);
  public final static native void VectLong_add(long jarg1, VectLong jarg1_, int jarg2);
  public final static native int VectLong_get(long jarg1, VectLong jarg1_, int jarg2);
  public final static native void VectLong_set(long jarg1, VectLong jarg1_, int jarg2, int jarg3);
  public final static native void delete_VectLong(long jarg1);
  public final static native long new_VectSizeT__SWIG_0();
  public final static native long new_VectSizeT__SWIG_1(long jarg1);
  public final static native long VectSizeT_size(long jarg1, VectSizeT jarg1_);
  public final static native long VectSizeT_capacity(long jarg1, VectSizeT jarg1_);
  public final static native void VectSizeT_reserve(long jarg1, VectSizeT jarg1_, long jarg2);
  public final static native boolean VectSizeT_isEmpty(long jarg1, VectSizeT jarg1_);
  public final static native void VectSizeT_clear(long jarg1, VectSizeT jarg1_);
  public final static native void VectSizeT_add(long jarg1, VectSizeT jarg1_, long jarg2);
  public final static native long VectSizeT_get(long jarg1, VectSizeT jarg1_, int jarg2);
  public final static native void VectSizeT_set(long jarg1, VectSizeT jarg1_, int jarg2, long jarg3);
  public final static native void delete_VectSizeT(long jarg1);
  public final static native long new_VectBool__SWIG_0();
  public final static native long new_VectBool__SWIG_1(long jarg1);
  public final static native long VectBool_size(long jarg1, VectBool jarg1_);
  public final static native long VectBool_capacity(long jarg1, VectBool jarg1_);
  public final static native void VectBool_reserve(long jarg1, VectBool jarg1_, long jarg2);
  public final static native boolean VectBool_isEmpty(long jarg1, VectBool jarg1_);
  public final static native void VectBool_clear(long jarg1, VectBool jarg1_);
  public final static native void VectBool_add(long jarg1, VectBool jarg1_, boolean jarg2);
  public final static native boolean VectBool_get(long jarg1, VectBool jarg1_, int jarg2);
  public final static native void VectBool_set(long jarg1, VectBool jarg1_, int jarg2, boolean jarg3);
  public final static native void delete_VectBool(long jarg1);
  public final static native long new_VectCroSec__SWIG_0();
  public final static native long new_VectCroSec__SWIG_1(long jarg1);
  public final static native long VectCroSec_size(long jarg1, VectCroSec jarg1_);
  public final static native long VectCroSec_capacity(long jarg1, VectCroSec jarg1_);
  public final static native void VectCroSec_reserve(long jarg1, VectCroSec jarg1_, long jarg2);
  public final static native boolean VectCroSec_isEmpty(long jarg1, VectCroSec jarg1_);
  public final static native void VectCroSec_clear(long jarg1, VectCroSec jarg1_);
  public final static native void VectCroSec_add(long jarg1, VectCroSec jarg1_, long jarg2, ElementCroSec jarg2_);
  public final static native long VectCroSec_get(long jarg1, VectCroSec jarg1_, int jarg2);
  public final static native void VectCroSec_set(long jarg1, VectCroSec jarg1_, int jarg2, long jarg3, ElementCroSec jarg3_);
  public final static native void delete_VectCroSec(long jarg1);
  public final static native long new_VectMaterial__SWIG_0();
  public final static native long new_VectMaterial__SWIG_1(long jarg1);
  public final static native long VectMaterial_size(long jarg1, VectMaterial jarg1_);
  public final static native long VectMaterial_capacity(long jarg1, VectMaterial jarg1_);
  public final static native void VectMaterial_reserve(long jarg1, VectMaterial jarg1_, long jarg2);
  public final static native boolean VectMaterial_isEmpty(long jarg1, VectMaterial jarg1_);
  public final static native void VectMaterial_clear(long jarg1, VectMaterial jarg1_);
  public final static native void VectMaterial_add(long jarg1, VectMaterial jarg1_, long jarg2, Material jarg2_);
  public final static native long VectMaterial_get(long jarg1, VectMaterial jarg1_, int jarg2);
  public final static native void VectMaterial_set(long jarg1, VectMaterial jarg1_, int jarg2, long jarg3, Material jarg3_);
  public final static native void delete_VectMaterial(long jarg1);
  public final static native long new_VectSurface3DSigEps__SWIG_0();
  public final static native long new_VectSurface3DSigEps__SWIG_1(long jarg1);
  public final static native long VectSurface3DSigEps_size(long jarg1, VectSurface3DSigEps jarg1_);
  public final static native long VectSurface3DSigEps_capacity(long jarg1, VectSurface3DSigEps jarg1_);
  public final static native void VectSurface3DSigEps_reserve(long jarg1, VectSurface3DSigEps jarg1_, long jarg2);
  public final static native boolean VectSurface3DSigEps_isEmpty(long jarg1, VectSurface3DSigEps jarg1_);
  public final static native void VectSurface3DSigEps_clear(long jarg1, VectSurface3DSigEps jarg1_);
  public final static native void VectSurface3DSigEps_add(long jarg1, VectSurface3DSigEps jarg1_, long jarg2, Surface3DSigEps jarg2_);
  public final static native long VectSurface3DSigEps_get(long jarg1, VectSurface3DSigEps jarg1_, int jarg2);
  public final static native void VectSurface3DSigEps_set(long jarg1, VectSurface3DSigEps jarg1_, int jarg2, long jarg3, Surface3DSigEps jarg3_);
  public final static native void delete_VectSurface3DSigEps(long jarg1);
  public final static native long new_VectSurface3DResultants__SWIG_0();
  public final static native long new_VectSurface3DResultants__SWIG_1(long jarg1);
  public final static native long VectSurface3DResultants_size(long jarg1, VectSurface3DResultants jarg1_);
  public final static native long VectSurface3DResultants_capacity(long jarg1, VectSurface3DResultants jarg1_);
  public final static native void VectSurface3DResultants_reserve(long jarg1, VectSurface3DResultants jarg1_, long jarg2);
  public final static native boolean VectSurface3DResultants_isEmpty(long jarg1, VectSurface3DResultants jarg1_);
  public final static native void VectSurface3DResultants_clear(long jarg1, VectSurface3DResultants jarg1_);
  public final static native void VectSurface3DResultants_add(long jarg1, VectSurface3DResultants jarg1_, long jarg2, Surface3DResultants jarg2_);
  public final static native long VectSurface3DResultants_get(long jarg1, VectSurface3DResultants jarg1_, int jarg2);
  public final static native void VectSurface3DResultants_set(long jarg1, VectSurface3DResultants jarg1_, int jarg2, long jarg3, Surface3DResultants jarg3_);
  public final static native void delete_VectSurface3DResultants(long jarg1);
  public final static native long new_VectElem__SWIG_0();
  public final static native long new_VectElem__SWIG_1(long jarg1);
  public final static native long VectElem_size(long jarg1, VectElem jarg1_);
  public final static native long VectElem_capacity(long jarg1, VectElem jarg1_);
  public final static native void VectElem_reserve(long jarg1, VectElem jarg1_, long jarg2);
  public final static native boolean VectElem_isEmpty(long jarg1, VectElem jarg1_);
  public final static native void VectElem_clear(long jarg1, VectElem jarg1_);
  public final static native void VectElem_add(long jarg1, VectElem jarg1_, long jarg2, Element jarg2_);
  public final static native long VectElem_get(long jarg1, VectElem jarg1_, int jarg2);
  public final static native void VectElem_set(long jarg1, VectElem jarg1_, int jarg2, long jarg3, Element jarg3_);
  public final static native void delete_VectElem(long jarg1);
  public final static native long new_VectNode__SWIG_0();
  public final static native long new_VectNode__SWIG_1(long jarg1);
  public final static native long VectNode_size(long jarg1, VectNode jarg1_);
  public final static native long VectNode_capacity(long jarg1, VectNode jarg1_);
  public final static native void VectNode_reserve(long jarg1, VectNode jarg1_, long jarg2);
  public final static native boolean VectNode_isEmpty(long jarg1, VectNode jarg1_);
  public final static native void VectNode_clear(long jarg1, VectNode jarg1_);
  public final static native void VectNode_add(long jarg1, VectNode jarg1_, long jarg2, Node jarg2_);
  public final static native long VectNode_get(long jarg1, VectNode jarg1_, int jarg2);
  public final static native void VectNode_set(long jarg1, VectNode jarg1_, int jarg2, long jarg3, Node jarg3_);
  public final static native void delete_VectNode(long jarg1);
  public final static native long new_VectTriShell3D__SWIG_0();
  public final static native long new_VectTriShell3D__SWIG_1(long jarg1);
  public final static native long VectTriShell3D_size(long jarg1, VectTriShell3D jarg1_);
  public final static native long VectTriShell3D_capacity(long jarg1, VectTriShell3D jarg1_);
  public final static native void VectTriShell3D_reserve(long jarg1, VectTriShell3D jarg1_, long jarg2);
  public final static native boolean VectTriShell3D_isEmpty(long jarg1, VectTriShell3D jarg1_);
  public final static native void VectTriShell3D_clear(long jarg1, VectTriShell3D jarg1_);
  public final static native void VectTriShell3D_add(long jarg1, VectTriShell3D jarg1_, long jarg2, TriShell3D jarg2_);
  public final static native long VectTriShell3D_get(long jarg1, VectTriShell3D jarg1_, int jarg2);
  public final static native void VectTriShell3D_set(long jarg1, VectTriShell3D jarg1_, int jarg2, long jarg3, TriShell3D jarg3_);
  public final static native void delete_VectTriShell3D(long jarg1);
  public final static native long new_VectFlowPathPos__SWIG_0();
  public final static native long new_VectFlowPathPos__SWIG_1(long jarg1);
  public final static native long VectFlowPathPos_size(long jarg1, VectFlowPathPos jarg1_);
  public final static native long VectFlowPathPos_capacity(long jarg1, VectFlowPathPos jarg1_);
  public final static native void VectFlowPathPos_reserve(long jarg1, VectFlowPathPos jarg1_, long jarg2);
  public final static native boolean VectFlowPathPos_isEmpty(long jarg1, VectFlowPathPos jarg1_);
  public final static native void VectFlowPathPos_clear(long jarg1, VectFlowPathPos jarg1_);
  public final static native void VectFlowPathPos_add(long jarg1, VectFlowPathPos jarg1_, long jarg2, FlowPathPos jarg2_);
  public final static native long VectFlowPathPos_get(long jarg1, VectFlowPathPos jarg1_, int jarg2);
  public final static native void VectFlowPathPos_set(long jarg1, VectFlowPathPos jarg1_, int jarg2, long jarg3, FlowPathPos jarg3_);
  public final static native void delete_VectFlowPathPos(long jarg1);
  public final static native long NKDTree_SWIGUpcast(long jarg1);
  public final static native long CooSys_SWIGUpcast(long jarg1);
  public final static native long Vertex_SWIGUpcast(long jarg1);
  public final static native long VertexSet_SWIGUpcast(long jarg1);
  public final static native long Edge_SWIGUpcast(long jarg1);
  public final static native long TriFace_SWIGUpcast(long jarg1);
  public final static native long Mesh_SWIGUpcast(long jarg1);
  public final static native long GeModel_SWIGUpcast(long jarg1);
  public final static native long Stitch_SWIGUpcast(long jarg1);
  public final static native long StackedStitch_SWIGUpcast(long jarg1);
  public final static native long StackedStitchV2_SWIGUpcast(long jarg1);
  public final static native long ProxyStitch_SWIGUpcast(long jarg1);
  public final static native long InterShape_SWIGUpcast(long jarg1);
  public final static native long DeformThII_SWIGUpcast(long jarg1);
  public final static native long Eigenform_SWIGUpcast(long jarg1);
  public final static native long NaturalVibe_SWIGUpcast(long jarg1);
  public final static native long Buckling_SWIGUpcast(long jarg1);
  public final static native long BoundaryCondition_SWIGUpcast(long jarg1);
  public final static native long Eccentricity_SWIGUpcast(long jarg1);
  public final static native long Model_SWIGUpcast(long jarg1);
  public final static native long Node_SWIGUpcast(long jarg1);
  public final static native long Load_SWIGUpcast(long jarg1);
  public final static native long LoadUniformlyDistributed_SWIGUpcast(long jarg1);
  public final static native long InitialStrain_SWIGUpcast(long jarg1);
  public final static native long GeometricImperfection_SWIGUpcast(long jarg1);
  public final static native long LoadPoint_SWIGUpcast(long jarg1);
  public final static native long NodeState_SWIGUpcast(long jarg1);
  public final static native long PointState_SWIGUpcast(long jarg1);
  public final static native long PointStateTrans_SWIGUpcast(long jarg1);
  public final static native long PointStateTransRot_SWIGUpcast(long jarg1);
  public final static native long Material_SWIGUpcast(long jarg1);
  public final static native long Element_SWIGUpcast(long jarg1);
  public final static native long Element_Impl_SWIGUpcast(long jarg1);
  public final static native long ElementCroSec_SWIGUpcast(long jarg1);
  public final static native long ElementState_SWIGUpcast(long jarg1);
  public final static native long ElementStraightLine_SWIGUpcast(long jarg1);
  public final static native long ElementStraightLineState_SWIGUpcast(long jarg1);
  public final static native long Truss3D_SWIGUpcast(long jarg1);
  public final static native long Truss3DCroSec_SWIGUpcast(long jarg1);
  public final static native long Truss3DState_SWIGUpcast(long jarg1);
  public final static native long Truss3DLoadInfo_SWIGUpcast(long jarg1);
  public final static native long Beam3D_SWIGUpcast(long jarg1);
  public final static native long Beam3DCroSec_SWIGUpcast(long jarg1);
  public final static native long Beam3DCroSec_I_SWIGUpcast(long jarg1);
  public final static native long Beam3DCroSec_RHS_SWIGUpcast(long jarg1);
  public final static native long Beam3DCroSec_CHS_SWIGUpcast(long jarg1);
  public final static native long Beam3DState_SWIGUpcast(long jarg1);
  public final static native long Beam3DLoadInfo_SWIGUpcast(long jarg1);
  public final static native long Spring3D_SWIGUpcast(long jarg1);
  public final static native long Spring3DProperties_SWIGUpcast(long jarg1);
  public final static native long Spring3DState_SWIGUpcast(long jarg1);
  public final static native long TriShell3dLoadInfo_SWIGUpcast(long jarg1);
  public final static native long TriShell3D_SWIGUpcast(long jarg1);
  public final static native long Surface3dFirstPrincipalStress_SWIGUpcast(long jarg1);
  public final static native long Surface3dSecondPrincipalStress_SWIGUpcast(long jarg1);
  public final static native long Surface3dFirstPrincipalKapa_SWIGUpcast(long jarg1);
  public final static native long Surface3dSecondPrincipalKapa_SWIGUpcast(long jarg1);
  public final static native long ShellMesh_SWIGUpcast(long jarg1);
  public final static native long ConstantElementDirectionStrategy_SWIGUpcast(long jarg1);
  public final static native long NeaerstElementDirectionStrategy_SWIGUpcast(long jarg1);
  public final static native long TriStreamTriangle2ndOrder_SWIGUpcast(long jarg1);
  public final static native long Surface3DCroSec_SWIGUpcast(long jarg1);
  public final static native long Surface3DState_SWIGUpcast(long jarg1);
  public final static native long ElemSLDimElastic_SWIGUpcast(long jarg1);
  public final static native long ElemSLDimPlastic_SWIGUpcast(long jarg1);
  public final static native long ActionVisitor_SWIGUpcast(long jarg1);
  public final static native long ElasticCroSecState_EC3_Simplified_SWIGUpcast(long jarg1);
  public final static native long PlasticCroSecState_EC3_Simplified_SWIGUpcast(long jarg1);
  public final static native long ElasticCroSecState_EC3_SWIGUpcast(long jarg1);
  public final static native long PlasticCroSecState_EC3_SWIGUpcast(long jarg1);
  public final static native long CroSecStateImp_LinearElastic_Shell_SWIGUpcast(long jarg1);
  public final static native long CroSecStateImp_Plastic_Shell_SWIGUpcast(long jarg1);
  public final static native long CroSecStateImp_LinearElastic_Beam_EC3_SWIGUpcast(long jarg1);
  public final static native long CroSecStateImp_Plastic_Beam_EC3_SWIGUpcast(long jarg1);
  public final static native long CroSecStateVisitor_EC3_SWIGUpcast(long jarg1);
}
