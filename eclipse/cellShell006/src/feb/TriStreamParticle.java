/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package feb;

public class TriStreamParticle {
  private long swigCPtr;
  public boolean swigCMemOwn;

  public TriStreamParticle(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(TriStreamParticle obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        karambaJNI.delete_TriStreamParticle(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public TriStreamParticle(TriStreamTriangle tri) {
    this(karambaJNI.new_TriStreamParticle__SWIG_0(TriStreamTriangle.getCPtr(tri), tri), true);
  }

  public TriStreamParticle(TriStreamParticle other) {
    this(karambaJNI.new_TriStreamParticle__SWIG_1(TriStreamParticle.getCPtr(other), other), true);
  }

  public void jumpTo(TriStreamTriangle tri_new) {
    karambaJNI.TriStreamParticle_jumpTo(swigCPtr, this, TriStreamTriangle.getCPtr(tri_new), tri_new);
  }

  public boolean pathIsCircular(long first_ind) {
    return karambaJNI.TriStreamParticle_pathIsCircular__SWIG_0(swigCPtr, this, first_ind);
  }

  public boolean pathIsCircular() {
    return karambaJNI.TriStreamParticle_pathIsCircular__SWIG_1(swigCPtr, this);
  }

  public void adjustBarycentricCoordinates(double Ltol) {
    karambaJNI.TriStreamParticle_adjustBarycentricCoordinates(swigCPtr, this, Ltol);
  }

  public void setL(Vec3d value) {
    karambaJNI.TriStreamParticle_L_set(swigCPtr, this, Vec3d.getCPtr(value), value);
  }

  public Vec3d getL() {
    long cPtr = karambaJNI.TriStreamParticle_L_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Vec3d(cPtr, false);
  }

  public void setB(Vec3d value) {
    karambaJNI.TriStreamParticle_b_set(swigCPtr, this, Vec3d.getCPtr(value), value);
  }

  public Vec3d getB() {
    long cPtr = karambaJNI.TriStreamParticle_b_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Vec3d(cPtr, false);
  }

  public void setDir(boolean value) {
    karambaJNI.TriStreamParticle_dir_set(swigCPtr, this, value);
  }

  public boolean getDir() {
    return karambaJNI.TriStreamParticle_dir_get(swigCPtr, this);
  }

  public void setInertia(boolean value) {
    karambaJNI.TriStreamParticle_inertia_set(swigCPtr, this, value);
  }

  public boolean getInertia() {
    return karambaJNI.TriStreamParticle_inertia_get(swigCPtr, this);
  }

  public void setEdge(int value) {
    karambaJNI.TriStreamParticle_edge_set(swigCPtr, this, value);
  }

  public int getEdge() {
    return karambaJNI.TriStreamParticle_edge_get(swigCPtr, this);
  }

  public void setPath(VectFlowPathPos value) {
    karambaJNI.TriStreamParticle_path_set(swigCPtr, this, VectFlowPathPos.getCPtr(value), value);
  }

  public VectFlowPathPos getPath() {
    long cPtr = karambaJNI.TriStreamParticle_path_get(swigCPtr, this);
    return (cPtr == 0) ? null : new VectFlowPathPos(cPtr, false);
  }

  public long edgeNodeInd(long ind) {
    return karambaJNI.TriStreamParticle_edgeNodeInd(swigCPtr, this, ind);
  }

}
